{"version":3,"sources":["api/apis.ts","api/base.ts","api/authorization.ts","tokenHandler.ts","store/user.ts","api/baseWithAuthorization.ts","api/language.ts","api/subject.ts","RegExps.ts","api/user.ts","store/language.ts","components/Authorization/SignIn.tsx","components/Authorization/SignUp.tsx","api/projects.ts","store/subject.ts","enums.ts","components/Menu/Menu.tsx","components/Header/Header.tsx","components/AvailableProjects/AvailableProjects.tsx","images/home-background.png","components/HomePage/HomePage.tsx","images/not-found.png","components/Project/Project.tsx","api/quota.ts","components/Qoute/Quote.tsx","components/TranslatorProfile/TranslatorProfile.tsx","components/UserProfile/UserProfile.tsx","components/UserProjects/TranslatorProjects.tsx","api/file.ts","api/payment.ts","components/PaymentModal/PaymentModal.tsx","components/UserProjects/UserProjects.tsx","components/FallbackComponent/FallbackComponent.tsx","components/IncomePage/IncomePage.tsx","api/income.ts","images/languages.png","components/LanguagesPage/LanguagesPage.tsx","components/SubjectsPage/SubjectsPage.tsx","components/Projects/Projects.tsx","components/ProjectsPage/ProjectsPage.tsx","components/UserPage/UserPage.tsx","components/UsersPage/UsersPage.tsx","App.tsx","store/index.ts","index.tsx"],"names":["clientApi","adminApi","translatorApi","quotaHub","stringsHub","commentsHub","request","url","options","a","fetch","response","json","result","isSuccess","data","Error","errorMessage","message","localStorage","clear","location","reload","signIn","email","password","method","headers","body","JSON","stringify","signUp","signUpModel","refresh","tokens","isRefreshing","isJwtExpired","token","exp","jwtDecode","currentTime","Date","getTime","ActionTypes","setTokens","setItem","authorizationToken","refreshToken","getRefreshToken","getItem","getAuthorizationToken","newTokens","setRole","role","getRole","getAuthorizationOptions","Authorization","newOptions","baseRequest","getLanguages","changeLanguageStatus","langId","getSubjects","deleteSubject","subjectId","passwordTest","emailTest","getUser","getUserById","userId","getTranslatorById","getProjectsInfo","updateName","firstname","lastname","updatePersonalInfo","website","company","updateEmail","updatePassword","oldPassword","newPassword","getTranslatorInfo","getUsers","accountType","userActions","setUser","user","type","SetUser","value","loadUser","dispatch","toString","userSelectors","state","SignIn","handleError","useErrorHandler","navigate","useNavigate","useDispatch","useState","setEmail","setPassword","hasPasswordError","setPasswordError","hasEmailError","setEmailError","handleSubmit","event","preventDefault","className","to","onSubmit","placeholder","required","onChange","target","onBlur","test","classNames","SignUp","setFirstname","setLastname","setAccountType","authorization__placeholder","disabled","getProjectStrings","id","lang","page","getProjectString","stringId","getProjectInfo","getComments","sendComment","text","sendProjectString","approveProject","getProjects","projectStatus","joinProject","projectId","targetLangId","getAdminProjects","sourceLangId","isTranslator","undefined","languagesActions","languages","SetLanguages","languagesSelectors","AccountType","ProjectStatus","subjectsActions","subjects","SetSubjects","subjectsSelectors","Menu","match","useMatch","useSelector","isActive","setActive","node","useRef","clickOutside","useCallback","e","current","contains","useEffect","document","addEventListener","removeEventListener","handleLogOut","ref","onClick","User","Translator","Admin","Header","AvailableProjects","selectedSubject","setSelectedSubject","selectedSourceLang","setSourceLang","selectedTargetLang","setTargetLang","projects","setProjects","filteredSubjects","setFilteredSubjects","filteredSourceLanguages","setFilteredSourceLanguages","translatorInfo","setTranslatorInfo","newProjects","newTranslatorInfo","newSubjects","filter","subject","subjectIds","includes","newSourceLang","language","languagesPairs","some","translatorLang","sourceLanguageId","filteredTargetLanguages","useMemo","outputLanguageId","handleChoose","nativeEvent","map","project","fileName","sourceLanguage","targetLanguage","wordsCount","href","HomePage","src","homeBackground","alt","Project","useParams","setPage","notFound","setNotFound","strings","setStrings","pagesCount","setPagesCount","selectedStringId","setSelectedStringId","translation","setTranslation","translationError","setTranslationError","projectInfo","setProjectInfo","comments","setComments","comment","setComment","stringsConnection","setStringsConnection","commentsConnection","setCommentsConnection","isNotCustomer","isNotTranslator","newProjectInfo","newStrings","newConnection","HubConnectionBuilder","configureLogging","LogLevel","Information","withUrl","skipNegotiation","transport","HttpTransportType","WebSockets","withAutomaticReconnect","build","newCommentsConnection","start","on","str","oldStrings","s","newComments","HubConnectionState","Connected","invoke","forEach","find","translatedString","handleSendComment","key","handleSelectedString","handlePage","newPage","handleTranslation","handleSendTranslation","shiftKey","sendProjectStringTranslation","handleApprove","l","background","originalString","isEditing","onKeyPress","projectName","preferences","length","c","userName","name","initCookies","quote","sessionStorage","sendFileForTranslating","file","quoteId","FormData","append","saveProject","Quote","setQuote","connection","setConnection","setQuoteId","setSubject","setSourceLanguage","setPreferences","newQuoteId","quota","languageCode","handleFile","files","handleDeleteLanguage","targetLanguages","handleOutputLanguage","handleSubject","handleSourceLanguage","handleSave","price","removeItem","htmlFor","accept","selectedLanguage","isCounting","TranslatorProfile","setNewPassword","isWrongPassword","setWrongPassword","hasNewPasswordError","setNewPasswordError","hasFirstnameError","setFirstnameError","hasLastnameError","setLastnameError","selectedSubjects","setSelectedSubjects","selectedLanguages","setSelectedLanguages","outputLanguage","setOutputLanguage","handleUpdate","newUser","active","completed","money","newSelectedSubjects","handleDeleteSubject","isAdded","languagePair","sourceLang","outputLang","newSelectedLanguages","UserProfile","personalInfo","setPersonalInfo","setWebsite","setCompany","console","log","newInfo","newPersonalInfo","waiting","TranslatorProjects","Active","statusProject","setStatusProject","handleTabClick","status","Completed","transaltedWordsCount","parse","startDate","toDateString","endDate","ok","blob","downloadFile","fileDownload","payment","nonce","PaymentModal","show","setShow","onPaymentComplete","braintreeInstance","setBraintreeInstance","initializeBraintree","dropin","authorization","container","error","instance","teardown","then","aria-label","requestPaymentMethod","payload","paymentMethodNonce","UserProjects","Unpaid","showModal","setShowModal","selectedProjectId","setProjectId","completePayment","handleDownload","handlePay","FallbackComponent","resetErrorBoundary","IncomePage","income","setIncome","setTargetLanguage","userPrice","setUserPrice","translatorPrice","setTranslatorPrice","newIncome","newPrice","pricePerUnitInput","pricePerUnitOutput","targetLanguageId","totalIncome","totalPayments","replace","LanguagesPage","handleChangeState","newLanguages","SubjectsPage","newSubject","handleDelete","handleAdd","isNotExist","every","Projects","setProjectStatus","translator","setTranslator","newTranslator","ProjectsPage","UserPage","UsersPage","users","setUsers","newUsers","projectCount","totalMoney","App","path","element","reducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e1f2907.chunk.js","sourcesContent":["export const clientApi = 'https://wordsly-client.azurewebsites.net';\r\nexport const adminApi = 'https://wordsly-admin.azurewebsites.net';\r\nexport const translatorApi = 'https://wordsly-translator.azurewebsites.net';\r\nexport const quotaHub = `${clientApi}/hub/quota`;\r\nexport const stringsHub = `${translatorApi}/hub/strings`;\r\nexport const commentsHub = `${translatorApi}/hub/comments`;\r\n","import { Result } from '../types';\r\n\r\nexport const request = async <T>(url: string, options?: RequestInit): Promise<T> => {\r\n  const response = await fetch(url, options);\r\n\r\n  try {\r\n    const result: Result<T> = await response.json();\r\n\r\n    if (result.isSuccess) {\r\n      return result.data;\r\n    }\r\n\r\n    throw new Error(result.errorMessage);\r\n    // eslint-disable-next-line\r\n  } catch (e: any) {\r\n    if (e.message === 'The refresh token is not valid.') {\r\n      localStorage.clear();\r\n      // eslint-disable-next-line no-restricted-globals\r\n      location.reload();\r\n    }\r\n\r\n    throw e;\r\n  }\r\n};\r\n","import { Tokens, SignUpModel } from '../types';\r\nimport { clientApi } from './apis';\r\nimport { request } from './base';\r\n\r\nexport const signIn = async (email: string, password: string): Promise<Tokens> => {\r\n  return request(`${clientApi}/api/Auth/sign-in`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n      password,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const signUp = async (signUpModel: SignUpModel): Promise<Tokens> => {\r\n  return request(`${clientApi}/api/Auth/sign-up`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(signUpModel),\r\n  });\r\n};\r\n\r\nexport const refresh = async (tokens: Tokens): Promise<Tokens> => {\r\n  return request(`${clientApi}/api/Auth/refresh`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(tokens),\r\n  });\r\n};\r\n","import jwtDecode, { JwtPayload } from 'jwt-decode';\r\nimport { refresh } from './api/authorization';\r\nimport { Tokens } from './types';\r\n\r\nlet isRefreshing = false;\r\n\r\nfunction isJwtExpired(token: string) {\r\n  const { exp } = jwtDecode<JwtPayload>(token);\r\n  const currentTime = new Date().getTime() / 1000;\r\n\r\n  if (exp && currentTime > exp) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport const setTokens = (tokens: Tokens) => {\r\n  localStorage.setItem('authorizationToken', tokens.authorizationToken);\r\n  localStorage.setItem('refreshToken', tokens.refreshToken);\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nexport const getRefreshToken = (): string | null => {\r\n  return localStorage.getItem('refreshToken');\r\n};\r\n\r\nexport const getAuthorizationToken = async (): Promise<string | null> => {\r\n  const authorizationToken = localStorage.getItem('authorizationToken');\r\n  const refreshToken = getRefreshToken();\r\n\r\n  if (!authorizationToken || !refreshToken) {\r\n    return null;\r\n  }\r\n\r\n  if (isJwtExpired(authorizationToken) && !isRefreshing) {\r\n    isRefreshing = true;\r\n\r\n    const newTokens = await refresh({\r\n      authorizationToken,\r\n      refreshToken,\r\n    });\r\n\r\n    setTokens(newTokens);\r\n    isRefreshing = false;\r\n\r\n    return newTokens.authorizationToken;\r\n  }\r\n\r\n  return authorizationToken;\r\n};\r\n\r\nexport const setRole = (role: string) => {\r\n  localStorage.setItem('role', role);\r\n};\r\n\r\nexport const getRole = (): string => {\r\n  return localStorage.getItem('role') || '';\r\n};\r\n","import { AnyAction, Dispatch } from 'redux';\r\nimport { getUser } from '../api/user';\r\nimport { getRefreshToken, setRole } from '../tokenHandler';\r\nimport { User, State } from '../types';\r\n\r\nenum ActionTypes {\r\n  SetUser = 'user/set',\r\n}\r\n\r\nexport const userActions = {\r\n  setUser: (user: User | null): AnyAction => ({\r\n    type: ActionTypes.SetUser,\r\n    value: user,\r\n  }),\r\n\r\n  loadUser: () => async (dispatch: Dispatch<AnyAction>) => {\r\n    if (getRefreshToken()) {\r\n      const user = await getUser();\r\n\r\n      setRole(user.accountType.toString());\r\n      dispatch(userActions.setUser(user));\r\n    } else {\r\n      setRole('');\r\n      dispatch(userActions.setUser(null));\r\n    }\r\n  },\r\n};\r\n\r\nexport const userSelectors = {\r\n  getUser: (state: State): User | null => state.user,\r\n};\r\n\r\nexport const userReducer = (state: User | null = null, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SetUser:\r\n      return action.value ? { ...action.value } : null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { getAuthorizationToken } from '../tokenHandler';\r\nimport { request as baseRequest } from './base';\r\n\r\nexport const getAuthorizationOptions = async (options?: RequestInit)\r\n: Promise<RequestInit | undefined> => {\r\n  const token = await getAuthorizationToken();\r\n\r\n  if (!token) {\r\n    return options;\r\n  }\r\n\r\n  if (options) {\r\n    return {\r\n      ...options,\r\n      headers: {\r\n        ...options.headers,\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n};\r\n\r\nexport const request = async <T>(url: string, options?: RequestInit): Promise<T> => {\r\n  const newOptions = await getAuthorizationOptions(options);\r\n\r\n  return baseRequest(url, newOptions);\r\n};\r\n","import { Language } from '../types';\r\nimport { adminApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const getLanguages = async (): Promise<Language[]> => {\r\n  return request(`${adminApi}/api/Languages`);\r\n};\r\n\r\nexport const changeLanguageStatus = (langId: number): Promise<void> => {\r\n  return request(`${adminApi}/api/Languages/${langId}`, {\r\n    method: 'PUT',\r\n  });\r\n};\r\n","import { Subject } from '../types';\r\nimport { adminApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const getSubjects = async (): Promise<Subject[]> => {\r\n  return request(`${adminApi}/api/Subjects`);\r\n};\r\n\r\nexport const deleteSubject = (subjectId: number): Promise<void> => {\r\n  return request(`${adminApi}/api/Subjects/${subjectId}`, {\r\n    method: 'DELETE',\r\n  });\r\n};\r\n\r\nexport const addSubject = (text: string): Promise<void> => {\r\n  return request(`${adminApi}/api/Subjects`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      text,\r\n    }),\r\n  });\r\n};\r\n","export const passwordTest = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\nexport const emailTest = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n","import { AccountType } from '../enums';\r\nimport {\r\n  LanguagePair,\r\n  PersonalInfo,\r\n  Translator,\r\n  TranslatorInfo,\r\n  User,\r\n  UserProjects,\r\n  UserView,\r\n} from '../types';\r\nimport { adminApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const getUser = (): Promise<User> => {\r\n  return request(`${adminApi}/api/Users`);\r\n};\r\n\r\nexport const getUserById = (userId: number): Promise<User> => {\r\n  return request(`${adminApi}/api/Users/${userId}`);\r\n};\r\n\r\nexport const getTranslatorById = (userId: number): Promise<Translator> => {\r\n  return request(`${adminApi}/api/Users/translator/${userId}`);\r\n};\r\n\r\nexport const getProjectsInfo = (): Promise<UserProjects> => {\r\n  return request(`${adminApi}/api/Users/projects-info`);\r\n};\r\n\r\nexport const getPersonalInfo = (): Promise<PersonalInfo> => {\r\n  return request(`${adminApi}/api/Users/personal-info`);\r\n};\r\n\r\nexport const updateName = (firstname: string, lastname: string): Promise<User> => {\r\n  return request(`${adminApi}/api/Users/name`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      firstname,\r\n      lastname,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const updatePersonalInfo = (website: string, company: string): Promise<PersonalInfo> => {\r\n  return request(`${adminApi}/api/Users/personal-info`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      website,\r\n      company,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const updateEmail = (email: string): Promise<User> => {\r\n  return request(`${adminApi}/api/Users/email`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const updatePassword = (oldPassword: string, newPassword: string): Promise<void> => {\r\n  return request(`${adminApi}/api/Users/password`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      oldPassword,\r\n      newPassword,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const getTranslatorInfo = (): Promise<TranslatorInfo> => {\r\n  return request(`${adminApi}/api/Users/translator-info`);\r\n};\r\n\r\nexport const updateTranslatorInfo = (\r\n  subjectIds: number[],\r\n  languagesPairs: LanguagePair[],\r\n): Promise<TranslatorInfo> => {\r\n  return request(`${adminApi}/api/Users/translator-info`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      subjectIds,\r\n      languagesPairs,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const getUsers = (accountType: AccountType): Promise<UserView[]> => {\r\n  return request(`${adminApi}/api/Users/all?accountType=${accountType}`);\r\n};\r\n","import { AnyAction } from 'redux';\r\nimport { Language, State } from '../types';\r\n\r\nenum ActionTypes {\r\n  SetLanguages = 'languages/set',\r\n}\r\n\r\nexport const languagesActions = {\r\n  setLanguages: (languages: Language[]): AnyAction => ({\r\n    type: ActionTypes.SetLanguages,\r\n    value: languages,\r\n  }),\r\n};\r\n\r\nexport const languagesSelectors = {\r\n  getLanguages: (state: State): Language[] => state.languages,\r\n};\r\n\r\nexport const languagesReducer = (state: Language[] = [], action: AnyAction) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SetLanguages:\r\n      return [...action.value];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { signIn } from '../../api/authorization';\r\nimport { emailTest, passwordTest } from '../../RegExps';\r\nimport { userActions } from '../../store/user';\r\nimport { setTokens } from '../../tokenHandler';\r\nimport './Authorization.scss';\r\nimport { getUser } from '../../api/user';\r\n\r\nexport const SignIn: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [hasPasswordError, setPasswordError] = useState(false);\r\n  const [hasEmailError, setEmailError] = useState(false);\r\n\r\n  const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setEmailError(false);\r\n    setEmail(value);\r\n  };\r\n\r\n  const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setPasswordError(false);\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (hasEmailError || hasPasswordError) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const tokens = await signIn(email, password);\r\n\r\n      setTokens(tokens);\r\n\r\n      const user = await getUser();\r\n\r\n      dispatch(userActions.setUser(user));\r\n      navigate('/profile');\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    if (!emailTest.test(email)) {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (!passwordTest.test(password)) {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authorization\">\r\n      <h1\r\n        className=\"title has-text-white has-text-weight-light is-size-1 mb-6\"\r\n      >\r\n        Sign in to\r\n        <Link to=\"/\" className=\"has-text-primary-dark\"> Wordsly</Link>\r\n      </h1>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"authorization__form mb-3\"\r\n      >\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={handleEmail}\r\n            onBlur={validateEmail}\r\n            className={classNames('input is-rounded has-text-weight-light is-medium', { 'is-danger': hasEmailError })}\r\n          />\r\n          {hasEmailError && (\r\n            <p className=\"authorization__error help is-danger\">Please, enter a valid email</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={handlePassword}\r\n            onBlur={validatePassword}\r\n            className={classNames('input is-rounded has-text-weight-light is-medium', { 'is-danger': hasPasswordError })}\r\n          />\r\n          {hasPasswordError && (\r\n            <p className=\"authorization__error help is-danger\">\r\n              Password must contain at least 8 characters, one digit,\r\n              one uppercase and lowercase letter\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"authorization__button button is-fullwidth is-rounded is-medium\"\r\n        >\r\n          Sign in\r\n        </button>\r\n      </form>\r\n\r\n      <p className=\"has-text-white has-text-weight-light is-size-5\">\r\n        Don&apos;t have an account yet?&nbsp;\r\n        <Link\r\n          to=\"/sign-up\"\r\n          className=\"has-text-primary-dark\"\r\n        >\r\n          Sign up\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { signUp } from '../../api/authorization';\r\nimport { emailTest, passwordTest } from '../../RegExps';\r\nimport { userActions } from '../../store/user';\r\nimport { setTokens } from '../../tokenHandler';\r\nimport './Authorization.scss';\r\nimport { getUser } from '../../api/user';\r\n\r\nexport const SignUp: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [accountType, setAccountType] = useState('0');\r\n  const [hasPasswordError, setPasswordError] = useState(false);\r\n  const [hasEmailError, setEmailError] = useState(false);\r\n\r\n  const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setEmailError(false);\r\n    setEmail(value);\r\n  };\r\n\r\n  const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setPasswordError(false);\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleFirstname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setFirstname(value);\r\n  };\r\n\r\n  const handleLastname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setLastname(value);\r\n  };\r\n\r\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setAccountType(value);\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (hasEmailError || hasPasswordError || accountType === '0') {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const tokens = await signUp({\r\n        email,\r\n        password,\r\n        firstname,\r\n        lastname,\r\n        accountType: +accountType,\r\n      });\r\n\r\n      setTokens(tokens);\r\n\r\n      const user = await getUser();\r\n\r\n      dispatch(userActions.setUser(user));\r\n      navigate('/profile');\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    if (!emailTest.test(email)) {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (!passwordTest.test(password)) {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authorization\">\r\n      <h1\r\n        className=\"title has-text-white has-text-weight-light is-size-1 mb-6\"\r\n      >\r\n        Sign up to\r\n        <Link to=\"/\" className=\"has-text-primary-dark\"> Wordsly</Link>\r\n      </h1>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"authorization__form mb-3\"\r\n      >\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Firstname\"\r\n            required\r\n            value={firstname}\r\n            onChange={handleFirstname}\r\n            className=\"input is-rounded has-text-weight-light is-medium\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Lastname\"\r\n            required\r\n            value={lastname}\r\n            onChange={handleLastname}\r\n            className=\"input is-rounded has-text-weight-light is-medium\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={handleEmail}\r\n            onBlur={validateEmail}\r\n            className={classNames('input is-rounded has-text-weight-light is-medium', { 'is-danger': hasEmailError })}\r\n          />\r\n          {hasEmailError && (\r\n            <p className=\"authorization__error help is-danger\">Please, enter a valid email</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={handlePassword}\r\n            onBlur={validatePassword}\r\n            className={classNames('input is-rounded has-text-weight-light is-medium', { 'is-danger': hasPasswordError })}\r\n          />\r\n          {hasPasswordError && (\r\n            <p className=\"authorization__error help is-danger\">\r\n              Password must contain at least 8 characters, one digit,\r\n              one uppercase and lowercase letter\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className={classNames('select is-rounded is-fullwidth is-medium', { authorization__placeholder: accountType === '0' })}>\r\n            <select\r\n              value={accountType}\r\n              onChange={handleSelect}\r\n              className=\"has-text-weight-light\"\r\n            >\r\n              <option value=\"0\" disabled>Choose your account type</option>\r\n              <option value=\"1\">Customer</option>\r\n              <option value=\"2\">Translator</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"authorization__button button is-fullwidth is-rounded is-medium\"\r\n        >\r\n          Sign up\r\n        </button>\r\n      </form>\r\n\r\n      <p className=\"has-text-white has-text-weight-light is-size-5\">\r\n        Already have an account?&nbsp;\r\n        <Link\r\n          to=\"/sign-in\"\r\n          className=\"has-text-primary-dark\"\r\n        >\r\n          Sign in\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  PaginationResult,\r\n  ProjectInfo,\r\n  StringComment,\r\n  StringModel,\r\n  Project,\r\n} from '../types';\r\nimport { ProjectStatus } from '../enums';\r\nimport { adminApi, translatorApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const getProjectStrings = (\r\n  id: string,\r\n  lang: string,\r\n  page: number,\r\n) : Promise<PaginationResult<StringModel>> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}/${page}`);\r\n};\r\n\r\nexport const getProjectString = (\r\n  id: string,\r\n  lang: number,\r\n  stringId: number,\r\n) : Promise<StringModel> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}/strings/${stringId}`);\r\n};\r\n\r\nexport const getProjectInfo = (\r\n  id: string,\r\n  lang: string,\r\n) : Promise<ProjectInfo> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}`);\r\n};\r\n\r\nexport const getComments = (stringId: number, lang: number) : Promise<StringComment[]> => {\r\n  return request(`${translatorApi}/api/Projects/${stringId}/${lang}/comments`);\r\n};\r\n\r\nexport const sendComment = (stringId: number, lang: number, text: string) : Promise<void> => {\r\n  return request(`${translatorApi}/api/Projects/${stringId}/${lang}/comments`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      text,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const sendProjectString = (\r\n  id: string,\r\n  lang: number,\r\n  stringId: number,\r\n  text: string,\r\n) : Promise<void> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}/strings/${stringId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      text,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const approveProject = (id: number, lang: number) : Promise<void> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n};\r\n\r\nexport const getProjects = (projectStatus: ProjectStatus): Promise<Project[]> => {\r\n  return request(`${translatorApi}/api/Projects?status=${projectStatus}`);\r\n};\r\n\r\nexport const getAvailableProjects = (\r\n  subjectId: number,\r\n  sourceLangId: number,\r\n  targetLangId: number,\r\n): Promise<Project[]> => {\r\n  return request(`${translatorApi}/api/Projects/active?subjectId=${subjectId}&sourceLangId=${sourceLangId}&targetLangId=${targetLangId}`);\r\n};\r\n\r\nexport const joinProject = (projectId: number, targetLangId: number): Promise<void> => {\r\n  return request(`${translatorApi}/api/Projects/${projectId}/${targetLangId}/join`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n};\r\n\r\nexport const getAdminProjects = (\r\n  subjectId: number,\r\n  sourceLangId: number,\r\n  targetLangId: number,\r\n  projectStatus? : ProjectStatus,\r\n  userId?: number,\r\n  isTranslator?: boolean,\r\n): Promise<Project[]> => {\r\n  let url = `${adminApi}/api/Projects?subjectId=${subjectId}&sourceLangId=${sourceLangId}&targetLangId=${targetLangId}`;\r\n\r\n  if (projectStatus !== undefined) {\r\n    url = `${url}&projectStatus=${projectStatus}`;\r\n  }\r\n\r\n  if (userId !== undefined) {\r\n    url = `${url}&userId=${userId}`;\r\n  }\r\n\r\n  if (isTranslator !== undefined) {\r\n    url = `${url}&isTranslator=${isTranslator}`;\r\n  }\r\n\r\n  return request(url);\r\n};\r\n","import { AnyAction } from 'redux';\r\nimport { State, Subject } from '../types';\r\n\r\nenum ActionTypes {\r\n  SetSubjects = 'subjects/set',\r\n}\r\n\r\nexport const subjectsActions = {\r\n  setSubjects: (subjects: Subject[]): AnyAction => ({\r\n    type: ActionTypes.SetSubjects,\r\n    value: subjects,\r\n  }),\r\n};\r\n\r\nexport const subjectsSelectors = {\r\n  getSubjects: (state: State): Subject[] => state.subjects,\r\n};\r\n\r\nexport const subjectsReducer = (state: Subject[] = [], action: AnyAction) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SetSubjects:\r\n      return [...action.value];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum AccountType {\r\n  User = 1,\r\n  Translator = 2,\r\n  Admin = 3,\r\n}\r\n\r\nexport enum ProjectStatus {\r\n  Unpaid,\r\n  Active,\r\n  Completed,\r\n}\r\n","import classNames from 'classnames';\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useMatch } from 'react-router-dom';\r\nimport { AccountType } from '../../enums';\r\nimport { userActions, userSelectors } from '../../store/user';\r\nimport { clearLocalStorage } from '../../tokenHandler';\r\nimport './Menu.scss';\r\n\r\nexport const Menu: React.FC = () => {\r\n  const match = useMatch('/');\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userSelectors.getUser);\r\n  const [isActive, setActive] = useState(false);\r\n  const node = useRef<HTMLDivElement>(null);\r\n\r\n  const clickOutside = useCallback((e: MouseEvent) => {\r\n    if (!node.current?.contains(e.target as Node)) {\r\n      setActive(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', clickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', clickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleLogOut = () => {\r\n    clearLocalStorage();\r\n    dispatch(userActions.setUser(null));\r\n\r\n    if (match) {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      location.reload();\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={node}\r\n      className={classNames('menu dropdown is-right', { 'is-active': isActive })}\r\n    >\r\n      <div className=\"dropdown-trigger\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"menu__button is-size-4\"\r\n          onClick={() => setActive(!isActive)}\r\n        >\r\n          {`${user?.firstname} ${user?.lastname}`}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"menu__box dropdown-menu\">\r\n        {user.accountType === AccountType.User && (\r\n          <div className=\"menu__content dropdown-content\">\r\n            <Link to=\"/profile\" className=\"menu__item dropdown-item\">\r\n              My profile\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/projects/my\" className=\"menu__item dropdown-item\">\r\n              My projects\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/quote\" className=\"menu__item dropdown-item\">\r\n              New project\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link\r\n              to=\"/\"\r\n              onClick={handleLogOut}\r\n              className=\"menu__item dropdown-item\"\r\n            >\r\n              Log out\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {user.accountType === AccountType.Translator && (\r\n          <div className=\"menu__content dropdown-content\">\r\n            <Link to=\"/profile\" className=\"menu__item dropdown-item\">\r\n              My profile\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/projects/my\" className=\"menu__item dropdown-item\">\r\n              My projects\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/projects\" className=\"menu__item dropdown-item\">\r\n              Available projects\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link\r\n              to=\"/\"\r\n              className=\"menu__item dropdown-item\"\r\n              onClick={handleLogOut}\r\n            >\r\n              Log out\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {user.accountType === AccountType.Admin && (\r\n          <div className=\"menu__content dropdown-content\">\r\n            <Link to=\"/\" className=\"menu__item dropdown-item\">\r\n              Income\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/projects\" className=\"menu__item dropdown-item\">\r\n              Projects\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/languages\" className=\"menu__item dropdown-item\">\r\n              Languages\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/subjects\" className=\"menu__item dropdown-item\">\r\n              Subjects\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/users\" className=\"menu__item dropdown-item\">\r\n              Users\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/translators\" className=\"menu__item dropdown-item\">\r\n              Translators\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link\r\n              to=\"/\"\r\n              className=\"menu__item dropdown-item\"\r\n              onClick={handleLogOut}\r\n            >\r\n              Log out\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRefreshToken } from '../../tokenHandler';\r\nimport { Menu } from '../Menu/Menu';\r\nimport './Header.scss';\r\n\r\nexport const Header: React.FC = () => {\r\n  const refreshToken = getRefreshToken();\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <Link\r\n        to=\"/\"\r\n        className=\"header__logo has-text-primary-dark has-text-weight-light is-size-2\"\r\n      >\r\n        Wordsly\r\n      </Link>\r\n\r\n      {refreshToken ? (\r\n        <Menu />\r\n      ) : (\r\n        <Link\r\n          to=\"/sign-in\"\r\n          className=\"header__sign-in is-size-4\"\r\n        >\r\n          Sign in\r\n        </Link>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { getAvailableProjects, joinProject } from '../../api/projects';\r\nimport { getTranslatorInfo } from '../../api/user';\r\nimport { languagesSelectors } from '../../store/language';\r\nimport { subjectsSelectors } from '../../store/subject';\r\nimport {\r\n  Language,\r\n  Project,\r\n  Subject,\r\n  TranslatorInfo,\r\n} from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport './AvailableProjects.scss';\r\n\r\nexport const AvailableProjects: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const handleError = useErrorHandler();\r\n\r\n  const subjects = useSelector(subjectsSelectors.getSubjects);\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n\r\n  const [selectedSubject, setSelectedSubject] = useState(0);\r\n  const [selectedSourceLang, setSourceLang] = useState(0);\r\n  const [selectedTargetLang, setTargetLang] = useState(0);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [filteredSubjects, setFilteredSubjects] = useState<Subject[]>([]);\r\n  const [filteredSourceLanguages, setFilteredSourceLanguages] = useState<Language[]>([]);\r\n  const [translatorInfo, setTranslatorInfo] = useState<TranslatorInfo | null>(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getAvailableProjects(\r\n          selectedSubject,\r\n          selectedSourceLang,\r\n          selectedTargetLang,\r\n        );\r\n\r\n        setProjects(newProjects);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [selectedSubject, selectedSourceLang, selectedTargetLang]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newTranslatorInfo = await getTranslatorInfo();\r\n\r\n        setTranslatorInfo(newTranslatorInfo);\r\n\r\n        const newSubjects = subjects\r\n          .filter(subject => newTranslatorInfo.subjectIds.includes(subject.id));\r\n\r\n        setFilteredSubjects(newSubjects);\r\n\r\n        const newSourceLang = languages\r\n          .filter(language => (\r\n            newTranslatorInfo.languagesPairs\r\n              .some(translatorLang => translatorLang.sourceLanguageId === language.id)\r\n          ));\r\n\r\n        setFilteredSourceLanguages(newSourceLang);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [subjects, languages]);\r\n\r\n  const filteredTargetLanguages = useMemo(() => {\r\n    if (!translatorInfo) {\r\n      return [];\r\n    }\r\n\r\n    if (selectedSourceLang) {\r\n      return languages\r\n        .filter(language => (\r\n          translatorInfo.languagesPairs\r\n            .some(translatorLang => translatorLang.outputLanguageId === language.id\r\n              && translatorLang.sourceLanguageId === selectedSourceLang)\r\n        ));\r\n    }\r\n\r\n    return languages\r\n      .filter(language => (\r\n        translatorInfo.languagesPairs\r\n          .some(translatorLang => translatorLang.outputLanguageId === language.id)\r\n      ));\r\n  }, [selectedSourceLang, translatorInfo]);\r\n\r\n  const handleSubject = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setSelectedSubject(value);\r\n  };\r\n\r\n  const handleSourceLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setSourceLang(value);\r\n  };\r\n\r\n  const handleTargetLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setTargetLang(value);\r\n  };\r\n\r\n  const handleChoose = async (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    projectId: number,\r\n    targetLangId: number,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    try {\r\n      await joinProject(projectId, targetLangId);\r\n\r\n      navigate(`/project/${projectId}/${targetLangId}`);\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"projects__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"projects__filters\">\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={selectedSubject}\r\n            onChange={handleSubject}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={0}>All subjects</option>\r\n            {filteredSubjects.map(subject => (\r\n              <option\r\n                key={subject.id}\r\n                value={subject.id}\r\n              >\r\n                {subject.subject}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={selectedSourceLang}\r\n            onChange={handleSourceLanguage}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={0}>All source languages</option>\r\n            {filteredSourceLanguages.map(language => (\r\n              <option\r\n                key={language.id}\r\n                value={language.id}\r\n              >\r\n                {language.language}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={selectedTargetLang}\r\n            onChange={handleTargetLanguage}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={0}>All target languages</option>\r\n            {filteredTargetLanguages.map(language => (\r\n              <option\r\n                key={language.id}\r\n                value={language.id}\r\n              >\r\n                {language.language}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>File name</th>\r\n            <th>Source language</th>\r\n            <th>Target language</th>\r\n            <th>Subject</th>\r\n            <th>Words count</th>\r\n            <th>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map(project => {\r\n            return (\r\n              <tr key={project.id + project.targetLanguage.id}>\r\n                <td>{project.fileName}</td>\r\n                <td>{project.sourceLanguage.language}</td>\r\n                <td>{project.targetLanguage.language}</td>\r\n                <td>{project.subject.subject}</td>\r\n                <td>{project.wordsCount}</td>\r\n                <td>\r\n                  <a\r\n                    href=\"/\"\r\n                    className=\"projects__choose\"\r\n                    onClick={(event) => handleChoose(event, project.id, project.targetLanguage.id)}\r\n                  >\r\n                    Choose a project\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/home-background.48123240.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header } from '../Header/Header';\r\nimport homeBackground from '../../images/home-background.png';\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <main>\r\n        <section className=\"home\">\r\n          <h2 className=\"home__title has-text-weight-light\">Translate Better and Faster</h2>\r\n\r\n          <div className=\"columns\">\r\n            <div className=\"home__section column is-half-desktop\">\r\n              <p className=\"home__text has-text-weight-light\">\r\n                Easily translate your documents and digital content\r\n                with quality and speed in over 50 languages.\r\n              </p>\r\n\r\n              <Link\r\n                to=\"/quote\"\r\n                className=\"home__button button is-rounded is-medium\"\r\n              >\r\n                Get an instant quote\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <img\r\n            src={homeBackground}\r\n            alt=\"background\"\r\n            className=\"home__background is-hidden-touch\"\r\n          />\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/not-found.ac85270e.png\";","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  HttpTransportType,\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n  LogLevel,\r\n} from '@microsoft/signalr';\r\nimport { useSelector } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport {\r\n  approveProject,\r\n  getComments,\r\n  getProjectInfo,\r\n  getProjectString,\r\n  getProjectStrings,\r\n  sendComment,\r\n  sendProjectString as sendProjectStringTranslation,\r\n} from '../../api/projects';\r\nimport { Header } from '../Header/Header';\r\nimport background from '../../images/not-found.png';\r\nimport { ProjectInfo, StringComment, StringModel } from '../../types';\r\nimport './Project.scss';\r\nimport { commentsHub, stringsHub } from '../../api/apis';\r\nimport { userSelectors } from '../../store/user';\r\nimport { AccountType } from '../../enums';\r\nimport { languagesSelectors } from '../../store/language';\r\n\r\nexport const Project : React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const navigate = useNavigate();\r\n  const user = useSelector(userSelectors.getUser);\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n  const { id, lang } = useParams();\r\n  const [page, setPage] = useState(1);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [strings, setStrings] = useState<StringModel[]>([]);\r\n  const [pagesCount, setPagesCount] = useState(0);\r\n  const [selectedStringId, setSelectedStringId] = useState(0);\r\n  const [translation, setTranslation] = useState('');\r\n  const [translationError, setTranslationError] = useState('');\r\n  const [projectInfo, setProjectInfo] = useState<ProjectInfo>();\r\n  const [comments, setComments] = useState<StringComment[]>([]);\r\n  const [comment, setComment] = useState('');\r\n  const [stringsConnection, setStringsConnection] = useState<HubConnection>();\r\n  const [commentsConnection, setCommentsConnection] = useState<HubConnection>();\r\n\r\n  const isNotCustomer = useMemo(() => user?.accountType !== AccountType.User, [user]);\r\n  const isNotTranslator = useMemo(() => user?.accountType !== AccountType.Translator, [user]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (id && lang) {\r\n        const newProjectInfo = await getProjectInfo(id, lang);\r\n\r\n        setProjectInfo(newProjectInfo);\r\n      }\r\n    })();\r\n  }, [id, lang]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (id && lang && page) {\r\n        try {\r\n          const newStrings = await getProjectStrings(id, lang, page);\r\n\r\n          setStrings(newStrings.result);\r\n          setPagesCount(newStrings.pagesCount);\r\n        } catch {\r\n          setNotFound(true);\r\n        }\r\n      }\r\n    })();\r\n  }, [id, lang, page]);\r\n\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .configureLogging(LogLevel.Information)\r\n      .withUrl(stringsHub, {\r\n        skipNegotiation: true,\r\n        transport: HttpTransportType.WebSockets,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setStringsConnection(newConnection);\r\n\r\n    const newCommentsConnection = new HubConnectionBuilder()\r\n      .configureLogging(LogLevel.Information)\r\n      .withUrl(commentsHub, {\r\n        skipNegotiation: true,\r\n        transport: HttpTransportType.WebSockets,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setCommentsConnection(newCommentsConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (stringsConnection) {\r\n        await stringsConnection.start();\r\n        stringsConnection.on('loadString', async (stringId: number, langId: number) => {\r\n          if (!id) {\r\n            return;\r\n          }\r\n\r\n          try {\r\n            const str = await getProjectString(id, langId, stringId);\r\n\r\n            setStrings(oldStrings => oldStrings.map(s => {\r\n              if (s.id === str.id) {\r\n                return str;\r\n              }\r\n\r\n              return s;\r\n            }));\r\n          } catch (error) {\r\n            handleError(error);\r\n          }\r\n        });\r\n      }\r\n    })();\r\n  }, [stringsConnection]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (commentsConnection) {\r\n        await commentsConnection.start();\r\n        commentsConnection.on('loadComments', async (stringId: number, langId: number) => {\r\n          try {\r\n            const newComments = await getComments(stringId, langId);\r\n\r\n            setComments(newComments);\r\n          } catch (error) {\r\n            handleError(error);\r\n          }\r\n        });\r\n      }\r\n    })();\r\n  }, [commentsConnection]);\r\n\r\n  useEffect(() => {\r\n    if (commentsConnection?.state === HubConnectionState.Connected && selectedStringId && lang) {\r\n      commentsConnection.invoke('Join', selectedStringId, +lang);\r\n    }\r\n\r\n    return () => {\r\n      if (commentsConnection?.state === HubConnectionState.Connected && selectedStringId && lang) {\r\n        commentsConnection.invoke('Leave', selectedStringId, +lang);\r\n      }\r\n    };\r\n  }, [commentsConnection?.state, selectedStringId]);\r\n\r\n  useEffect(() => {\r\n    if (stringsConnection?.state === HubConnectionState.Connected && lang) {\r\n      strings.forEach((s) => {\r\n        stringsConnection.invoke('Join', s.id, +lang);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (stringsConnection?.state === HubConnectionState.Connected && lang) {\r\n        strings.forEach((s) => {\r\n          stringsConnection.invoke('Leave', s.id, +lang);\r\n        });\r\n      }\r\n    };\r\n  }, [stringsConnection?.state, strings.map(s => s.id)]);\r\n\r\n  useEffect(() => {\r\n    const str = strings.find(s => s.id === selectedStringId);\r\n\r\n    if (str) {\r\n      setTranslation(str.translatedString);\r\n    }\r\n\r\n    if (\r\n      isNotCustomer\r\n      && stringsConnection?.state === HubConnectionState.Connected\r\n      && id\r\n      && lang\r\n      && selectedStringId\r\n    ) {\r\n      stringsConnection.invoke('StartEdit', selectedStringId, +lang);\r\n    }\r\n\r\n    return () => {\r\n      if (\r\n        isNotCustomer\r\n        && stringsConnection?.state === HubConnectionState.Connected\r\n        && id\r\n        && lang\r\n        && selectedStringId\r\n      ) {\r\n        stringsConnection.invoke('LeaveEdit', selectedStringId, +lang);\r\n      }\r\n    };\r\n  }, [stringsConnection?.state, selectedStringId]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (selectedStringId && lang) {\r\n        try {\r\n          const newComments = await getComments(selectedStringId, +lang);\r\n\r\n          setComments(newComments);\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      }\r\n    })();\r\n  }, [selectedStringId, lang]);\r\n\r\n  const handleSendComment = async (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === 'Enter' && comment && lang) {\r\n      try {\r\n        await sendComment(selectedStringId, +lang, comment);\r\n        setComment('');\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectedString = (stringId: number) => {\r\n    if (stringId !== selectedStringId) {\r\n      setSelectedStringId(stringId);\r\n      setTranslation('');\r\n\r\n      if (translationError) {\r\n        setTranslationError('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePage = (newPage: number) => {\r\n    setPage(newPage);\r\n    handleSelectedString(0);\r\n  };\r\n\r\n  const handleTranslation = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setTranslation(event.target.value);\r\n\r\n    if (translationError) {\r\n      setTranslationError('');\r\n    }\r\n  };\r\n\r\n  const handleSendTranslation = async (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (event.key === 'Enter' && !event.shiftKey && id && lang && selectedStringId) {\r\n      event.nativeEvent.preventDefault();\r\n      try {\r\n        await sendProjectStringTranslation(\r\n          id,\r\n          +lang,\r\n          selectedStringId,\r\n          translation,\r\n        );\r\n\r\n        setSelectedStringId(0);\r\n        // eslint-disable-next-line\r\n      } catch (e: any) {\r\n        setTranslationError(e.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleApprove = async () => {\r\n    if (id && lang) {\r\n      try {\r\n        await approveProject(+id, +lang);\r\n        navigate('/projects/my');\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const language = useMemo(() => {\r\n    if (lang) {\r\n      return languages.find(l => l.id === +lang)?.language || '';\r\n    }\r\n\r\n    return '';\r\n  }, [lang, languages]);\r\n\r\n  if (notFound || !user) {\r\n    return (\r\n      <div>\r\n        <Header />\r\n\r\n        <section className=\"home\">\r\n          <h2 className=\"home__title has-text-weight-light\">The project was not found</h2>\r\n\r\n          <div className=\"columns\">\r\n            <div className=\"home__section column is-half-desktop\">\r\n              <Link\r\n                to=\"/\"\r\n                className=\"home__button button is-rounded is-medium\"\r\n              >\r\n                Go to home page\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <img\r\n            src={background}\r\n            alt=\"background\"\r\n            className=\"home__background is-hidden-touch\"\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div className=\"project__container\">\r\n        <div className=\"project__strings-column\">\r\n          {strings.map(str => (\r\n            // eslint-disable-next-line\r\n            <article\r\n              key={str.id}\r\n              className=\"message\"\r\n              onClick={() => handleSelectedString(str.id)}\r\n            >\r\n              <div\r\n                className={classNames(\r\n                  'project__strings message-body',\r\n                  {\r\n                    'project__selected-string': str.id === selectedStringId,\r\n                  },\r\n                )}\r\n              >\r\n                <p className=\"project__string has-text-white-ter has-text-weight-light\">\r\n                  {str.originalString}\r\n                </p>\r\n\r\n                {/* eslint-disable-next-line */}\r\n                {str.isEditing && !str.translatedString ? (\r\n                  <p className=\"project__string has-text-white-ter\">\r\n                    <span className=\"has-text-primary-dark\">\r\n                      Is translating...\r\n                    </span>\r\n                  </p>\r\n                ) : (isNotCustomer && selectedStringId === str.id ? (\r\n                  <div className=\"project__string-control control\">\r\n                    <textarea\r\n                      className={classNames('project__string-entry textarea has-fixed-size', { 'is-danger': !!translationError })}\r\n                      placeholder=\"Please, enter translation and press ENTER\"\r\n                      value={translation}\r\n                      onChange={handleTranslation}\r\n                      onKeyPress={handleSendTranslation}\r\n                    />\r\n                    {translationError && (\r\n                      <p className=\"project__error help is-danger\">\r\n                        {translationError}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"project__string has-text-white-ter\">\r\n                    {str.translatedString || (\r\n                      <span className=\"has-text-primary-dark\">\r\n                        Currently not translated\r\n                      </span>\r\n                    )}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n            </article>\r\n          ))}\r\n          <div className=\"project__pagination\">\r\n            {page > 1 && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handlePage(page - 1)}\r\n                className=\"project__pagination-button button is-small\"\r\n              >\r\n                {'<'}\r\n              </button>\r\n            )}\r\n            <p className=\"project__pagination-page is-size-4 has-text-weight-light has-text-white-ter\">{page}</p>\r\n            {page < pagesCount && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handlePage(page + 1)}\r\n                className=\"project__pagination-button button is-small\"\r\n              >\r\n                {'>'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"project__info-column\">\r\n          <article className=\"message\">\r\n            <div className=\"message-header\">\r\n              <span>{`${projectInfo?.projectName} To ${language}`}</span>\r\n            </div>\r\n            {!!projectInfo?.preferences && (\r\n              <div className=\"message-body has-text-white-ter\">\r\n                {projectInfo?.preferences}\r\n              </div>\r\n            )}\r\n            {isNotTranslator && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"project__info-footer message-header\"\r\n                onClick={handleApprove}\r\n              >\r\n                Approve project\r\n              </button>\r\n            )}\r\n          </article>\r\n          {!!selectedStringId && (\r\n            <article className=\"message\">\r\n              <div className=\"message-header\">\r\n                {comments.length ? 'Comments' : 'No comments'}\r\n              </div>\r\n              <div className=\"message-body\">\r\n                {comments.map(c => (\r\n                  <article\r\n                    key={c.id}\r\n                    className={classNames(\r\n                      'message is-small',\r\n                      {\r\n                        'is-primary': c.role === AccountType.User,\r\n                        'is-danger': c.role === AccountType.Admin,\r\n                        'is-link': c.role === AccountType.Translator,\r\n                      },\r\n                    )}\r\n                  >\r\n                    <div className=\"message-body\">\r\n                      <span>{`${c.userName}: `}</span>\r\n                      {c.comment}\r\n                    </div>\r\n                  </article>\r\n                ))}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"comment\"\r\n                  className=\"input\"\r\n                  value={comment}\r\n                  onChange={(event) => setComment(event.target.value)}\r\n                  onKeyPress={handleSendComment}\r\n                />\r\n              </div>\r\n            </article>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { clientApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const initCookies = async () : Promise<string> => {\r\n  let quote = sessionStorage.getItem('quote');\r\n\r\n  if (quote) {\r\n    return quote;\r\n  }\r\n\r\n  quote = await request(`${clientApi}/api/Quota/id`);\r\n  sessionStorage.setItem('quote', quote || '');\r\n\r\n  return quote || '';\r\n};\r\n\r\nexport const sendFileForTranslating = (file: File, quoteId: string) : Promise<void> => {\r\n  const body = new FormData();\r\n\r\n  body.append('file', file);\r\n  body.append('quotaId', quoteId);\r\n\r\n  return request(`${clientApi}/api/Quota/source-file`, {\r\n    method: 'POST',\r\n    body,\r\n  });\r\n};\r\n\r\nexport const saveProject = (\r\n  quoteId: string,\r\n  preferences: string | undefined | null,\r\n) : Promise<void> => {\r\n  return request(`${clientApi}/api/Quota/create-project`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      quoteId,\r\n      preferences,\r\n    }),\r\n  });\r\n};\r\n","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport {\r\n  HttpTransportType,\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n  LogLevel,\r\n} from '@microsoft/signalr';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { Header } from '../Header/Header';\r\nimport './Quote.scss';\r\nimport { quotaHub } from '../../api/apis';\r\nimport { initCookies, saveProject, sendFileForTranslating } from '../../api/quota';\r\nimport { languagesSelectors } from '../../store/language';\r\nimport { Quota } from '../../types';\r\nimport { subjectsSelectors } from '../../store/subject';\r\nimport { getRefreshToken } from '../../tokenHandler';\r\n\r\nexport const Quote: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const handleError = useErrorHandler();\r\n\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n  const subjects = useSelector(subjectsSelectors.getSubjects);\r\n\r\n  const [quote, setQuote] = useState<Quota>();\r\n  const [connection, setConnection] = useState<HubConnection>();\r\n  const [quoteId, setQuoteId] = useState('');\r\n  const [subject, setSubject] = useState('0');\r\n  const [sourceLanguage, setSourceLanguage] = useState('0');\r\n  const [preferences, setPreferences] = useState('');\r\n\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .configureLogging(LogLevel.Information)\r\n      .withUrl(quotaHub, {\r\n        skipNegotiation: true,\r\n        transport: HttpTransportType.WebSockets,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n\r\n    (async () => {\r\n      const newQuoteId = await initCookies();\r\n\r\n      setQuoteId(newQuoteId);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (connection && quoteId) {\r\n        await connection.start();\r\n        connection.on('updateQuota', (quota: Quota) => {\r\n          setQuote(quota);\r\n          setSourceLanguage(quota.sourceLanguage?.languageCode);\r\n          setSubject(quota.subject?.id.toString());\r\n        });\r\n        await connection.invoke('Join', quoteId);\r\n      }\r\n    })();\r\n  }, [connection, quoteId]);\r\n\r\n  const handleFile = async (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { files } = event.target;\r\n\r\n    if (files) {\r\n      const file = files[0];\r\n\r\n      try {\r\n        await sendFileForTranslating(file, quoteId);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteLanguage = async (id: number) => {\r\n    if (quote?.targetLanguages?.length) {\r\n      await connection?.invoke(\r\n        'SendTargetLanguageCodes',\r\n        quoteId,\r\n        quote.targetLanguages\r\n          .filter(lang => lang.id !== id)\r\n          .map(lang => lang.languageCode),\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleOutputLanguage = async (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n\r\n    await connection?.invoke(\r\n      'SendTargetLanguageCodes',\r\n      quoteId,\r\n      quote?.targetLanguages?.length\r\n        ? [...quote.targetLanguages.map(l => l.languageCode), value]\r\n        : [value],\r\n    );\r\n  };\r\n\r\n  const handleSubject = async (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setSubject(value);\r\n\r\n    if (connection?.state === HubConnectionState.Connected) {\r\n      await connection.invoke(\r\n        'SendSubjectId',\r\n        quoteId,\r\n        +value,\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSourceLanguage = async (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setSourceLanguage(value);\r\n\r\n    if (connection?.state === HubConnectionState.Connected) {\r\n      await connection.invoke(\r\n        'SendSourceLanguageCode',\r\n        quoteId,\r\n        value,\r\n        false,\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (quote?.fileName\r\n        && quote.sourceLanguage\r\n        && quote.targetLanguages.length\r\n        && quote.subject\r\n        && quote.price) {\r\n      try {\r\n        if (getRefreshToken()) {\r\n          try {\r\n            await saveProject(quoteId, preferences);\r\n            sessionStorage.removeItem('quote');\r\n            navigate('/projects/my');\r\n          } catch (error) {\r\n            handleError(error);\r\n          }\r\n        } else {\r\n          sessionStorage.setItem('preferences', preferences);\r\n          navigate('/sign-in');\r\n        }\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"quote__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"quote__title\">\r\n        <span className=\"has-text-white has-text-weight-light is-size-4\">\r\n          Please give us a description of what you need by completing the following:\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"quote__container\">\r\n        <div className=\"quote__inputs\">\r\n          <span className=\"has-text-white has-text-weight-light is-size-4\">\r\n            File for translation:\r\n            <div className=\"quote__input file has-name is-fullwidth is-medium is-right\">\r\n              <label htmlFor=\"file\" className=\"file-label\">\r\n                <input\r\n                  id=\"file\"\r\n                  onChange={handleFile}\r\n                  className=\"file-input is-rounded\"\r\n                  type=\"file\"\r\n                  name=\"resume\"\r\n                  accept=\".rtf, .doc, .docx, .ppt, .pptx, .xls, .xlsx, .html, .xml, .txt, .srt, .sbv, .odt, .ods, .odp\"\r\n                />\r\n\r\n                <span className=\"file-cta\">\r\n                  <span className=\"file-label\">\r\n                    Choose a file…\r\n                  </span>\r\n                </span>\r\n\r\n                <span className=\"file-name has-text-white\">\r\n                  {quote?.fileName}\r\n                </span>\r\n              </label>\r\n            </div>\r\n          </span>\r\n\r\n          <label\r\n            htmlFor=\"subject\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Subject:\r\n            <div className=\"quote__input select is-rounded is-medium is-fullwidth\">\r\n              <select\r\n                id=\"subject\"\r\n                value={subject}\r\n                onChange={handleSubject}\r\n                className=\"has-text-weight-light\"\r\n              >\r\n                <option value={0} disabled>Choose  subject(s)</option>\r\n                {subjects.map(s => (\r\n                  <option\r\n                    key={s.id}\r\n                    value={s.id}\r\n                  >\r\n                    {s.subject}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"sourceLanguage\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Translate from:\r\n\r\n            <div className=\"control\">\r\n              <div className=\"quote__input select is-fullwidth is-rounded is-medium\">\r\n                <select\r\n                  id=\"sourceLanguage\"\r\n                  value={sourceLanguage}\r\n                  onChange={handleSourceLanguage}\r\n                  className=\"has-text-weight-light\"\r\n                >\r\n                  <option value={0} disabled>Choose language(s)</option>\r\n                  {languages.map(language => (\r\n                    <option\r\n                      key={language.id}\r\n                      value={language.languageCode}\r\n                    >\r\n                      {language.language}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"outputLanguage\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Translate to:\r\n            <div className=\"control\">\r\n              <div className=\"quote__input select is-rounded is-fullwidth is-medium\">\r\n                <select\r\n                  id=\"outputLanguage\"\r\n                  value={0}\r\n                  onChange={handleOutputLanguage}\r\n                  className=\"has-text-weight-light\"\r\n                >\r\n                  <option value={0} disabled>Choose language(s)</option>\r\n                  {languages\r\n                    .filter(language => language.languageCode !== sourceLanguage)\r\n                    .map(language => (\r\n                      <option\r\n                        key={language.id}\r\n                        value={language.languageCode}\r\n                      >\r\n                        {language.language}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </label>\r\n\r\n          <div className=\"control\">\r\n            <textarea\r\n              className=\"quote__preferences textarea has-fixed-size is-fullwidth is-medium\"\r\n              placeholder=\"Please, enter your preferences\"\r\n              value={preferences}\r\n              onChange={event => setPreferences(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"quote__info\">\r\n          <div className=\"quote__card card\">\r\n            <header className=\"card-header\">\r\n              <h1 className=\"quote__info-header card-header-title\">\r\n                Order Details\r\n              </h1>\r\n            </header>\r\n            <section className=\"card-content\">\r\n              <div className=\"content\">\r\n                <p>\r\n                  {`File name: ${quote?.fileName || ''}`}\r\n                </p>\r\n                <p>\r\n                  {`Subject field: ${quote?.subject?.subject || ''}`}\r\n                </p>\r\n                <p>\r\n                  {`Transalte from: ${quote?.sourceLanguage?.language || ''}`}\r\n                </p>\r\n                <p className=\"quote__info-langs\">\r\n                  {'Translate to: '}\r\n                  {!!quote?.targetLanguages?.length && (\r\n                    quote.targetLanguages.map(({ id }) => {\r\n                      const selectedLanguage = languages.find(language => language.id === id);\r\n\r\n                      return (\r\n                        <span key={id} className=\"tag is-light is-rounded\">\r\n                          {selectedLanguage?.language}\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"delete is-small\"\r\n                            onClick={() => handleDeleteLanguage(id)}\r\n                          >\r\n                          </button>\r\n                        </span>\r\n                      );\r\n                    })\r\n                  )}\r\n                </p>\r\n                <div className=\"quote__info-row\">\r\n                  <p className=\"quote__info-words\">\r\n                    {`Words count: ${quote?.wordsCount || (quote?.isCounting ? 'counting' : '')}`}\r\n                  </p>\r\n                  <p>\r\n                    {`Price ($): ${quote?.price ? quote.price / 100 : ''}`}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <footer className=\"card-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"quote__info-button card-header-title card-footer-item\"\r\n                onClick={handleSave}\r\n              >\r\n                Save\r\n              </button>\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport {\r\n  getProjectsInfo,\r\n  getTranslatorInfo,\r\n  updateEmail,\r\n  updateName,\r\n  updatePassword,\r\n  updateTranslatorInfo,\r\n} from '../../api/user';\r\nimport { emailTest, passwordTest } from '../../RegExps';\r\nimport { languagesSelectors } from '../../store/language';\r\nimport { subjectsSelectors } from '../../store/subject';\r\nimport { userActions, userSelectors } from '../../store/user';\r\nimport { LanguagePair, TranslatorInfo, UserProjects } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport '../UserProfile/UserProfile.scss';\r\n\r\nexport const TranslatorProfile: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userSelectors.getUser);\r\n  const subjects = useSelector(subjectsSelectors.getSubjects);\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [projects, setProjects] = useState<UserProjects | null>(null);\r\n  const [password, setPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n\r\n  const [hasPasswordError, setPasswordError] = useState(false);\r\n  const [isWrongPassword, setWrongPassword] = useState(false);\r\n  const [hasNewPasswordError, setNewPasswordError] = useState(false);\r\n  const [hasEmailError, setEmailError] = useState(false);\r\n  const [hasFirstnameError, setFirstnameError] = useState(false);\r\n  const [hasLastnameError, setLastnameError] = useState(false);\r\n\r\n  const [translatorInfo, setTranslatorInfo] = useState<TranslatorInfo | null>(null);\r\n  const [selectedSubjects, setSelectedSubjects] = useState<number[]>([]);\r\n  const [selectedLanguages, setSelectedLanguages] = useState<LanguagePair[]>([]);\r\n  const [sourceLanguage, setSourceLanguage] = useState(0);\r\n  const [outputLanguage, setOutputLanguage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getProjectsInfo();\r\n        const newTranslatorInfo = await getTranslatorInfo();\r\n\r\n        setProjects(newProjects);\r\n        setTranslatorInfo(newTranslatorInfo);\r\n        setSelectedSubjects(newTranslatorInfo.subjectIds);\r\n        setSelectedLanguages(newTranslatorInfo.languagesPairs);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFirstname(user.firstname);\r\n      setLastname(user.lastname);\r\n      setEmail(user.email);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleUpdate = async () => {\r\n    if (user?.firstname !== firstname || user?.lastname !== lastname) {\r\n      try {\r\n        const newUser = await updateName(firstname, lastname);\r\n\r\n        dispatch(userActions.setUser(newUser));\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (user?.email !== email) {\r\n      try {\r\n        const newUser = await updateEmail(email);\r\n\r\n        dispatch(userActions.setUser(newUser));\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (password && newPassword) {\r\n      try {\r\n        await updatePassword(password, newPassword);\r\n      } catch (e) {\r\n        setWrongPassword(true);\r\n      }\r\n    }\r\n\r\n    try {\r\n      const newTranslatorInfo = await updateTranslatorInfo(selectedSubjects, selectedLanguages);\r\n\r\n      setTranslatorInfo(newTranslatorInfo);\r\n      setSelectedSubjects(newTranslatorInfo.subjectIds);\r\n      setSelectedLanguages(newTranslatorInfo.languagesPairs);\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    if (!emailTest.test(email)) {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setEmailError(false);\r\n    setEmail(value);\r\n  };\r\n\r\n  const validateFirstname = () => {\r\n    if (!firstname) {\r\n      setFirstnameError(true);\r\n    }\r\n  };\r\n\r\n  const handleFirstname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setFirstnameError(false);\r\n    setFirstname(value);\r\n  };\r\n\r\n  const validateLastname = () => {\r\n    if (!lastname) {\r\n      setLastnameError(true);\r\n    }\r\n  };\r\n\r\n  const handleLastname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setLastnameError(false);\r\n    setLastname(value);\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (!passwordTest.test(password) && password) {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setPasswordError(false);\r\n    setWrongPassword(false);\r\n    setPassword(value);\r\n  };\r\n\r\n  const validateNewPassword = () => {\r\n    if (!passwordTest.test(newPassword) && newPassword) {\r\n      setNewPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const handleNewPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setNewPasswordError(false);\r\n    setNewPassword(value);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (user) {\r\n      setFirstname(user.firstname);\r\n      setLastname(user.lastname);\r\n      setEmail(user.email);\r\n    }\r\n\r\n    setPassword('');\r\n    setNewPassword('');\r\n\r\n    setFirstnameError(false);\r\n    setLastnameError(false);\r\n    setEmailError(false);\r\n    setPasswordError(false);\r\n    setNewPasswordError(false);\r\n    setWrongPassword(false);\r\n\r\n    if (translatorInfo) {\r\n      setSelectedLanguages(translatorInfo.languagesPairs);\r\n      setSelectedSubjects(translatorInfo.subjectIds);\r\n    }\r\n  };\r\n\r\n  const handleSubject = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    if (!selectedSubjects.includes(value)) {\r\n      setSelectedSubjects([...selectedSubjects, value]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSubject = (subjectId: number) => {\r\n    const newSelectedSubjects = selectedSubjects.filter(id => id !== subjectId);\r\n\r\n    setSelectedSubjects(newSelectedSubjects);\r\n  };\r\n\r\n  const handleSourceLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setSourceLanguage(value);\r\n  };\r\n\r\n  const handleOutputLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setOutputLanguage(value);\r\n  };\r\n\r\n  const handleAddLanguages = () => {\r\n    const isAdded = selectedLanguages.some(language => (\r\n      language.sourceLanguageId === sourceLanguage\r\n      && language.outputLanguageId === outputLanguage\r\n    ));\r\n\r\n    if (sourceLanguage && outputLanguage && !isAdded) {\r\n      setSelectedLanguages([\r\n        ...selectedLanguages,\r\n        {\r\n          sourceLanguageId: sourceLanguage,\r\n          outputLanguageId: outputLanguage,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLanguage = (languagePair: LanguagePair) => {\r\n    const newSelectedLanguages = selectedLanguages.filter(language => language !== languagePair);\r\n\r\n    setSelectedLanguages(newSelectedLanguages);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"user-profile__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"user-profile__container\">\r\n        <div className=\"user-profile__projects-info has-text-white has-text-weight-light\">\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.active}</p>\r\n            <p className=\"is-size-3\"> active projects</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.completed}</p>\r\n            <p className=\"is-size-3\">completed projects</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{`${projects?.money}$`}</p>\r\n            <p className=\"is-size-3\">total income</p>\r\n          </div>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Personal information\r\n        </h2>\r\n\r\n        <div className=\"user-profile__personal-info\">\r\n          <label\r\n            htmlFor=\"firstname\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Firstname:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"firstname\"\r\n                type=\"text\"\r\n                value={firstname}\r\n                onChange={handleFirstname}\r\n                onBlur={validateFirstname}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasFirstnameError },\r\n                )}\r\n              />\r\n              {hasFirstnameError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter your firstname</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"lastname\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Lastname:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"lastname\"\r\n                type=\"text\"\r\n                value={lastname}\r\n                onChange={handleLastname}\r\n                onBlur={validateLastname}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasLastnameError },\r\n                )}\r\n              />\r\n              {hasLastnameError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter a valid email</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Security and privacy\r\n        </h2>\r\n\r\n        <div className=\"user-profile__personal-info\">\r\n          <label\r\n            htmlFor=\"password\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Current password:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={handlePassword}\r\n                onBlur={validatePassword}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasPasswordError || isWrongPassword },\r\n                )}\r\n              />\r\n              {hasPasswordError && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Password must contain at least 8 characters, one digit,\r\n                  one uppercase and lowercase letter\r\n                </p>\r\n              )}\r\n              {isWrongPassword && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Ooops, wrong password.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"newPassword\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            New password:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"newPassword\"\r\n                value={newPassword}\r\n                onChange={handleNewPassword}\r\n                onBlur={validateNewPassword}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasNewPasswordError },\r\n                )}\r\n              />\r\n              {hasNewPasswordError && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Password must contain at least 8 characters, one digit,\r\n                  one uppercase and lowercase letter\r\n                </p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"email\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Email:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={handleEmail}\r\n                onBlur={validateEmail}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasEmailError },\r\n                )}\r\n              />\r\n              {hasEmailError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter a valid email</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Subjects\r\n        </h2>\r\n\r\n        <div className=\"user-profile__subjects\">\r\n          <div className=\"select is-rounded is-medium\">\r\n            <select\r\n              value={0}\r\n              onChange={handleSubject}\r\n              className=\"user-profile__subject-select has-text-weight-light\"\r\n            >\r\n              <option value={0} disabled>Choose  subject(s)</option>\r\n              {subjects.map(subject => (\r\n                <option\r\n                  key={subject.id}\r\n                  value={subject.id}\r\n                >\r\n                  {subject.subject}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"user-profile__selected-subjects\">\r\n            {selectedSubjects.length ? (\r\n              selectedSubjects.map(subjectId => {\r\n                const selectedSubject = subjects.find(subject => subject.id === subjectId);\r\n\r\n                return (\r\n                  <span key={subjectId} className=\"tag is-primary is-rounded\">\r\n                    {selectedSubject?.subject}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"delete is-small\"\r\n                      onClick={() => handleDeleteSubject(subjectId)}\r\n                    >\r\n                    </button>\r\n                  </span>\r\n                );\r\n              })\r\n            ) : (\r\n              <span className=\"has-text-white has-text-weight-light\">\r\n                Please, choose subject fields in order to have access to projects.\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Language pairs\r\n        </h2>\r\n\r\n        <div className=\"user-profile__language-pairs\">\r\n          <div className=\"user-profile__languages\">\r\n            <label\r\n              htmlFor=\"sourceLanguage\"\r\n              className=\"has-text-white has-text-weight-light is-size-4\"\r\n            >\r\n              Translate from:\r\n\r\n              <div className=\"control\">\r\n                <div className=\"user-profile__language-select select is-rounded is-medium\">\r\n                  <select\r\n                    id=\"sourceLanguage\"\r\n                    value={sourceLanguage}\r\n                    onChange={handleSourceLanguage}\r\n                    className=\"user-profile__subject-select has-text-weight-light\"\r\n                  >\r\n                    <option value={0} disabled>Choose language(s)</option>\r\n                    {languages.map(language => (\r\n                      <option\r\n                        key={language.id}\r\n                        value={language.id}\r\n                      >\r\n                        {language.language}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </label>\r\n\r\n            <label\r\n              htmlFor=\"outputLanguage\"\r\n              className=\"has-text-white has-text-weight-light is-size-4\"\r\n            >\r\n              Translate to:\r\n\r\n              <div className=\"control\">\r\n                <div className=\"user-profile__language-select select is-rounded is-medium\">\r\n                  <select\r\n                    id=\"outputLanguage\"\r\n                    value={outputLanguage}\r\n                    onChange={handleOutputLanguage}\r\n                    className=\"user-profile__subject-select has-text-weight-light\"\r\n                  >\r\n                    <option value={0} disabled>Choose language(s)</option>\r\n                    {languages\r\n                      .filter(language => language.id !== sourceLanguage)\r\n                      .map(language => (\r\n                        <option\r\n                          key={language.id}\r\n                          value={language.id}\r\n                        >\r\n                          {language.language}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </label>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"user-profile__add-button user-profile__update button is-rounded is-medium\"\r\n              onClick={handleAddLanguages}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n\r\n          {selectedLanguages.length ? (\r\n            <div className=\"user-profile__table-container table-container\">\r\n              <table className=\"user-profile__table table is-hoverable\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Source language</th>\r\n                    <th>Target language</th>\r\n                    <th>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {selectedLanguages.map(languagePair => {\r\n                    const sourceLang = languages.find(language => (\r\n                      language.id === languagePair.sourceLanguageId\r\n                    ));\r\n                    const outputLang = languages.find(language => (\r\n                      language.id === languagePair.outputLanguageId\r\n                    ));\r\n\r\n                    return (\r\n                      <tr\r\n                        key={`${languagePair.sourceLanguageId}-${languagePair.outputLanguageId}`}\r\n                      >\r\n                        <td>{sourceLang?.language}</td>\r\n                        <td>{outputLang?.language}</td>\r\n                        <td>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"delete\"\r\n                            onClick={() => handleDeleteLanguage(languagePair)}\r\n                          >\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"user-profile__selected-languages\">\r\n              <span className=\"has-text-white has-text-weight-light\">\r\n                Please, choose languages pairs in order to have access to projects.\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"user-profile__button-container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"user-profile__cancel button is-rounded is-medium\"\r\n            onClick={handleCancel}\r\n          >\r\n            Cancel\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            disabled={\r\n              hasEmailError\r\n              || hasPasswordError\r\n              || isWrongPassword\r\n              || hasNewPasswordError\r\n              || hasFirstnameError\r\n              || hasLastnameError\r\n            }\r\n            onClick={handleUpdate}\r\n            className=\"user-profile__update button is-rounded is-medium\"\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { saveProject } from '../../api/quota';\r\nimport {\r\n  getPersonalInfo,\r\n  getProjectsInfo,\r\n  updateEmail,\r\n  updateName,\r\n  updatePassword,\r\n  updatePersonalInfo,\r\n} from '../../api/user';\r\nimport { emailTest, passwordTest } from '../../RegExps';\r\nimport { userActions, userSelectors } from '../../store/user';\r\nimport { PersonalInfo, UserProjects } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport './UserProfile.scss';\r\n\r\nexport const UserProfile: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userSelectors.getUser);\r\n\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [projects, setProjects] = useState<UserProjects | null>(null);\r\n  const [personalInfo, setPersonalInfo] = useState<PersonalInfo | null>(null);\r\n  const [website, setWebsite] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n\r\n  const [hasPasswordError, setPasswordError] = useState(false);\r\n  const [isWrongPassword, setWrongPassword] = useState(false);\r\n  const [hasNewPasswordError, setNewPasswordError] = useState(false);\r\n  const [hasEmailError, setEmailError] = useState(false);\r\n  const [hasFirstnameError, setFirstnameError] = useState(false);\r\n  const [hasLastnameError, setLastnameError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const quoteId = sessionStorage.getItem('quote');\r\n      const preferences = sessionStorage.getItem('preferences');\r\n\r\n      if (quoteId) {\r\n        try {\r\n          await saveProject(quoteId, preferences);\r\n        } catch (e) {\r\n          // eslint-disable-next-line no-console\r\n          console.log(e);\r\n        } finally {\r\n          sessionStorage.removeItem('quote');\r\n          sessionStorage.removeItem('preferences');\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getProjectsInfo();\r\n        const newInfo = await getPersonalInfo();\r\n\r\n        setProjects(newProjects);\r\n        setPersonalInfo(newInfo);\r\n        setWebsite(newInfo.website);\r\n        setCompany(newInfo.company);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFirstname(user.firstname);\r\n      setLastname(user.lastname);\r\n      setEmail(user.email);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleUpdate = async () => {\r\n    if (user?.firstname !== firstname || user?.lastname !== lastname) {\r\n      try {\r\n        const newUser = await updateName(firstname, lastname);\r\n\r\n        dispatch(userActions.setUser(newUser));\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (personalInfo?.website !== website || personalInfo.company !== company) {\r\n      try {\r\n        const newPersonalInfo = await updatePersonalInfo(website, company);\r\n\r\n        setPersonalInfo(newPersonalInfo);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (user?.email !== email) {\r\n      try {\r\n        const newUser = await updateEmail(email);\r\n\r\n        dispatch(userActions.setUser(newUser));\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (password && newPassword) {\r\n      try {\r\n        await updatePassword(password, newPassword);\r\n      } catch (e) {\r\n        setWrongPassword(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    if (!emailTest.test(email)) {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setEmailError(false);\r\n    setEmail(value);\r\n  };\r\n\r\n  const validateFirstname = () => {\r\n    if (!firstname) {\r\n      setFirstnameError(true);\r\n    }\r\n  };\r\n\r\n  const handleFirstname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setFirstnameError(false);\r\n    setFirstname(value);\r\n  };\r\n\r\n  const validateLastname = () => {\r\n    if (!lastname) {\r\n      setLastnameError(true);\r\n    }\r\n  };\r\n\r\n  const handleLastname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setLastnameError(false);\r\n    setLastname(value);\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (!passwordTest.test(password) && password) {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setPasswordError(false);\r\n    setWrongPassword(false);\r\n    setPassword(value);\r\n  };\r\n\r\n  const validateNewPassword = () => {\r\n    if (!passwordTest.test(newPassword) && newPassword) {\r\n      setNewPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const handleNewPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setNewPasswordError(false);\r\n    setNewPassword(value);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (user) {\r\n      setFirstname(user.firstname);\r\n      setLastname(user.lastname);\r\n      setEmail(user.email);\r\n    }\r\n\r\n    if (personalInfo) {\r\n      setCompany(personalInfo.company);\r\n      setWebsite(personalInfo.website);\r\n    }\r\n\r\n    setPassword('');\r\n    setNewPassword('');\r\n\r\n    setFirstnameError(false);\r\n    setLastnameError(false);\r\n    setEmailError(false);\r\n    setPasswordError(false);\r\n    setNewPasswordError(false);\r\n    setWrongPassword(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"user-profile__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"user-profile__container\">\r\n        <div className=\"user-profile__projects-info has-text-white has-text-weight-light\">\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.active}</p>\r\n            <p className=\"is-size-3\"> active projects</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.completed}</p>\r\n            <p className=\"is-size-3\">completed projects</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.waiting}</p>\r\n            <p className=\"is-size-3\">waiting for payment</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{`${projects?.money}$`}</p>\r\n            <p className=\"is-size-3\">total amount</p>\r\n          </div>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Personal information\r\n        </h2>\r\n\r\n        <div className=\"user-profile__personal-info\">\r\n          <label\r\n            htmlFor=\"firstname\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Firstname:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"firstname\"\r\n                type=\"text\"\r\n                value={firstname}\r\n                onChange={handleFirstname}\r\n                onBlur={validateFirstname}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasFirstnameError },\r\n                )}\r\n              />\r\n              {hasFirstnameError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter your firstname</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"lastname\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Lastname:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"lastname\"\r\n                type=\"text\"\r\n                value={lastname}\r\n                onChange={handleLastname}\r\n                onBlur={validateLastname}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasLastnameError },\r\n                )}\r\n              />\r\n              {hasLastnameError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter a valid email</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"company\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Company name:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"company\"\r\n                type=\"text\"\r\n                value={company}\r\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                  setCompany(event.target.value);\r\n                }}\r\n                className=\"user-profile__personal-info-input input is-rounded has-text-weight-light is-medium\"\r\n              />\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"userWebsite\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Website:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"userWebsite\"\r\n                type=\"text\"\r\n                value={website}\r\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                  setWebsite(event.target.value);\r\n                }}\r\n                className=\"user-profile__personal-info-input input is-rounded has-text-weight-light is-medium\"\r\n              />\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Security and privacy\r\n        </h2>\r\n\r\n        <div className=\"user-profile__personal-info\">\r\n          <label\r\n            htmlFor=\"password\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Current password:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={handlePassword}\r\n                onBlur={validatePassword}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasPasswordError || isWrongPassword },\r\n                )}\r\n              />\r\n              {hasPasswordError && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Password must contain at least 8 characters, one digit,\r\n                  one uppercase and lowercase letter\r\n                </p>\r\n              )}\r\n              {isWrongPassword && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Ooops, wrong password.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"newPassword\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            New password:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"newPassword\"\r\n                value={newPassword}\r\n                onChange={handleNewPassword}\r\n                onBlur={validateNewPassword}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasNewPasswordError },\r\n                )}\r\n              />\r\n              {hasNewPasswordError && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Password must contain at least 8 characters, one digit,\r\n                  one uppercase and lowercase letter\r\n                </p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"email\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Email:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={handleEmail}\r\n                onBlur={validateEmail}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasEmailError },\r\n                )}\r\n              />\r\n              {hasEmailError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter a valid email</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"user-profile__button-container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"user-profile__cancel button is-rounded is-medium\"\r\n            onClick={handleCancel}\r\n          >\r\n            Cancel\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            disabled={\r\n              hasEmailError\r\n              || hasPasswordError\r\n              || isWrongPassword\r\n              || hasNewPasswordError\r\n              || hasFirstnameError\r\n              || hasLastnameError\r\n            }\r\n            onClick={handleUpdate}\r\n            className=\"user-profile__update button is-rounded is-medium\"\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { getProjects } from '../../api/projects';\r\nimport { ProjectStatus } from '../../enums';\r\nimport { Project } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport './UserProjects.scss';\r\n\r\nexport const TranslatorProjects: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const [statusProject, setStatusProject] = useState(ProjectStatus.Active);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getProjects(statusProject);\r\n\r\n        setProjects(newProjects);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [statusProject]);\r\n\r\n  const handleTabClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    status: ProjectStatus,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    setStatusProject(status);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"projects-page__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"tabs is-boxed is-medium\">\r\n        <ul className=\"projects-page__list\">\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Active })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Active)}\r\n            >\r\n              Active projects\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Completed })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Completed)}\r\n            >\r\n              Completed projects\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>File name</th>\r\n            <th>Source language</th>\r\n            <th>Target language</th>\r\n            <th>Subject</th>\r\n            <th>Words count</th>\r\n            <th>Translated words</th>\r\n            <th>Start date</th>\r\n            {statusProject === ProjectStatus.Completed && (\r\n              <>\r\n                <th>End date</th>\r\n                <th>Price</th>\r\n              </>\r\n            )}\r\n            <th>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map(project => {\r\n            return (\r\n              <tr key={project.id + project.targetLanguage.languageCode}>\r\n                <td>{project.fileName}</td>\r\n                <td>{project.sourceLanguage.language}</td>\r\n                <td>{project.targetLanguage.language}</td>\r\n                <td>{project.subject.subject}</td>\r\n                <td>{project.wordsCount}</td>\r\n                <td>{project.transaltedWordsCount}</td>\r\n                <td>{new Date(Date.parse(project.startDate)).toDateString()}</td>\r\n                {statusProject === ProjectStatus.Completed && (\r\n                  <>\r\n                    <td>{new Date(Date.parse(project.endDate)).toDateString()}</td>\r\n                    <td>{`${project.price}$`}</td>\r\n                  </>\r\n                )}\r\n                <td>\r\n                  <Link\r\n                    to={`/project/${project.id}/${project.targetLanguage.id}`}\r\n                    className=\"projects-page__table-button\"\r\n                  >\r\n                    View\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import fileDownload from 'js-file-download';\r\nimport { translatorApi } from './apis';\r\nimport { getAuthorizationOptions } from './baseWithAuthorization';\r\n\r\nconst request = async (url: string, options?: RequestInit): Promise<Blob> => {\r\n  const newOptions = await getAuthorizationOptions(options);\r\n\r\n  const response = await fetch(url, newOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error((await response.json()).errorMessage);\r\n  }\r\n\r\n  return response.blob();\r\n};\r\n\r\nexport const downloadFile = async (\r\n  projectId: number,\r\n  targetLangId: number,\r\n  projectName: string,\r\n): Promise<void> => {\r\n  const file = await request(`${translatorApi}/api/Projects/${projectId}/${targetLangId}/file`);\r\n\r\n  fileDownload(file, projectName);\r\n};\r\n","import { clientApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const payment = (projectId: number, nonce: string): Promise<void> => {\r\n  return request(`${clientApi}/api/Quota`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      projectId,\r\n      nonce,\r\n    }),\r\n  });\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as dropin from 'braintree-web-drop-in';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { payment } from '../../api/payment';\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  setShow: (show: boolean) => void;\r\n  projectId: number;\r\n  onPaymentComplete: () => void;\r\n};\r\n\r\nexport const PaymentModal: React.FC<Props> = ({\r\n  show,\r\n  setShow,\r\n  projectId,\r\n  onPaymentComplete,\r\n}) => {\r\n  const handleError = useErrorHandler();\r\n  const [braintreeInstance, setBraintreeInstance] = useState<dropin.Dropin>();\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      const initializeBraintree = () => dropin.create({\r\n        authorization: 'sandbox_38sfybrb_v8s2m2wz66fvx7zx',\r\n        container: '#braintree-drop-in-div',\r\n      }, (error, instance) => {\r\n        if (error) {\r\n          handleError(error);\r\n        } else {\r\n          setBraintreeInstance(instance);\r\n        }\r\n      });\r\n\r\n      if (braintreeInstance) {\r\n        braintreeInstance\r\n          .teardown()\r\n          .then(() => {\r\n            setBraintreeInstance(undefined);\r\n            initializeBraintree();\r\n          });\r\n      } else {\r\n        initializeBraintree();\r\n      }\r\n    }\r\n  }, [show]);\r\n\r\n  const handlePay = () => {\r\n    if (braintreeInstance) {\r\n      braintreeInstance.requestPaymentMethod(\r\n        async (error, payload) => {\r\n          if (error) {\r\n            handleError(error);\r\n          } else {\r\n            const paymentMethodNonce = payload.nonce;\r\n\r\n            try {\r\n              await payment(projectId, paymentMethodNonce);\r\n              onPaymentComplete();\r\n            } catch (e) {\r\n              handleError(e);\r\n            }\r\n          }\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classNames('modal', { 'is-active': show })}>\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">Project payment</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"delete\"\r\n            aria-label=\"close\"\r\n            onClick={() => setShow(false)}\r\n          >\r\n          </button>\r\n        </header>\r\n        <section className=\"modal-card-body\">\r\n          <div id=\"braintree-drop-in-div\"></div>\r\n        </section>\r\n        <footer className=\"modal-card-foot is-justify-content-flex-end\">\r\n          <button\r\n            type=\"button\"\r\n            disabled={!braintreeInstance}\r\n            onClick={handlePay}\r\n            className=\"button is-dark is-outlined\"\r\n          >\r\n            Pay\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { downloadFile } from '../../api/file';\r\nimport { getProjects } from '../../api/projects';\r\nimport { ProjectStatus } from '../../enums';\r\nimport { Project } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport { PaymentModal } from '../PaymentModal/PaymentModal';\r\nimport './UserProjects.scss';\r\n\r\nexport const UserProjects: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const [statusProject, setStatusProject] = useState(ProjectStatus.Unpaid);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedProjectId, setProjectId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getProjects(statusProject);\r\n\r\n        setProjects(newProjects);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [statusProject]);\r\n\r\n  const handleTabClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    status: ProjectStatus,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    setStatusProject(status);\r\n  };\r\n\r\n  const handlePay = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    id: number,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    setProjectId(id);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const completePayment = async () => {\r\n    setShowModal(false);\r\n    try {\r\n      const newProjects = await getProjects(statusProject);\r\n\r\n      setProjects(newProjects);\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    projectId: number,\r\n    targetLangId: number,\r\n    projectName: string,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    try {\r\n      await downloadFile(projectId, targetLangId, projectName);\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"projects-page__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"tabs is-boxed is-medium\">\r\n        <ul className=\"projects-page__list\">\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Active })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Active)}\r\n            >\r\n              Active projects\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Completed })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Completed)}\r\n            >\r\n              Completed projects\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Unpaid })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Unpaid)}\r\n            >\r\n              Unpaid projects\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>File name</th>\r\n            <th>Source language</th>\r\n            <th>Target language</th>\r\n            <th>Subject</th>\r\n            <th>Words count</th>\r\n            {statusProject !== ProjectStatus.Unpaid && (\r\n              <th>Start date</th>\r\n            )}\r\n            {statusProject === ProjectStatus.Completed && (\r\n              <th>End date</th>\r\n            )}\r\n            <th>Price</th>\r\n            <th>\r\n            </th>\r\n            {statusProject === ProjectStatus.Completed && (\r\n              <th>\r\n              </th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map(project => {\r\n            return (\r\n              <tr key={project.id + project.targetLanguage.languageCode}>\r\n                <td>{project.fileName}</td>\r\n                <td>{project.sourceLanguage.language}</td>\r\n                <td>{project.targetLanguage.language}</td>\r\n                <td>{project.subject.subject}</td>\r\n                <td>{project.wordsCount}</td>\r\n                {statusProject !== ProjectStatus.Unpaid && (\r\n                  <td>{new Date(Date.parse(project.startDate)).toDateString()}</td>\r\n                )}\r\n                {statusProject === ProjectStatus.Completed && (\r\n                  <td>{new Date(Date.parse(project.endDate)).toDateString()}</td>\r\n                )}\r\n                <td>{`${project.price}$`}</td>\r\n                <td>\r\n                  {statusProject === ProjectStatus.Unpaid ? (\r\n                    <a\r\n                      href=\"/\"\r\n                      className=\"projects-page__table-button\"\r\n                      onClick={(event) => handlePay(event, project.id)}\r\n                    >\r\n                      Pay\r\n                    </a>\r\n                  ) : (\r\n                    <Link\r\n                      to={`/project/${project.id}/${project.targetLanguage.id}`}\r\n                      className=\"projects-page__table-button\"\r\n                    >\r\n                      View\r\n                    </Link>\r\n                  )}\r\n                </td>\r\n                {statusProject === ProjectStatus.Completed && (\r\n                  <td>\r\n                    <a\r\n                      href=\"/\"\r\n                      className=\"projects-page__table-button\"\r\n                      onClick={(event) => handleDownload(\r\n                        event,\r\n                        project.id,\r\n                        project.targetLanguage.id,\r\n                        project.fileName,\r\n                      )}\r\n                    >\r\n                      Download\r\n                    </a>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <PaymentModal\r\n        show={showModal}\r\n        setShow={setShowModal}\r\n        projectId={selectedProjectId}\r\n        onPaymentComplete={completePayment}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header } from '../Header/Header';\r\nimport background from '../../images/not-found.png';\r\n\r\ntype Props = {\r\n  error: Error,\r\n  resetErrorBoundary: () => void,\r\n};\r\n\r\nexport const FallbackComponent: React.FC<Props> = ({ error, resetErrorBoundary }) => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <section className=\"home\">\r\n        <h2 className=\"home__title has-text-weight-light\">{error.message}</h2>\r\n\r\n        <div className=\"columns\">\r\n          <div className=\"home__section column is-half-desktop\">\r\n            <Link\r\n              to=\"/\"\r\n              onClick={resetErrorBoundary}\r\n              className=\"home__button button is-rounded is-medium\"\r\n            >\r\n              Go to home page\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <img\r\n          src={background}\r\n          alt=\"background\"\r\n          className=\"home__background is-hidden-touch\"\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIncome, getPrice, setPrice } from '../../api/income';\r\nimport { languagesSelectors } from '../../store/language';\r\nimport { Income } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport './IncomePage.scss';\r\n\r\nexport const IncomePage: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n  const [income, setIncome] = useState<Income | null>(null);\r\n  const [sourceLanguage, setSourceLanguage] = useState(0);\r\n  const [targetLanguage, setTargetLanguage] = useState(0);\r\n  const [userPrice, setUserPrice] = useState('0');\r\n  const [translatorPrice, setTranslatorPrice] = useState('0');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newIncome = await getIncome();\r\n\r\n        setIncome(newIncome);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!sourceLanguage === !targetLanguage) {\r\n        try {\r\n          const newPrice = await getPrice(sourceLanguage, targetLanguage);\r\n\r\n          setUserPrice(newPrice.pricePerUnitInput.toString());\r\n          setTranslatorPrice(newPrice.pricePerUnitOutput.toString());\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      }\r\n    })();\r\n  }, [sourceLanguage, targetLanguage]);\r\n\r\n  const handleSourceLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setSourceLanguage(value);\r\n  };\r\n\r\n  const handleTargetLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setTargetLanguage(value);\r\n  };\r\n\r\n  const handleUserPrice = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setUserPrice(value.replace(/[^0-9]/g, ''));\r\n  };\r\n\r\n  const handleTranslatorPrice = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setTranslatorPrice(value.replace(/[^0-9]/g, ''));\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    if (!sourceLanguage === !targetLanguage && +userPrice && +translatorPrice) {\r\n      try {\r\n        await setPrice(+userPrice, +translatorPrice, sourceLanguage, targetLanguage);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"income__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"income__container\">\r\n        <div className=\"income__projects-info has-text-white has-text-weight-light\">\r\n          <div className=\"income__projects-info-data\">\r\n            <p className=\"is-size-1\">{`${income?.totalIncome}$`}</p>\r\n            <p className=\"is-size-3\"> total income</p>\r\n          </div>\r\n\r\n          <div className=\"income__projects-info-data\">\r\n            <p className=\"is-size-1\">{`${income?.totalPayments}$`}</p>\r\n            <p className=\"is-size-3\">payments to translators</p>\r\n          </div>\r\n\r\n          <div className=\"income__projects-info-data\">\r\n            <p className=\"is-size-1\">{`${income?.income}$`}</p>\r\n            <p className=\"is-size-3\">profit</p>\r\n          </div>\r\n        </div>\r\n\r\n        <h2 className=\"income__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Pricing\r\n        </h2>\r\n\r\n        <div className=\"income__pricing\">\r\n          <label\r\n            htmlFor=\"sourceLanguage\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Source language:\r\n\r\n            <div className=\"control\">\r\n              <div className=\"income__language-select select is-rounded is-medium\">\r\n                <select\r\n                  id=\"sourceLanguage\"\r\n                  value={sourceLanguage}\r\n                  onChange={handleSourceLanguage}\r\n                  className=\"income__select has-text-weight-light\"\r\n                >\r\n                  <option value={0}>All</option>\r\n                  {languages.map(language => (\r\n                    <option\r\n                      key={language.id}\r\n                      value={language.id}\r\n                    >\r\n                      {language.language}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"outputLanguage\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Target language:\r\n\r\n            <div className=\"control\">\r\n              <div className=\"income__language-select select is-rounded is-medium\">\r\n                <select\r\n                  id=\"outputLanguage\"\r\n                  value={targetLanguage}\r\n                  onChange={handleTargetLanguage}\r\n                  className=\"income__select has-text-weight-light\"\r\n                >\r\n                  <option value={0}>All</option>\r\n                  {languages\r\n                    .filter(language => language.id !== sourceLanguage)\r\n                    .map(language => (\r\n                      <option\r\n                        key={language.id}\r\n                        value={language.id}\r\n                      >\r\n                        {language.language}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"userPrice\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Price per word for customer\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"userPrice\"\r\n                type=\"text\"\r\n                value={userPrice}\r\n                onChange={handleUserPrice}\r\n                className=\"income__input input is-rounded has-text-weight-light is-medium\"\r\n              />\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"translatorPrice\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Price per word for translator\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"translatorPrice\"\r\n                type=\"text\"\r\n                value={translatorPrice}\r\n                onChange={handleTranslatorPrice}\r\n                className=\"income__input input is-rounded has-text-weight-light is-medium\"\r\n              />\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"income__button-container\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleUpdate}\r\n            className=\"income__update button is-rounded is-medium\"\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Income, Pricing } from '../types';\r\nimport { adminApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const getIncome = (): Promise<Income> => {\r\n  return request(`${adminApi}/api/Payments`);\r\n};\r\n\r\nexport const getPrice = (sourceLangId: number, targetLangId: number): Promise<Pricing> => {\r\n  return request(`${adminApi}/api/Payments/pricing?sourceLangId=${sourceLangId}&targetLangId=${targetLangId}`);\r\n};\r\n\r\nexport const setPrice = (\r\n  pricePerUnitInput: number,\r\n  pricePerUnitOutput: number,\r\n  sourceLanguageId: number,\r\n  targetLanguageId: number,\r\n): Promise<void> => {\r\n  return request(`${adminApi}/api/Payments/pricing`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      pricePerUnitInput,\r\n      pricePerUnitOutput,\r\n      sourceLanguageId,\r\n      targetLanguageId,\r\n    }),\r\n  });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/languages.f8e1e7e5.png\";","import React from 'react';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeLanguageStatus, getLanguages } from '../../api/language';\r\nimport { languagesActions, languagesSelectors } from '../../store/language';\r\nimport { Header } from '../Header/Header';\r\nimport './LanguagesPage.scss';\r\nimport background from '../../images/languages.png';\r\n\r\nexport const LanguagesPage: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const dispatch = useDispatch();\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n\r\n  const handleChangeState = async (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    langId: number,\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await changeLanguageStatus(langId);\r\n      const newLanguages = await getLanguages();\r\n\r\n      dispatch(languagesActions.setLanguages(newLanguages));\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"languages__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"languages__container columns\">\r\n        <div className=\"column is-half\">\r\n          <table className=\"table is-hoverable is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Language</th>\r\n                <th>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {languages.map(language => {\r\n                return (\r\n                  <tr key={language.id}>\r\n                    <td>{language.language}</td>\r\n                    <td>\r\n                      <a\r\n                        href=\"/\"\r\n                        className=\"languages__table-button\"\r\n                        onClick={(event => handleChangeState(event, language.id))}\r\n                      >\r\n                        {language.isActive ? 'Deactivate' : 'Activate'}\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div>\r\n          <img\r\n            src={background}\r\n            alt=\"background\"\r\n            className=\"languages__background is-hidden-touch\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addSubject, deleteSubject, getSubjects } from '../../api/subject';\r\nimport { subjectsActions, subjectsSelectors } from '../../store/subject';\r\nimport { Header } from '../Header/Header';\r\nimport './SubjectsPage.scss';\r\n\r\nexport const SubjectsPage: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const dispatch = useDispatch();\r\n  const subjects = useSelector(subjectsSelectors.getSubjects);\r\n  const [newSubject, setSubject] = useState('');\r\n\r\n  const handleDelete = async (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    subjectId: number,\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await deleteSubject(subjectId);\r\n      const newSubjects = await getSubjects();\r\n\r\n      dispatch(subjectsActions.setSubjects(newSubjects));\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const handleAdd = async () => {\r\n    const isNotExist = subjects.every(subject => subject.subject !== newSubject);\r\n\r\n    if (newSubject && isNotExist) {\r\n      try {\r\n        await addSubject(newSubject);\r\n        const newSubjects = await getSubjects();\r\n\r\n        dispatch(subjectsActions.setSubjects(newSubjects));\r\n        setSubject('');\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"subjects__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"subjects__container columns\">\r\n        <div className=\"column is-half\">\r\n          <table className=\"table is-hoverable is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Subject</th>\r\n                <th>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {subjects.map(subject => {\r\n                return (\r\n                  <tr key={subject.id}>\r\n                    <td>{subject.subject}</td>\r\n                    <td>\r\n                      <a\r\n                        href=\"/\"\r\n                        className=\"subjects__table-button\"\r\n                        onClick={((event) => handleDelete(event, subject.id))}\r\n                      >\r\n                        Delete\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"column\">\r\n          <div className=\"subjects__new-subject-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter a new subject\"\r\n              value={newSubject}\r\n              onChange={(event) => setSubject(event.target.value)}\r\n              className=\"subjects__input input is-rounded has-text-weight-light is-medium\"\r\n            />\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleAdd}\r\n              className=\"subjects__add button is-rounded is-medium\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAdminProjects } from '../../api/projects';\r\nimport { getTranslatorById } from '../../api/user';\r\nimport { ProjectStatus } from '../../enums';\r\nimport { languagesSelectors } from '../../store/language';\r\nimport { subjectsSelectors } from '../../store/subject';\r\nimport { Project, Translator } from '../../types';\r\n\r\ntype Props = {\r\n  userId?: number;\r\n  isTranslator?: boolean;\r\n};\r\n\r\nexport const Projects: React.FC<Props> = ({ userId, isTranslator }) => {\r\n  const handleError = useErrorHandler();\r\n  const navigate = useNavigate();\r\n  const subjects = useSelector(subjectsSelectors.getSubjects);\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n\r\n  const [selectedSubject, setSelectedSubject] = useState(0);\r\n  const [selectedSourceLang, setSourceLang] = useState(0);\r\n  const [selectedTargetLang, setTargetLang] = useState(0);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [projectStatus, setProjectStatus] = useState<ProjectStatus>();\r\n  const [translator, setTranslator] = useState<Translator>();\r\n\r\n  useEffect(() => {\r\n    if (userId && isTranslator) {\r\n      (async () => {\r\n        const newTranslator = await getTranslatorById(userId);\r\n\r\n        setTranslator(newTranslator);\r\n      })();\r\n    } else {\r\n      setTranslator(undefined);\r\n    }\r\n  }, [userId, isTranslator]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getAdminProjects(\r\n          selectedSubject,\r\n          selectedSourceLang,\r\n          selectedTargetLang,\r\n          projectStatus,\r\n          userId,\r\n          isTranslator,\r\n        );\r\n\r\n        setProjects(newProjects);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [\r\n    selectedSubject,\r\n    selectedSourceLang,\r\n    selectedTargetLang,\r\n    projectStatus,\r\n    userId,\r\n    isTranslator,\r\n  ]);\r\n\r\n  const filteredSubjects = useMemo(() => {\r\n    return translator\r\n      ? subjects.filter(s => translator.subjectIds.includes(s.id))\r\n      : subjects;\r\n  }, [translator]);\r\n\r\n  const filteredSourceLanguages = useMemo(() => {\r\n    return translator\r\n      ? languages\r\n        .filter(language => (\r\n          translator.languagesPairs\r\n            .some(translatorLang => translatorLang.sourceLanguageId === language.id)\r\n        ))\r\n      : languages;\r\n  }, [translator]);\r\n\r\n  const filteredTargetLanguages = useMemo(() => {\r\n    if (!translator) {\r\n      return languages.filter(l => l.id !== selectedSourceLang);\r\n    }\r\n\r\n    if (selectedSourceLang) {\r\n      return languages\r\n        .filter(language => (\r\n          translator.languagesPairs\r\n            .some(translatorLang => translatorLang.outputLanguageId === language.id\r\n              && translatorLang.sourceLanguageId === selectedSourceLang)\r\n        ));\r\n    }\r\n\r\n    return languages\r\n      .filter(language => (\r\n        translator.languagesPairs\r\n          .some(translatorLang => translatorLang.outputLanguageId === language.id)\r\n      ));\r\n  }, [selectedSourceLang, translator]);\r\n\r\n  const handleSubject = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setSelectedSubject(value);\r\n  };\r\n\r\n  const handleSourceLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setSourceLang(value);\r\n  };\r\n\r\n  const handleTargetLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setTargetLang(value);\r\n  };\r\n\r\n  const handleProjectStatus = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setProjectStatus(value < 0 ? undefined : value);\r\n  };\r\n\r\n  const handleChoose = async (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    projectId: number,\r\n    targetLangId: number,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    try {\r\n      navigate(`/project/${projectId}/${targetLangId}`);\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"projects__filters\">\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={selectedSubject}\r\n            onChange={handleSubject}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={0}>All subjects</option>\r\n            {filteredSubjects.map(subject => (\r\n              <option\r\n                key={subject.id}\r\n                value={subject.id}\r\n              >\r\n                {subject.subject}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={selectedSourceLang}\r\n            onChange={handleSourceLanguage}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={0}>All source languages</option>\r\n            {filteredSourceLanguages.map(language => (\r\n              <option\r\n                key={language.id}\r\n                value={language.id}\r\n              >\r\n                {language.language}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={selectedTargetLang}\r\n            onChange={handleTargetLanguage}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={0}>All target languages</option>\r\n            {filteredTargetLanguages\r\n              .filter(language => language.id !== selectedSourceLang)\r\n              .map(language => (\r\n                <option\r\n                  key={language.id}\r\n                  value={language.id}\r\n                >\r\n                  {language.language}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={projectStatus}\r\n            onChange={handleProjectStatus}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={-1}>All project statuses</option>\r\n            {!translator && (<option value={0}>Unpaid</option>)}\r\n            <option value={1}>Active</option>\r\n            <option value={2}>Completed</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>File name</th>\r\n            <th>Source language</th>\r\n            <th>Target language</th>\r\n            <th>Subject</th>\r\n            <th>Words count</th>\r\n            <th>Translated words count</th>\r\n            <th>Price</th>\r\n            <th>Starn date</th>\r\n            <th>End date</th>\r\n            <th>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map(project => {\r\n            return (\r\n              <tr key={project.id + project.targetLanguage.id}>\r\n                <td>{project.fileName}</td>\r\n                <td>{project.sourceLanguage.language}</td>\r\n                <td>{project.targetLanguage.language}</td>\r\n                <td>{project.subject.subject}</td>\r\n                <td>{project.wordsCount}</td>\r\n                <td>{project.transaltedWordsCount}</td>\r\n                <td>{project.price}</td>\r\n                <td>{project.startDate}</td>\r\n                <td>{project.endDate}</td>\r\n                <td>\r\n                  <a\r\n                    href=\"/\"\r\n                    className=\"projects__choose\"\r\n                    onClick={(event) => handleChoose(event, project.id, project.targetLanguage.id)}\r\n                  >\r\n                    View\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Header } from '../Header/Header';\r\nimport { Projects } from '../Projects/Projects';\r\n\r\nexport const ProjectsPage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <Projects />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getUserById } from '../../api/user';\r\nimport { User } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport { Projects } from '../Projects/Projects';\r\n\r\ntype Props = {\r\n  isTranslator?: boolean;\r\n};\r\n\r\nexport const UserPage: React.FC<Props> = ({ isTranslator }) => {\r\n  const handleError = useErrorHandler();\r\n  const { id } = useParams();\r\n\r\n  const [user, setUser] = useState<User>();\r\n\r\n  const userId = useMemo(() => (id === undefined ? undefined : +id), [id]);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      (async () => {\r\n        try {\r\n          const newUser = await getUserById(userId);\r\n\r\n          setUser(newUser);\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      })();\r\n    }\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div className=\"message\">\r\n        <section className=\"message-body has-text-white\">\r\n          {user?.firstname}\r\n          {' '}\r\n          {user?.lastname}\r\n          <br />\r\n          <a href={`mailto:${user?.email}`}>{user?.email}</a>\r\n        </section>\r\n      </div>\r\n\r\n      <Projects userId={userId} isTranslator={!!isTranslator} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUsers } from '../../api/user';\r\nimport { AccountType } from '../../enums';\r\nimport { UserView } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport './UsersPage.scss';\r\n\r\ntype Props = {\r\n  accountType: AccountType;\r\n};\r\n\r\nexport const UsersPage: React.FC<Props> = ({ accountType }) => {\r\n  const handleError = useErrorHandler();\r\n  const [users, setUsers] = useState<UserView[]>([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newUsers = await getUsers(accountType);\r\n\r\n        setUsers(newUsers);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [accountType]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"users__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>Firstname</th>\r\n            <th>Lastname</th>\r\n            <th>Email</th>\r\n            <th>Projects count</th>\r\n            <th>Total money</th>\r\n            <th>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => {\r\n            return (\r\n              <tr key={user.id}>\r\n                <td>{user.firstname}</td>\r\n                <td>{user.lastname}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.projectCount}</td>\r\n                <td>{user.totalMoney}</td>\r\n                <td>\r\n                  <Link\r\n                    to={accountType === AccountType.User\r\n                      ? `/user/${user.id}`\r\n                      : `/translator/${user.id}`}\r\n                    className=\"users__table-button\"\r\n                  >\r\n                    View\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\nimport { getLanguages } from './api/language';\r\nimport { getSubjects } from './api/subject';\r\nimport './App.scss';\r\nimport { SignIn } from './components/Authorization/SignIn';\r\nimport { SignUp } from './components/Authorization/SignUp';\r\nimport { AvailableProjects } from './components/AvailableProjects/AvailableProjects';\r\nimport { HomePage } from './components/HomePage/HomePage';\r\nimport { Project } from './components/Project/Project';\r\nimport { Quote } from './components/Qoute/Quote';\r\nimport { TranslatorProfile } from './components/TranslatorProfile/TranslatorProfile';\r\nimport { UserProfile } from './components/UserProfile/UserProfile';\r\nimport { TranslatorProjects } from './components/UserProjects/TranslatorProjects';\r\nimport { UserProjects } from './components/UserProjects/UserProjects';\r\nimport { AccountType } from './enums';\r\nimport { languagesActions } from './store/language';\r\nimport { subjectsActions } from './store/subject';\r\nimport { userActions, userSelectors } from './store/user';\r\nimport { FallbackComponent } from './components/FallbackComponent/FallbackComponent';\r\nimport { IncomePage } from './components/IncomePage/IncomePage';\r\nimport { LanguagesPage } from './components/LanguagesPage/LanguagesPage';\r\nimport { SubjectsPage } from './components/SubjectsPage/SubjectsPage';\r\nimport { getRole } from './tokenHandler';\r\nimport { ProjectsPage } from './components/ProjectsPage/ProjectsPage';\r\nimport { UserPage } from './components/UserPage/UserPage';\r\nimport { UsersPage } from './components/UsersPage/UsersPage';\r\n\r\nexport const App: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userSelectors.getUser);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const newSubjects = await getSubjects();\r\n      const newLanguages = await getLanguages();\r\n\r\n      dispatch(subjectsActions.setSubjects(newSubjects));\r\n      dispatch(languagesActions.setLanguages(newLanguages));\r\n      dispatch(userActions.loadUser());\r\n    })();\r\n  }, [user?.email]);\r\n\r\n  if (getRole() === AccountType.Admin.toString()) {\r\n    return (\r\n      <ErrorBoundary FallbackComponent={FallbackComponent}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<IncomePage />} />\r\n          <Route path=\"/languages\" element={<LanguagesPage />} />\r\n          <Route path=\"/subjects\" element={<SubjectsPage />} />\r\n          <Route path=\"/users\" element={<UsersPage accountType={AccountType.User} />} />\r\n          <Route path=\"/user/:id\" element={<UserPage isTranslator={false} />} />\r\n          <Route path=\"/translators\" element={<UsersPage accountType={AccountType.Translator} />} />\r\n          <Route path=\"/translator/:id\" element={<UserPage isTranslator />} />\r\n          <Route path=\"/projects\" element={<ProjectsPage />} />\r\n          <Route path=\"/projects\" element={<IncomePage />} />\r\n          <Route path=\"/project/:id/:lang\" element={<Project />} />\r\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n        </Routes>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary FallbackComponent={FallbackComponent}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<HomePage />} />\r\n        <Route path=\"/quote\" element={<Quote />} />\r\n        {!getRole() ? (\r\n          <>\r\n            <Route path=\"/sign-in\" element={<SignIn />} />\r\n            <Route path=\"/sign-up\" element={<SignUp />} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route path=\"/profile\" element={getRole() === AccountType.User.toString() ? <UserProfile /> : <TranslatorProfile />} />\r\n            <Route path=\"/project/:id/:lang\" element={<Project />} />\r\n            <Route path=\"/projects/my\" element={getRole() === AccountType.User.toString() ? <UserProjects /> : <TranslatorProjects />} />\r\n            <Route path=\"/projects\" element={<AvailableProjects />} />\r\n          </>\r\n        )}\r\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n      </Routes>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { languagesReducer } from './language';\r\nimport { subjectsReducer } from './subject';\r\nimport { userReducer } from './user';\r\n\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  subjects: subjectsReducer,\r\n  languages: languagesReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bulma/main.scss';\r\nimport './index.scss';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}