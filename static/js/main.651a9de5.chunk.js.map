{"version":3,"sources":["api/apis.ts","api/base.ts","api/authorization.ts","tokenHandler.ts","store/user.ts","api/baseWithAuthorization.ts","api/language.ts","api/subject.ts","RegExps.ts","api/user.ts","store/language.ts","components/Authorization/SignIn.tsx","components/Authorization/SignUp.tsx","api/projects.ts","store/subject.ts","enums.ts","components/Menu/Menu.tsx","components/Header/Header.tsx","components/AvailableProjects/AvailableProjects.tsx","images/home-background.png","components/HomePage/HomePage.tsx","images/not-found.png","components/Project/Project.tsx","api/quota.ts","components/Qoute/Quote.tsx","components/TranslatorProfile/TranslatorProfile.tsx","components/UserProfile/UserProfile.tsx","components/UserProjects/TranslatorProjects.tsx","api/file.ts","api/payment.ts","components/PaymentModal/PaymentModal.tsx","components/UserProjects/UserProjects.tsx","components/FallbackComponent/FallbackComponent.tsx","App.tsx","store/index.ts","index.tsx"],"names":["clientApi","adminApi","translatorApi","quotaHub","stringsHub","commentsHub","request","url","options","a","fetch","response","json","result","isSuccess","data","Error","errorMessage","message","localStorage","clear","location","reload","signIn","email","password","method","headers","body","JSON","stringify","signUp","signUpModel","refresh","tokens","isRefreshing","isJwtExpired","token","exp","jwtDecode","currentTime","Date","getTime","ActionTypes","setTokens","setItem","authorizationToken","refreshToken","getRefreshToken","getItem","getAuthorizationToken","newTokens","getAuthorizationOptions","Authorization","newOptions","baseRequest","getLanguages","getSubjects","passwordTest","emailTest","getUser","getProjectsInfo","updateName","firstname","lastname","updatePersonalInfo","website","company","updateEmail","updatePassword","oldPassword","newPassword","getTranslatorInfo","userActions","setUser","user","type","SetUser","value","loadUser","dispatch","userSelectors","state","SignIn","handleError","useErrorHandler","navigate","useNavigate","useDispatch","useState","setEmail","setPassword","hasPasswordError","setPasswordError","hasEmailError","setEmailError","handleSubmit","event","preventDefault","className","to","onSubmit","placeholder","required","onChange","target","onBlur","test","classNames","SignUp","setFirstname","setLastname","accountType","setAccountType","authorization__placeholder","disabled","getProjectStrings","id","lang","page","getProjectString","stringId","getProjectInfo","getComments","sendComment","text","sendProjectString","approveProject","getProjects","projectStatus","joinProject","projectId","targetLangId","languagesActions","languages","SetLanguages","languagesSelectors","AccountType","ProjectStatus","subjectsActions","subjects","SetSubjects","subjectsSelectors","Menu","match","useMatch","useSelector","isActive","setActive","node","useRef","clickOutside","useCallback","e","current","contains","useEffect","document","addEventListener","removeEventListener","handleLogOut","ref","onClick","User","Translator","Header","AvailableProjects","selectedSubject","setSelectedSubject","selectedSourceLang","setSourceLang","selectedTargetLang","setTargetLang","projects","setProjects","filteredSubjects","setFilteredSubjects","filteredSourceLanguages","setFilteredSourceLanguages","translatorInfo","setTranslatorInfo","subjectId","sourceLangId","newProjects","newTranslatorInfo","newSubjects","filter","subject","subjectIds","includes","newSourceLang","language","languagesPairs","some","translatorLang","sourceLanguageId","filteredTargetLanguages","useMemo","outputLanguageId","handleChoose","nativeEvent","map","project","fileName","sourceLanguage","targetLanguage","wordsCount","href","HomePage","src","homeBackground","alt","Project","isCustomer","useParams","setPage","notFound","setNotFound","strings","setStrings","pagesCount","setPagesCount","selectedStringId","setSelectedStringId","translation","setTranslation","translationError","setTranslationError","projectInfo","setProjectInfo","comments","setComments","comment","setComment","stringsConnection","setStringsConnection","commentsConnection","setCommentsConnection","newProjectInfo","newStrings","newConnection","HubConnectionBuilder","configureLogging","LogLevel","Information","withUrl","skipNegotiation","transport","HttpTransportType","WebSockets","withAutomaticReconnect","build","newCommentsConnection","start","on","langId","str","oldStrings","s","newComments","HubConnectionState","Connected","invoke","forEach","find","translatedString","handleSendComment","key","handleSelectedString","handlePage","newPage","handleTranslation","handleSendTranslation","shiftKey","sendProjectStringTranslation","handleApprove","l","background","originalString","isEditing","onKeyPress","projectName","preferences","length","c","role","Admin","userName","name","initCookies","quote","sessionStorage","sendFileForTranslating","file","quoteId","FormData","append","saveProject","Quote","setQuote","connection","setConnection","setQuoteId","setSubject","setSourceLanguage","setPreferences","newQuoteId","quota","languageCode","toString","handleFile","files","handleDeleteLanguage","targetLanguages","handleOutputLanguage","handleSubject","handleSourceLanguage","handleSave","price","removeItem","htmlFor","accept","selectedLanguage","isCounting","TranslatorProfile","setNewPassword","isWrongPassword","setWrongPassword","hasNewPasswordError","setNewPasswordError","hasFirstnameError","setFirstnameError","hasLastnameError","setLastnameError","selectedSubjects","setSelectedSubjects","selectedLanguages","setSelectedLanguages","outputLanguage","setOutputLanguage","handleUpdate","newUser","active","completed","money","newSelectedSubjects","handleDeleteSubject","isAdded","languagePair","sourceLang","outputLang","newSelectedLanguages","UserProfile","personalInfo","setPersonalInfo","setWebsite","setCompany","console","log","newInfo","newPersonalInfo","waiting","TranslatorProjects","Active","statusProject","setStatusProject","handleTabClick","status","Completed","transaltedWordsCount","parse","startDate","toDateString","endDate","ok","blob","downloadFile","fileDownload","payment","nonce","PaymentModal","show","setShow","onPaymentComplete","braintreeInstance","setBraintreeInstance","initializeBraintree","dropin","authorization","container","error","instance","teardown","then","undefined","aria-label","requestPaymentMethod","payload","paymentMethodNonce","UserProjects","Unpaid","showModal","setShowModal","selectedProjectId","setProjectId","completePayment","handleDownload","handlePay","FallbackComponent","resetErrorBoundary","App","newLanguages","path","element","replace","reducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"kgBAAaA,EAAY,2CACZC,EAAW,0CACXC,EAAgB,+CAChBC,EAAQ,UAAMH,EAAN,cACRI,EAAU,UAAMF,EAAN,gBACVG,EAAW,UAAMH,EAAN,iB,eCHXI,EAAO,uCAAG,WAAUC,EAAaC,GAAvB,iBAAAC,EAAA,sEACEC,MAAMH,EAAKC,GADb,cACfG,EADe,yBAIaA,EAASC,OAJtB,YAIbC,EAJa,QAMRC,UANQ,yCAOVD,EAAOE,MAPG,aAUb,IAAIC,MAAMH,EAAOI,cAVJ,wCAaD,oCAAd,KAAEC,UACJC,aAAaC,QAEbC,SAASC,UAhBQ,+DAAH,wDCEPC,EAAM,uCAAG,WAAOC,EAAeC,GAAtB,SAAAhB,EAAA,+EACbH,EAAQ,GAAD,OAAIN,EAAJ,qBAAkC,CAC9C0B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBN,QACAC,gBARgB,2CAAH,wDAaNM,EAAM,uCAAG,WAAOC,GAAP,SAAAvB,EAAA,+EACbH,EAAQ,GAAD,OAAIN,EAAJ,qBAAkC,CAC9C0B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUE,MANH,2CAAH,sDAUNC,EAAO,uCAAG,WAAOC,GAAP,SAAAzB,EAAA,+EACdH,EAAQ,GAAD,OAAIN,EAAJ,qBAAkC,CAC9C0B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUI,MANF,2CAAH,sDCvBhBC,GAAe,EAEnB,SAASC,EAAaC,GACpB,IAAQC,EAAQC,YAAsBF,GAA9BC,IACFE,GAAc,IAAIC,MAAOC,UAAY,IAE3C,SAAIJ,GAAOE,EAAcF,GAOpB,ICZFK,EDYQC,EAAY,SAACV,GACxBf,aAAa0B,QAAQ,qBAAsBX,EAAOY,oBAClD3B,aAAa0B,QAAQ,eAAgBX,EAAOa,eAOjCC,EAAkB,WAC7B,OAAO7B,aAAa8B,QAAQ,iBAGjBC,EAAqB,uCAAG,gCAAAzC,EAAA,yDAC7BqC,EAAqB3B,aAAa8B,QAAQ,sBAC1CF,EAAeC,IAEhBF,GAAuBC,EAJO,yCAK1B,MAL0B,WAQ/BX,EAAaU,IAAwBX,EARN,wBASjCA,GAAe,EATkB,SAWTF,EAAQ,CAC9Ba,qBACAC,iBAb+B,cAW3BI,EAX2B,OAgBjCP,EAAUO,GACVhB,GAAe,EAjBkB,kBAmB1BgB,EAAUL,oBAnBgB,iCAsB5BA,GAtB4B,4CAAH,qDE3BrBM,EAAuB,uCAAG,WAAO5C,GAAP,eAAAC,EAAA,sEAEjByC,IAFiB,UAE/Bb,EAF+B,gDAK5B7B,GAL4B,WAQjCA,EARiC,oEAU9BA,GAV8B,IAWjCmB,QAAQ,2BACHnB,EAAQmB,SADN,IAEL0B,cAAc,UAAD,OAAYhB,QAbM,gCAkB9B,CACLV,QAAS,CACP0B,cAAc,UAAD,OAAYhB,MApBQ,2CAAH,sDAyBvB/B,EAAO,uCAAG,WAAUC,EAAaC,GAAvB,eAAAC,EAAA,sEACI2C,EAAwB5C,GAD5B,cACf8C,EADe,yBAGdC,EAAYhD,EAAK+C,IAHH,2CAAH,wDCxBPE,EAAY,uCAAG,sBAAA/C,EAAA,+EACnBH,EAAQ,GAAD,OAAIL,EAAJ,oBADY,2CAAH,qDCAZwD,EAAW,uCAAG,sBAAAhD,EAAA,+EAClBH,EAAQ,GAAD,OAAIL,EAAJ,mBADW,2CAAH,qD,gCCJXyD,EAAe,wCACfC,EAAY,wJCSZC,EAAU,WACrB,OAAOtD,EAAQ,GAAD,OAAIL,EAAJ,gBAGH4D,EAAkB,WAC7B,OAAOvD,EAAQ,GAAD,OAAIL,EAAJ,8BAOH6D,EAAa,SAACC,EAAmBC,GAC5C,OAAO1D,EAAQ,GAAD,OAAIL,EAAJ,mBAA+B,CAC3CyB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBiC,YACAC,gBAKOC,EAAqB,SAACC,EAAiBC,GAClD,OAAO7D,EAAQ,GAAD,OAAIL,EAAJ,4BAAwC,CACpDyB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBoC,UACAC,eAKOC,EAAc,SAAC5C,GAC1B,OAAOlB,EAAQ,GAAD,OAAIL,EAAJ,oBAAgC,CAC5CyB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBN,aAKO6C,EAAiB,SAACC,EAAqBC,GAClD,OAAOjE,EAAQ,GAAD,OAAIL,EAAJ,uBAAmC,CAC/CyB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBwC,cACAC,mBAKOC,EAAoB,WAC/B,OAAOlE,EAAQ,GAAD,OAAIL,EAAJ,iC,SLrEX0C,K,oBAAAA,M,KAIE,IMNFA,ENMQ8B,EAAc,CACzBC,QAAS,SAACC,GAAD,MAAmC,CAC1CC,KAAMjC,EAAYkC,QAClBC,MAAOH,IAGTI,SAAU,yDAAM,WAAOC,GAAP,eAAAvE,EAAA,0DACVuC,IADU,gCAEOY,IAFP,OAENe,EAFM,OAIZK,EAASP,EAAYC,QAAQC,IAJjB,sBAMZK,EAASP,EAAYC,QAAQ,OANjB,2CAAN,wDAWCO,EACF,SAACC,GAAD,OAA+BA,EAAMP,M,eOfnCQ,EAAmB,WAC9B,IAAMC,EAAcC,4BACdC,EAAWC,cACXP,EAAWQ,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOjE,EAAP,KAAckE,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOhE,EAAP,KAAiBkE,EAAjB,KACA,EAA6CF,oBAAS,GAAtD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAuCJ,oBAAS,GAAhD,mBAAOK,EAAP,KAAsBC,EAAtB,KAgBMC,EAAY,uCAAG,WAAOC,GAAP,iBAAAxF,EAAA,yDACnBwF,EAAMC,kBAEFJ,IAAiBF,EAHF,0EAQIrE,EAAOC,EAAOC,GARlB,cAQXS,EARW,OAUjBU,EAAUV,GAVO,UAYE0B,IAZF,QAYXe,EAZW,OAcjBK,EAASP,EAAYC,QAAQC,IAC7BW,EAAS,YAfQ,kDAiBjBF,EAAY,EAAD,IAjBM,0DAAH,sDAiClB,OACE,sBAAKe,UAAU,gBAAf,UACE,qBACEA,UAAU,4DADZ,uBAIE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,wBAAvB,yBAGF,uBACEE,SAAUL,EACVG,UAAU,2BAFZ,UAIE,sBAAKA,UAAU,QAAf,UACE,uBACEvB,KAAK,QACL0B,YAAY,QACZC,UAAQ,EACRzB,MAAOtD,EACPgF,SAlEU,SAACP,GACnB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERiB,GAAc,GACdL,EAASZ,IA+DD4B,OAhCY,WACf/C,EAAUgD,KAAKnF,IAClBuE,GAAc,IA+BRI,UAAWS,IAAW,mDAAoD,CAAE,YAAad,MAE1FA,GACC,mBAAGK,UAAU,sCAAb,4CAIJ,sBAAKA,UAAU,QAAf,UACE,uBACEvB,KAAK,WACL0B,YAAY,WACZC,UAAQ,EACRzB,MAAOrD,EACP+E,SA1Ea,SAACP,GACtB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERe,GAAiB,GACjBF,EAAYb,IAuEJ4B,OAzCe,WAClBhD,EAAaiD,KAAKlF,IACrBoE,GAAiB,IAwCXM,UAAWS,IAAW,mDAAoD,CAAE,YAAahB,MAE1FA,GACC,mBAAGO,UAAU,sCAAb,2GAOJ,wBACEvB,KAAK,SACLuB,UAAU,iEAFZ,wBAQF,oBAAGA,UAAU,iDAAb,2CAEE,cAAC,IAAD,CACEC,GAAG,WACHD,UAAU,wBAFZ,4BChHKU,EAAmB,WAC9B,IAAMzB,EAAcC,4BACdC,EAAWC,cACXP,EAAWQ,cACjB,EAAkCC,mBAAS,IAA3C,mBAAO1B,EAAP,KAAkB+C,EAAlB,KACA,EAAgCrB,mBAAS,IAAzC,mBAAOzB,EAAP,KAAiB+C,EAAjB,KACA,EAA0BtB,mBAAS,IAAnC,mBAAOjE,EAAP,KAAckE,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOhE,EAAP,KAAiBkE,EAAjB,KACA,EAAsCF,mBAAS,KAA/C,mBAAOuB,EAAP,KAAoBC,EAApB,KACA,EAA6CxB,oBAAS,GAAtD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAuCJ,oBAAS,GAAhD,mBAAOK,EAAP,KAAsBC,EAAtB,KAkCMC,EAAY,uCAAG,WAAOC,GAAP,iBAAAxF,EAAA,yDACnBwF,EAAMC,kBAEFJ,IAAiBF,GAAoC,MAAhBoB,EAHtB,0EAQIjF,EAAO,CAC1BP,QACAC,WACAsC,YACAC,WACAgD,aAAcA,IAbC,cAQX9E,EARW,OAgBjBU,EAAUV,GAhBO,UAkBE0B,IAlBF,QAkBXe,EAlBW,OAoBjBK,EAASP,EAAYC,QAAQC,IAC7BW,EAAS,YArBQ,kDAuBjBF,EAAY,EAAD,IAvBM,0DAAH,sDAuClB,OACE,sBAAKe,UAAU,gBAAf,UACE,qBACEA,UAAU,4DADZ,uBAIE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,wBAAvB,yBAGF,uBACEE,SAAUL,EACVG,UAAU,2BAFZ,UAIE,qBAAKA,UAAU,QAAf,SACE,uBACEvB,KAAK,OACL0B,YAAY,YACZC,UAAQ,EACRzB,MAAOf,EACPyC,SA5Ec,SAACP,GACvB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERgC,EAAahC,IA0ELqB,UAAU,uDAId,qBAAKA,UAAU,QAAf,SACE,uBACEvB,KAAK,OACL0B,YAAY,WACZC,UAAQ,EACRzB,MAAOd,EACPwC,SAjFa,SAACP,GACtB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERiC,EAAYjC,IA+EJqB,UAAU,uDAId,sBAAKA,UAAU,QAAf,UACE,uBACEvB,KAAK,QACL0B,YAAY,QACZC,UAAQ,EACRzB,MAAOtD,EACPgF,SAhHU,SAACP,GACnB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERiB,GAAc,GACdL,EAASZ,IA6GD4B,OAtDY,WACf/C,EAAUgD,KAAKnF,IAClBuE,GAAc,IAqDRI,UAAWS,IAAW,mDAAoD,CAAE,YAAad,MAE1FA,GACC,mBAAGK,UAAU,sCAAb,4CAIJ,sBAAKA,UAAU,QAAf,UACE,uBACEvB,KAAK,WACL0B,YAAY,WACZC,UAAQ,EACRzB,MAAOrD,EACP+E,SAxHa,SAACP,GACtB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERe,GAAiB,GACjBF,EAAYb,IAqHJ4B,OA/De,WAClBhD,EAAaiD,KAAKlF,IACrBoE,GAAiB,IA8DXM,UAAWS,IAAW,mDAAoD,CAAE,YAAahB,MAE1FA,GACC,mBAAGO,UAAU,sCAAb,2GAOJ,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAWS,IAAW,2CAA4C,CAAEM,2BAA4C,MAAhBF,IAArG,SACE,yBACElC,MAAOkC,EACPR,SArHS,SAACP,GACpB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERmC,EAAenC,IAmHLqB,UAAU,wBAHZ,UAKE,wBAAQrB,MAAM,IAAIqC,UAAQ,EAA1B,sCACA,wBAAQrC,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,+BAKN,wBACEF,KAAK,SACLuB,UAAU,iEAFZ,wBAQF,oBAAGA,UAAU,iDAAb,yCAEE,cAAC,IAAD,CACEC,GAAG,WACHD,UAAU,wBAFZ,4BChLKiB,GAAoB,SAC/BC,EACAC,EACAC,GAEA,OAAOjH,EAAQ,GAAD,OAAIJ,EAAJ,yBAAkCmH,EAAlC,YAAwCC,EAAxC,YAAgDC,KAGnDC,GAAmB,SAC9BH,EACAC,EACAG,GAEA,OAAOnH,EAAQ,GAAD,OAAIJ,EAAJ,yBAAkCmH,EAAlC,YAAwCC,EAAxC,oBAAwDG,KAG3DC,GAAiB,SAC5BL,EACAC,GAEA,OAAOhH,EAAQ,GAAD,OAAIJ,EAAJ,yBAAkCmH,EAAlC,YAAwCC,KAG3CK,GAAc,SAACF,EAAkBH,GAC5C,OAAOhH,EAAQ,GAAD,OAAIJ,EAAJ,yBAAkCuH,EAAlC,YAA8CH,EAA9C,eAGHM,GAAc,SAACH,EAAkBH,EAAcO,GAC1D,OAAOvH,EAAQ,GAAD,OAAIJ,EAAJ,yBAAkCuH,EAAlC,YAA8CH,EAA9C,aAA+D,CAC3E5F,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB+F,YAKOC,GAAoB,SAC/BT,EACAC,EACAG,EACAI,GAEA,OAAOvH,EAAQ,GAAD,OAAIJ,EAAJ,yBAAkCmH,EAAlC,YAAwCC,EAAxC,oBAAwDG,GAAY,CAChF/F,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB+F,YAKOE,GAAiB,SAACV,EAAYC,GACzC,OAAOhH,EAAQ,GAAD,OAAIJ,EAAJ,yBAAkCmH,EAAlC,YAAwCC,EAAxC,KAAiD,CAC7D5F,OAAQ,OACRC,QAAS,CACP,eAAgB,uBAKTqG,GAAc,SAACC,GAC1B,OAAO3H,EAAQ,GAAD,OAAIJ,EAAJ,gCAAyC+H,KAW5CC,GAAc,SAACC,EAAmBC,GAC7C,OAAO9H,EAAQ,GAAD,OAAIJ,EAAJ,yBAAkCiI,EAAlC,YAA+CC,EAA/C,SAAoE,CAChF1G,OAAQ,OACRC,QAAS,CACP,eAAgB,uB,mBHzFjBgB,K,8BAAAA,M,KAIE,IIJFA,GJIQ0F,GACG,SAACC,GAAD,MAAuC,CACnD1D,KAAMjC,EAAY4F,aAClBzD,MAAOwD,IAIEE,GACG,SAACtD,GAAD,OAA8BA,EAAMoD,Y,SIZ/C3F,K,4BAAAA,Q,KAIE,ICPK8F,GAMAC,GDCCC,GACE,SAACC,GAAD,MAAqC,CAChDhE,KAAMjC,GAAYkG,YAClB/D,MAAO8D,IAIEE,GACE,SAAC5D,GAAD,OAA6BA,EAAM0D,W,SCftCH,O,eAAAA,I,2BAAAA,I,kBAAAA,Q,cAMAC,O,mBAAAA,I,mBAAAA,I,0BAAAA,Q,eCQCK,GAAiB,WAC5B,IAAMC,EAAQC,YAAS,KACjBjE,EAAWQ,cACXb,EAAOuE,YAAYjE,GACzB,EAA8BQ,oBAAS,GAAvC,mBAAO0D,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,iBAAuB,MAE9BC,EAAeC,uBAAY,SAACC,GAAmB,IAAD,GAC9C,UAACJ,EAAKK,eAAN,aAAC,EAAcC,SAASF,EAAEhD,UAC5B2C,GAAU,KAEX,IAEHQ,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,YAAaP,GAEhC,WACLM,SAASE,oBAAoB,YAAaR,MAE3C,IAEH,IAAMS,EAAe,WbZrB7I,aAAaC,QacX4D,EAASP,EAAYC,QAAQ,OAEzBsE,GAEF3H,SAASC,UAIb,OAAKqD,EAKH,sBACEsF,IAAKZ,EACLlD,UAAWS,IAAW,yBAA0B,CAAE,YAAauC,IAFjE,UAIE,qBAAKhD,UAAU,mBAAf,SACE,wBACEvB,KAAK,SACLuB,UAAU,yBACV+D,QAAS,kBAAMd,GAAWD,IAH5B,0BAKMxE,QALN,IAKMA,OALN,EAKMA,EAAMZ,UALZ,mBAKyBY,QALzB,IAKyBA,OALzB,EAKyBA,EAAMX,cAIjC,sBAAKmC,UAAU,0BAAf,UACGxB,EAAKqC,cAAgByB,GAAY0B,MAChC,sBAAKhE,UAAU,iCAAf,UACE,cAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,2BAA9B,wBAGA,oBAAIA,UAAU,qBAEd,cAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,2BAAlC,yBAGA,oBAAIA,UAAU,qBAEd,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,2BAA5B,yBAGA,oBAAIA,UAAU,qBAEd,cAAC,IAAD,CACEC,GAAG,IACH8D,QAASF,EACT7D,UAAU,2BAHZ,wBAUHxB,EAAKqC,cAAgByB,GAAY2B,YAChC,sBAAKjE,UAAU,iCAAf,UACE,cAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,2BAA9B,wBAGA,oBAAIA,UAAU,qBAEd,cAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,2BAAlC,yBAGA,oBAAIA,UAAU,qBAEd,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,2BAA/B,gCAGA,oBAAIA,UAAU,qBAEd,cAAC,IAAD,CACEC,GAAG,IACHD,UAAU,2BACV+D,QAASF,EAHX,8BA/DD,8BCxCEK,I,MAAmB,WAC9B,IAAMtH,EAAeC,IAErB,OACE,yBAAQmD,UAAU,SAAlB,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAU,qEAFZ,qBAOCpD,EACC,cAAC,GAAD,IAEA,cAAC,IAAD,CACEqD,GAAG,WACHD,UAAU,4BAFZ,0BCCKmE,I,MAA8B,WACzC,IAAMhF,EAAWC,cACXH,EAAcC,4BAEduD,EAAWM,YAAYJ,IACvBR,EAAYY,YAAYV,IAE9B,EAA8C/C,mBAAS,GAAvD,mBAAO8E,EAAP,KAAwBC,EAAxB,KACA,EAA4C/E,mBAAS,GAArD,mBAAOgF,EAAP,KAA2BC,EAA3B,KACA,EAA4CjF,mBAAS,GAArD,mBAAOkF,EAAP,KAA2BC,EAA3B,KACA,EAAgCnF,mBAAoB,IAApD,mBAAOoF,EAAP,KAAiBC,EAAjB,KACA,EAAgDrF,mBAAoB,IAApE,mBAAOsF,EAAP,KAAyBC,EAAzB,KACA,EAA8DvF,mBAAqB,IAAnF,mBAAOwF,EAAP,KAAgCC,EAAhC,KACA,EAA4CzF,mBAAgC,MAA5E,mBAAO0F,EAAP,KAAuBC,EAAvB,KAEAxB,qBAAU,WACR,sBAAC,4BAAAnJ,EAAA,+EL2CH4K,EKxCQd,ELyCRe,EKxCQb,ELyCRrC,EKxCQuC,EL0CDrK,EAAQ,GAAD,OAAIJ,EAAJ,0CAAmDmL,EAAnD,yBAA6EC,EAA7E,yBAA0GlD,IK/CrH,OAESmD,EAFT,OAQGT,EAAYS,GARf,gDAUGnG,EAAY,EAAD,IAVd,kCL0C+B,IAClCiG,EACAC,EACAlD,IK7CG,mBAAD,KAaC,CAACmC,EAAiBE,EAAoBE,IAEzCf,qBAAU,WACR,sBAAC,gCAAAnJ,EAAA,+EAEmC+D,IAFnC,OAESgH,EAFT,OAIGJ,EAAkBI,GAEZC,EAAc7C,EACjB8C,QAAO,SAAAC,GAAO,OAAIH,EAAkBI,WAAWC,SAASF,EAAQtE,OAEnE2D,EAAoBS,GAEdK,EAAgBxD,EACnBoD,QAAO,SAAAK,GAAQ,OACdP,EAAkBQ,eACfC,MAAK,SAAAC,GAAc,OAAIA,EAAeC,mBAAqBJ,EAAS1E,SAG3E6D,EAA2BY,GAjB9B,kDAmBG1G,EAAY,EAAD,IAnBd,yDAAD,KAsBC,CAACwD,EAAUN,IAEd,IAAM8D,EAA0BC,mBAAQ,WACtC,OAAKlB,EAIDV,EACKnC,EACJoD,QAAO,SAAAK,GAAQ,OACdZ,EAAea,eACZC,MAAK,SAAAC,GAAc,OAAIA,EAAeI,mBAAqBP,EAAS1E,IAChE6E,EAAeC,mBAAqB1B,QAI1CnC,EACJoD,QAAO,SAAAK,GAAQ,OACdZ,EAAea,eACZC,MAAK,SAAAC,GAAc,OAAIA,EAAeI,mBAAqBP,EAAS1E,SAflE,KAiBR,CAACoD,EAAoBU,IAoBlBoB,EAAY,uCAAG,WACnBtG,EACAkC,EACAC,GAHmB,SAAA3H,EAAA,6DAKnBwF,EAAMuG,YAAYtG,iBALC,kBAQXgC,GAAYC,EAAWC,GARZ,OAUjB9C,EAAS,YAAD,OAAa6C,EAAb,YAA0BC,IAVjB,gDAYjBhD,EAAY,EAAD,IAZM,yDAAH,0DAgBlB,OACE,qCACE,qBAAKe,UAAU,mBAAf,SACE,cAAC,GAAD,MAGF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,yBACErB,MAAOyF,EACP/D,SA5CY,SAACP,GACrB,IAAMnB,GAASmB,EAAMQ,OAAO3B,MAE5B0F,EAAmB1F,IA0CXqB,UAAU,yCAHZ,UAKE,wBAAQrB,MAAO,EAAf,0BACCiG,EAAiB0B,KAAI,SAAAd,GAAO,OAC3B,wBAEE7G,MAAO6G,EAAQtE,GAFjB,SAIGsE,EAAQA,SAHJA,EAAQtE,YASrB,qBAAKlB,UAAU,8BAAf,SACE,yBACErB,MAAO2F,EACPjE,SAxDmB,SAACP,GAC5B,IAAMnB,GAASmB,EAAMQ,OAAO3B,MAE5B4F,EAAc5F,IAsDNqB,UAAU,yCAHZ,UAKE,wBAAQrB,MAAO,EAAf,kCACCmG,EAAwBwB,KAAI,SAAAV,GAAQ,OACnC,wBAEEjH,MAAOiH,EAAS1E,GAFlB,SAIG0E,EAASA,UAHLA,EAAS1E,YAStB,qBAAKlB,UAAU,8BAAf,SACE,yBACErB,MAAO6F,EACPnE,SApEmB,SAACP,GAC5B,IAAMnB,GAASmB,EAAMQ,OAAO3B,MAE5B8F,EAAc9F,IAkENqB,UAAU,yCAHZ,UAKE,wBAAQrB,MAAO,EAAf,kCACCsH,EAAwBK,KAAI,SAAAV,GAAQ,OACnC,wBAEEjH,MAAOiH,EAAS1E,GAFlB,SAIG0E,EAASA,UAHLA,EAAS1E,eAUxB,wBAAOlB,UAAU,kCAAjB,UACE,gCACE,+BACE,2CACA,iDACA,iDACA,yCACA,6CACA,4BAIJ,gCACG0E,EAAS4B,KAAI,SAAAC,GACZ,OACE,+BACE,6BAAKA,EAAQC,WACb,6BAAKD,EAAQE,eAAeb,WAC5B,6BAAKW,EAAQG,eAAed,WAC5B,6BAAKW,EAAQf,QAAQA,UACrB,6BAAKe,EAAQI,aACb,6BACE,mBACEC,KAAK,IACL5G,UAAU,mBACV+D,QAAS,SAACjE,GAAD,OAAWsG,EAAatG,EAAOyG,EAAQrF,GAAIqF,EAAQG,eAAexF,KAH7E,kCAPKqF,EAAQrF,GAAKqF,EAAQG,eAAexF,iBClN5C,OAA0B,4CCM5B2F,I,MAAqB,WAChC,OACE,qCACE,cAAC,GAAD,IAEA,+BACE,0BAAS7G,UAAU,OAAnB,UACE,oBAAIA,UAAU,oCAAd,yCAEA,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,mBAAGA,UAAU,mCAAb,8GAKA,cAAC,IAAD,CACEC,GAAG,SACHD,UAAU,2CAFZ,uCASJ,qBACE8G,IAAKC,GACLC,IAAI,aACJhH,UAAU,+C,mCClCP,OAA0B,sCC8B5BiH,I,MAAqB,WAChC,IAAMhI,EAAcC,4BACdC,EAAWC,cACXZ,EAAOuE,YAAYjE,GACnBqD,EAAYY,YAAYV,IACxB6E,GAAiB,OAAJ1I,QAAI,IAAJA,OAAA,EAAAA,EAAMqC,eAAgByB,GAAY0B,KACrD,EAAqBmD,cAAbjG,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,KACZ,EAAwB7B,mBAAS,GAAjC,mBAAO8B,EAAP,KAAagG,EAAb,KACA,EAAgC9H,oBAAS,GAAzC,mBAAO+H,EAAP,KAAiBC,EAAjB,KACA,EAA8BhI,mBAAwB,IAAtD,mBAAOiI,EAAP,KAAgBC,EAAhB,KACA,EAAoClI,mBAAS,GAA7C,mBAAOmI,EAAP,KAAmBC,EAAnB,KACA,EAAgDpI,mBAAS,GAAzD,mBAAOqI,EAAP,KAAyBC,EAAzB,KACA,EAAsCtI,mBAAS,IAA/C,mBAAOuI,EAAP,KAAoBC,EAApB,KACA,EAAgDxI,mBAAS,IAAzD,mBAAOyI,EAAP,KAAyBC,EAAzB,KACA,EAAsC1I,qBAAtC,mBAAO2I,EAAP,KAAoBC,EAApB,KACA,EAAgC5I,mBAA0B,IAA1D,oBAAO6I,GAAP,MAAiBC,GAAjB,MACA,GAA8B9I,mBAAS,IAAvC,qBAAO+I,GAAP,MAAgBC,GAAhB,MACA,GAAkDhJ,qBAAlD,qBAAOiJ,GAAP,MAA0BC,GAA1B,MACA,GAAoDlJ,qBAApD,qBAAOmJ,GAAP,MAA2BC,GAA3B,MAEAjF,qBAAU,WACR,sBAAC,4BAAAnJ,EAAA,0DACK4G,IAAMC,EADX,gCAEgCI,GAAeL,EAAIC,GAFnD,OAESwH,EAFT,OAIGT,EAAeS,GAJlB,0CAAD,KAOC,CAACzH,EAAIC,IAERsC,qBAAU,WACR,sBAAC,4BAAAnJ,EAAA,2DACK4G,GAAMC,GAAQC,GADnB,0CAG8BH,GAAkBC,EAAIC,EAAMC,GAH1D,OAGWwH,EAHX,OAKKpB,EAAWoB,EAAWlO,QACtBgN,EAAckB,EAAWnB,YAN9B,gDAQKH,GAAY,GARjB,wDAAD,KAYC,CAACpG,EAAIC,EAAMC,IAEdqC,qBAAU,WACR,IAAMoF,GAAgB,IAAIC,MACvBC,iBAAiBC,KAASC,aAC1BC,QAAQjP,EAAY,CACnBkP,iBAAiB,EACjBC,UAAWC,KAAkBC,aAE9BC,yBACAC,QAEHhB,GAAqBK,GAErB,IAAMY,GAAwB,IAAIX,MAC/BC,iBAAiBC,KAASC,aAC1BC,QAAQhP,EAAa,CACpBiP,iBAAiB,EACjBC,UAAWC,KAAkBC,aAE9BC,yBACAC,QAEHd,GAAsBe,KACrB,IAEHhG,qBAAU,WACR,sBAAC,sBAAAnJ,EAAA,0DACKiO,GADL,gCAESA,GAAkBmB,QAF3B,OAGGnB,GAAkBoB,GAAG,aAArB,uCAAmC,WAAOrI,EAAkBsI,GAAzB,eAAAtP,EAAA,yDAC5B4G,EAD4B,0EAMbG,GAAiBH,EAAI0I,EAAQtI,GANhB,OAMzBuI,EANyB,OAQ/BrC,GAAW,SAAAsC,GAAU,OAAIA,EAAWxD,KAAI,SAAAyD,GACtC,OAAIA,EAAE7I,KAAO2I,EAAI3I,GACR2I,EAGFE,QAbsB,gDAgB/B9K,EAAY,EAAD,IAhBoB,yDAAnC,yDAHH,0CAAD,KAwBC,CAACsJ,KAEJ9E,qBAAU,WACR,sBAAC,sBAAAnJ,EAAA,0DACKmO,GADL,gCAESA,GAAmBiB,QAF5B,OAGGjB,GAAmBkB,GAAG,eAAtB,uCAAsC,WAAOrI,EAAkBsI,GAAzB,eAAAtP,EAAA,+EAERkH,GAAYF,EAAUsI,GAFd,OAE5BI,EAF4B,OAIlC5B,GAAY4B,GAJsB,gDAMlC/K,EAAY,EAAD,IANuB,yDAAtC,yDAHH,0CAAD,KAcC,CAACwJ,KAEJhF,qBAAU,WAKR,OAJsB,OAAlBgF,SAAkB,IAAlBA,QAAA,EAAAA,GAAoB1J,SAAUkL,KAAmBC,WAAavC,GAAoBxG,GACpFsH,GAAmB0B,OAAO,OAAQxC,GAAmBxG,GAGhD,YACiB,OAAlBsH,SAAkB,IAAlBA,QAAA,EAAAA,GAAoB1J,SAAUkL,KAAmBC,WAAavC,GAAoBxG,GACpFsH,GAAmB0B,OAAO,QAASxC,GAAmBxG,MAGzD,QAACsH,SAAD,IAACA,QAAD,EAACA,GAAoB1J,MAAO4I,IAE/BlE,qBAAU,WAOR,OANqB,OAAjB8E,SAAiB,IAAjBA,QAAA,EAAAA,GAAmBxJ,SAAUkL,KAAmBC,WAAa/I,GAC/DoG,EAAQ6C,SAAQ,SAACL,GACfxB,GAAkB4B,OAAO,OAAQJ,EAAE7I,IAAKC,MAIrC,YACgB,OAAjBoH,SAAiB,IAAjBA,QAAA,EAAAA,GAAmBxJ,SAAUkL,KAAmBC,WAAa/I,GAC/DoG,EAAQ6C,SAAQ,SAACL,GACfxB,GAAkB4B,OAAO,QAASJ,EAAE7I,IAAKC,SAI9C,QAACoH,SAAD,IAACA,QAAD,EAACA,GAAmBxJ,MAAOwI,EAAQjB,KAAI,SAAAyD,GAAC,OAAIA,EAAE7I,QAEjDuC,qBAAU,WACR,IAAMoG,EAAMtC,EAAQ8C,MAAK,SAAAN,GAAC,OAAIA,EAAE7I,KAAOyG,KAgBvC,OAdIkC,GACF/B,EAAe+B,EAAIS,mBAIlBpD,IACmB,OAAjBqB,SAAiB,IAAjBA,QAAA,EAAAA,GAAmBxJ,SAAUkL,KAAmBC,WAChDhJ,GACAC,GACAwG,GAEHY,GAAkB4B,OAAO,YAAaxC,GAAmBxG,GAGpD,YAEF+F,IACmB,OAAjBqB,SAAiB,IAAjBA,QAAA,EAAAA,GAAmBxJ,SAAUkL,KAAmBC,WAChDhJ,GACAC,GACAwG,GAEHY,GAAkB4B,OAAO,YAAaxC,GAAmBxG,MAG5D,QAACoH,SAAD,IAACA,QAAD,EAACA,GAAmBxJ,MAAO4I,IAE9BlE,qBAAU,WACR,sBAAC,4BAAAnJ,EAAA,0DACKqN,IAAoBxG,EADzB,0CAG+BK,GAAYmG,GAAmBxG,GAH9D,OAGW6I,EAHX,OAKK5B,GAAY4B,GALjB,gDAOK/K,EAAY,EAAD,IAPhB,wDAAD,KAWC,CAAC0I,EAAkBxG,IAEtB,IAAMoJ,GAAiB,uCAAG,WAAOzK,GAAP,SAAAxF,EAAA,yDACN,UAAdwF,EAAM0K,MAAmBnC,KAAWlH,EADhB,0CAGdM,GAAYkG,GAAmBxG,EAAMkH,IAHvB,OAIpBC,GAAW,IAJS,gDAMpBrJ,EAAY,EAAD,IANS,yDAAH,sDAWjBwL,GAAuB,SAACnJ,GACxBA,IAAaqG,IACfC,EAAoBtG,GACpBwG,EAAe,IAEXC,GACFC,EAAoB,MAKpB0C,GAAa,SAACC,GAClBvD,EAAQuD,GACRF,GAAqB,IAGjBG,GAAoB,SAAC9K,GACzBgI,EAAehI,EAAMQ,OAAO3B,OAExBoJ,GACFC,EAAoB,KAIlB6C,GAAqB,uCAAG,WAAO/K,GAAP,SAAAxF,EAAA,yDACV,UAAdwF,EAAM0K,KAAoB1K,EAAMgL,WAAY5J,IAAMC,IAAQwG,EADlC,wBAE1B7H,EAAMuG,YAAYtG,iBAFQ,kBAIlBgL,GACJ7J,GACCC,EACDwG,EACAE,GARsB,OAWxBD,EAAoB,GAXI,gDAcxBI,EAAoB,KAAEjN,SAdE,yDAAH,sDAmBrBiQ,GAAa,uCAAG,sBAAA1Q,EAAA,0DAChB4G,IAAMC,EADU,0CAGVS,IAAgBV,GAAKC,GAHX,OAIhBhC,EAAS,gBAJO,gDAMhBF,EAAY,EAAD,IANK,yDAAH,qDAWb2G,GAAWM,mBAAQ,WACZ,IAAD,EAAV,OAAI/E,IACK,UAAAgB,EAAUkI,MAAK,SAAAY,GAAC,OAAIA,EAAE/J,MAAQC,YAA9B,eAAqCyE,WAGvC,KACN,CAACzE,EAAMgB,IAEV,OAAIkF,IAAa7I,EAEb,gCACE,cAAC,GAAD,IAEA,0BAASwB,UAAU,OAAnB,UACE,oBAAIA,UAAU,oCAAd,uCAEA,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAU,2CAFZ,iCASJ,qBACE8G,IAAKoE,GACLlE,IAAI,aACJhH,UAAU,2CAQlB,gCACE,cAAC,GAAD,IAEA,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,0BAAf,UACGuH,EAAQjB,KAAI,SAAAuD,GAAG,OAEd,aADA,CACA,WAEE7J,UAAU,UACV+D,QAAS,kBAAM0G,GAAqBZ,EAAI3I,KAH1C,SAKE,sBACElB,UAAWS,IACT,gCACA,CACE,2BAA4BoJ,EAAI3I,KAAOyG,IAJ7C,UAQE,mBAAG3H,UAAU,2DAAb,SACG6J,EAAIsB,iBAINtB,EAAIuB,YAAcvB,EAAIS,iBACrB,mBAAGtK,UAAU,qCAAb,SACE,sBAAMA,UAAU,wBAAhB,iCAIEkH,GAAcS,IAAqBkC,EAAI3I,GAgB3C,mBAAGlB,UAAU,qCAAb,SACG6J,EAAIS,kBACH,sBAAMtK,UAAU,wBAAhB,wCAjBJ,sBAAKA,UAAU,kCAAf,UACE,0BACEA,UAAWS,IAAW,gDAAiD,CAAE,cAAesH,IACxF5H,YAAY,4CACZxB,MAAOkJ,EACPxH,SAAUuK,GACVS,WAAYR,KAEb9C,GACC,mBAAG/H,UAAU,gCAAb,SACG+H,WAlCN8B,EAAI3I,OAkDb,sBAAKlB,UAAU,sBAAf,UACGoB,EAAO,GACN,wBACE3C,KAAK,SACLsF,QAAS,kBAAM2G,GAAWtJ,EAAO,IACjCpB,UAAU,6CAHZ,SAKG,MAGL,mBAAGA,UAAU,8EAAb,SAA4FoB,IAC3FA,EAAOqG,GACN,wBACEhJ,KAAK,SACLsF,QAAS,kBAAM2G,GAAWtJ,EAAO,IACjCpB,UAAU,6CAHZ,SAKG,YAMT,sBAAKA,UAAU,uBAAf,UACE,0BAASA,UAAU,UAAnB,UACE,qBAAKA,UAAU,iBAAf,SACE,gDAAUiI,QAAV,IAAUA,OAAV,EAAUA,EAAaqD,YAAvB,eAAyC1F,WAEzC,OAACqC,QAAD,IAACA,OAAD,EAACA,EAAasD,cACd,qBAAKvL,UAAU,kCAAf,gBACGiI,QADH,IACGA,OADH,EACGA,EAAasD,cAGjB/M,EAAKqC,cAAgByB,GAAY2B,YAChC,wBACExF,KAAK,SACLuB,UAAU,sCACV+D,QAASiH,GAHX,kCASDrD,GACD,0BAAS3H,UAAU,UAAnB,UACE,qBAAKA,UAAU,iBAAf,SACGmI,GAASqD,OAAS,WAAa,gBAElC,sBAAKxL,UAAU,eAAf,UACGmI,GAAS7B,KAAI,SAAAmF,GAAC,OACb,yBAEEzL,UAAWS,IACT,mBACA,CACE,aAAcgL,EAAEC,OAASpJ,GAAY0B,KACrC,YAAayH,EAAEC,OAASpJ,GAAYqJ,MACpC,UAAWF,EAAEC,OAASpJ,GAAY2B,aAPxC,SAWE,sBAAKjE,UAAU,eAAf,UACE,yCAAUyL,EAAEG,SAAZ,QACCH,EAAEpD,YAZAoD,EAAEvK,OAgBX,uBACEzC,KAAK,OACLoN,KAAK,UACL7L,UAAU,QACVrB,MAAO0J,GACPhI,SAAU,SAACP,GAAD,OAAWwI,GAAWxI,EAAMQ,OAAO3B,QAC7C0M,WAAYd,sBC9bjBuB,I,MAAW,uCAAG,4BAAAxR,EAAA,2DACrByR,EAAQC,eAAelP,QAAQ,UADV,yCAIhBiP,GAJgB,uBAOX5R,EAAQ,GAAD,OAAIN,EAAJ,kBAPI,cAOzBkS,EAPyB,OAQzBC,eAAetP,QAAQ,QAASqP,GAAS,IARhB,kBAUlBA,GAAS,IAVS,2CAAH,sDAaXE,GAAyB,SAACC,EAAYC,GACjD,IAAM1Q,EAAO,IAAI2Q,SAKjB,OAHA3Q,EAAK4Q,OAAO,OAAQH,GACpBzQ,EAAK4Q,OAAO,UAAWF,GAEhBhS,EAAQ,GAAD,OAAIN,EAAJ,0BAAuC,CACnD0B,OAAQ,OACRE,UAIS6Q,GAAc,SACzBH,EACAZ,GAEA,OAAOpR,EAAQ,GAAD,OAAIN,EAAJ,6BAA0C,CACtD0B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBwQ,UACAZ,mBCnBOgB,GAAkB,WAAO,IAAD,MAC7BpN,EAAWC,cACXH,EAAcC,4BAEdiD,EAAYY,YAAYV,IACxBI,EAAWM,YAAYJ,IAE7B,EAA0BrD,qBAA1B,mBAAOyM,EAAP,KAAcS,EAAd,KACA,EAAoClN,qBAApC,mBAAOmN,EAAP,KAAmBC,EAAnB,KACA,EAA8BpN,mBAAS,IAAvC,mBAAO6M,EAAP,KAAgBQ,EAAhB,KACA,EAA8BrN,mBAAS,KAAvC,mBAAOkG,EAAP,KAAgBoH,EAAhB,KACA,EAA4CtN,mBAAS,KAArD,mBAAOmH,EAAP,KAAuBoG,EAAvB,KACA,EAAsCvN,mBAAS,IAA/C,mBAAOiM,EAAP,KAAoBuB,EAApB,KAEArJ,qBAAU,WACR,IAAMoF,GAAgB,IAAIC,MACvBC,iBAAiBC,KAASC,aAC1BC,QAAQlP,EAAU,CACjBmP,iBAAiB,EACjBC,UAAWC,KAAkBC,aAE9BC,yBACAC,QAEHkD,EAAc7D,GAEd,sBAAC,4BAAAvO,EAAA,sEAC0BwR,KAD1B,OACOiB,EADP,OAGCJ,EAAWI,GAHZ,0CAAD,KAKC,IAEHtJ,qBAAU,WACR,sBAAC,sBAAAnJ,EAAA,0DACKmS,IAAcN,EADnB,gCAESM,EAAW/C,QAFpB,cAGG+C,EAAW9C,GAAG,eAAe,SAACqD,GAAkB,IAAD,IAC7CR,EAASQ,GACTH,EAAiB,UAACG,EAAMvG,sBAAP,aAAC,EAAsBwG,cACxCL,EAAU,UAACI,EAAMxH,eAAP,aAAC,EAAetE,GAAGgM,eANlC,SAQST,EAAWtC,OAAO,OAAQgC,GARnC,0CAAD,KAWC,CAACM,EAAYN,IAEhB,IAAMgB,EAAU,uCAAG,WAAOrN,GAAP,iBAAAxF,EAAA,2DACT8S,EAAUtN,EAAMQ,OAAhB8M,OADS,wBAITlB,EAAOkB,EAAM,GAJJ,kBAOPnB,GAAuBC,EAAMC,GAPtB,uDASblN,EAAY,EAAD,IATE,yDAAH,sDAcVoO,EAAoB,uCAAG,WAAOnM,GAAP,eAAA5G,EAAA,kEACvByR,QADuB,IACvBA,GADuB,UACvBA,EAAOuB,uBADgB,aACvB,EAAwB9B,QADD,uCAEnBiB,QAFmB,IAEnBA,OAFmB,EAEnBA,EAAYtC,OAChB,0BACAgC,EACAJ,EAAMuB,gBACH/H,QAAO,SAAApE,GAAI,OAAIA,EAAKD,KAAOA,KAC3BoF,KAAI,SAAAnF,GAAI,OAAIA,EAAK8L,iBAPG,2CAAH,sDAYpBM,EAAoB,uCAAG,WAAOzN,GAAP,iBAAAxF,EAAA,6DACnBqE,EAAUmB,EAAMQ,OAAhB3B,MADmB,gBAGrB8N,QAHqB,IAGrBA,OAHqB,EAGrBA,EAAYtC,OAChB,0BACAgC,GACK,OAALJ,QAAK,IAALA,GAAA,UAAAA,EAAOuB,uBAAP,eAAwB9B,QAAxB,uBACQO,EAAMuB,gBAAgBhH,KAAI,SAAA2E,GAAC,OAAIA,EAAEgC,iBADzC,CACwDtO,IACpD,CAACA,IARoB,2CAAH,sDAYpB6O,EAAa,uCAAG,WAAO1N,GAAP,eAAAxF,EAAA,yDACZqE,EAAUmB,EAAMQ,OAAhB3B,MAERiO,EAAWjO,IAEG,OAAV8N,QAAU,IAAVA,OAAA,EAAAA,EAAY1N,SAAUkL,KAAmBC,UALzB,gCAMZuC,EAAWtC,OACf,gBACAgC,GACCxN,GATe,2CAAH,sDAcb8O,EAAoB,uCAAG,WAAO3N,GAAP,eAAAxF,EAAA,yDACnBqE,EAAUmB,EAAMQ,OAAhB3B,MAERkO,EAAkBlO,IAEJ,OAAV8N,QAAU,IAAVA,OAAA,EAAAA,EAAY1N,SAAUkL,KAAmBC,UALlB,gCAMnBuC,EAAWtC,OACf,yBACAgC,EACAxN,GACA,GAVuB,2CAAH,sDAepB+O,EAAU,uCAAG,sBAAApT,EAAA,4DACR,OAALyR,QAAK,IAALA,OAAA,EAAAA,EAAOvF,WACJuF,EAAMtF,gBACNsF,EAAMuB,gBAAgB9B,QACtBO,EAAMvG,SACNuG,EAAM4B,OALI,8BAOT9Q,IAPS,0CASHyP,GAAYH,EAASZ,GATlB,OAUTS,eAAe4B,WAAW,SAC1BzO,EAAS,gBAXA,kDAaTF,EAAY,EAAD,IAbF,gCAgBX+M,eAAetP,QAAQ,cAAe6O,GACtCpM,EAAS,YAjBE,0DAoBbF,EAAY,EAAD,IApBE,iEAAH,qDAyBhB,OACE,gCACE,qBAAKe,UAAU,gBAAf,SACE,cAAC,GAAD,MAGF,qBAAKA,UAAU,eAAf,SACE,sBAAMA,UAAU,iDAAhB,0FAKF,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,iDAAhB,kCAEE,qBAAKA,UAAU,6DAAf,SACE,wBAAO6N,QAAQ,OAAO7N,UAAU,aAAhC,UACE,uBACEkB,GAAG,OACHb,SAAU8M,EACVnN,UAAU,wBACVvB,KAAK,OACLoN,KAAK,SACLiC,OAAO,iGAGT,sBAAM9N,UAAU,WAAhB,SACE,sBAAMA,UAAU,aAAhB,mCAKF,sBAAMA,UAAU,2BAAhB,gBACG+L,QADH,IACGA,OADH,EACGA,EAAOvF,mBAMhB,wBACEqH,QAAQ,UACR7N,UAAU,iDAFZ,qBAKE,qBAAKA,UAAU,wDAAf,SACE,yBACEkB,GAAG,UACHvC,MAAO6G,EACPnF,SAAUmN,EACVxN,UAAU,wBAJZ,UAME,wBAAQrB,MAAO,EAAGqC,UAAQ,EAA1B,gCACCyB,EAAS6D,KAAI,SAAAyD,GAAC,OACb,wBAEEpL,MAAOoL,EAAE7I,GAFX,SAIG6I,EAAEvE,SAHEuE,EAAE7I,eAUjB,wBACE2M,QAAQ,iBACR7N,UAAU,iDAFZ,4BAME,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,wDAAf,SACE,yBACEkB,GAAG,iBACHvC,MAAO8H,EACPpG,SAAUoN,EACVzN,UAAU,wBAJZ,UAME,wBAAQrB,MAAO,EAAGqC,UAAQ,EAA1B,gCACCmB,EAAUmE,KAAI,SAAAV,GAAQ,OACrB,wBAEEjH,MAAOiH,EAASqH,aAFlB,SAIGrH,EAASA,UAHLA,EAAS1E,iBAW1B,wBACE2M,QAAQ,iBACR7N,UAAU,iDAFZ,0BAKE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,wDAAf,SACE,yBACEkB,GAAG,iBACHvC,MAAO,EACP0B,SAAUkN,EACVvN,UAAU,wBAJZ,UAME,wBAAQrB,MAAO,EAAGqC,UAAQ,EAA1B,gCACCmB,EACEoD,QAAO,SAAAK,GAAQ,OAAIA,EAASqH,eAAiBxG,KAC7CH,KAAI,SAAAV,GAAQ,OACX,wBAEEjH,MAAOiH,EAASqH,aAFlB,SAIGrH,EAASA,UAHLA,EAAS1E,iBAW5B,qBAAKlB,UAAU,UAAf,SACE,0BACEA,UAAU,oEACVG,YAAY,iCACZxB,MAAO4M,EACPlL,SAAU,SAAAP,GAAK,OAAIgN,EAAehN,EAAMQ,OAAO3B,eAKrD,qBAAKqB,UAAU,cAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,oBAAIA,UAAU,uCAAd,6BAIF,yBAASA,UAAU,eAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,kDACsB,OAAL+L,QAAK,IAALA,OAAA,EAAAA,EAAOvF,WAAY,MAEpC,sDAC0B,OAALuF,QAAK,IAALA,GAAA,UAAAA,EAAOvG,eAAP,eAAgBA,UAAW,MAEhD,uDAC2B,OAALuG,QAAK,IAALA,GAAA,UAAAA,EAAOtF,sBAAP,eAAuBb,WAAY,MAEzD,oBAAG5F,UAAU,oBAAb,UACG,oBACC,OAAC+L,QAAD,IAACA,GAAD,UAACA,EAAOuB,uBAAR,aAAC,EAAwB9B,SACzBO,EAAMuB,gBAAgBhH,KAAI,YAAa,IAAVpF,EAAS,EAATA,GACrB6M,EAAmB5L,EAAUkI,MAAK,SAAAzE,GAAQ,OAAIA,EAAS1E,KAAOA,KAEpE,OACE,uBAAelB,UAAU,0BAAzB,iBACG+N,QADH,IACGA,OADH,EACGA,EAAkBnI,SACnB,wBACEnH,KAAK,SACLuB,UAAU,kBACV+D,QAAS,kBAAMsJ,EAAqBnM,QAL7BA,SAanB,sBAAKlB,UAAU,kBAAf,UACE,mBAAGA,UAAU,oBAAb,iCACwB,OAAL+L,QAAK,IAALA,OAAA,EAAAA,EAAOpF,eAAoB,OAALoF,QAAK,IAALA,OAAA,EAAAA,EAAOiC,YAAa,WAAa,OAE1E,kDACsB,OAALjC,QAAK,IAALA,OAAA,EAAAA,EAAO4B,OAAQ5B,EAAM4B,MAAQ,IAAM,cAK1D,wBAAQ3N,UAAU,cAAlB,SACE,wBACEvB,KAAK,SACLuB,UAAU,wDACV+D,QAAS2J,EAHX,gCChUDO,I,MAA8B,WACzC,IAAMhP,EAAcC,4BACdL,EAAWQ,cACXb,EAAOuE,YAAYjE,GACnB2D,EAAWM,YAAYJ,IACvBR,EAAYY,YAAYV,IAE9B,EAAkC/C,mBAAS,IAA3C,mBAAO1B,EAAP,KAAkB+C,EAAlB,KACA,EAAgCrB,mBAAS,IAAzC,mBAAOzB,EAAP,KAAiB+C,EAAjB,KACA,EAA0BtB,mBAAS,IAAnC,mBAAOjE,EAAP,KAAckE,EAAd,KACA,EAAgCD,mBAA8B,MAA9D,mBAAOoF,EAAP,KAAiBC,EAAjB,KACA,EAAgCrF,mBAAS,IAAzC,mBAAOhE,EAAP,KAAiBkE,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOlB,EAAP,KAAoB8P,EAApB,KAEA,EAA6C5O,oBAAS,GAAtD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA4CJ,oBAAS,GAArD,mBAAO6O,GAAP,KAAwBC,GAAxB,KACA,GAAmD9O,oBAAS,GAA5D,qBAAO+O,GAAP,MAA4BC,GAA5B,MACA,GAAuChP,oBAAS,GAAhD,qBAAOK,GAAP,MAAsBC,GAAtB,MACA,GAA+CN,oBAAS,GAAxD,qBAAOiP,GAAP,MAA0BC,GAA1B,MACA,GAA6ClP,oBAAS,GAAtD,qBAAOmP,GAAP,MAAyBC,GAAzB,MAEA,GAA4CpP,mBAAgC,MAA5E,qBAAO0F,GAAP,MAAuBC,GAAvB,MACA,GAAgD3F,mBAAmB,IAAnE,qBAAOqP,GAAP,MAAyBC,GAAzB,MACA,GAAkDtP,mBAAyB,IAA3E,qBAAOuP,GAAP,MAA0BC,GAA1B,MACA,GAA4CxP,mBAAS,GAArD,qBAAOmH,GAAP,MAAuBoG,GAAvB,MACA,GAA4CvN,mBAAS,GAArD,qBAAOyP,GAAP,MAAuBC,GAAvB,MAEAvL,qBAAU,WACR,sBAAC,8BAAAnJ,EAAA,+EAE6BoD,IAF7B,cAES0H,EAFT,gBAGmC/G,IAHnC,OAGSgH,EAHT,OAKGV,EAAYS,GACZH,GAAkBI,GAClBuJ,GAAoBvJ,EAAkBI,YACtCqJ,GAAqBzJ,EAAkBQ,gBAR1C,kDAUG5G,EAAY,EAAD,IAVd,yDAAD,KAaC,IAEHwE,qBAAU,WACJjF,IACFmC,EAAanC,EAAKZ,WAClBgD,EAAYpC,EAAKX,UACjB0B,EAASf,EAAKnD,UAEf,CAACmD,IAEJ,IAAMyQ,GAAY,uCAAG,gCAAA3U,EAAA,0DACX,OAAJkE,QAAI,IAAJA,OAAA,EAAAA,EAAMZ,aAAcA,IAAiB,OAAJY,QAAI,IAAJA,OAAA,EAAAA,EAAMX,YAAaA,EADrC,0CAGOF,EAAWC,EAAWC,GAH7B,OAGTqR,EAHS,OAKfrQ,EAASP,EAAYC,QAAQ2Q,IALd,gDAOfjQ,EAAY,EAAD,IAPI,YAWX,OAAJT,QAAI,IAAJA,OAAA,EAAAA,EAAMnD,SAAUA,EAXD,4CAaO4C,EAAY5C,GAbnB,QAaT6T,EAbS,OAefrQ,EAASP,EAAYC,QAAQ2Q,IAfd,mDAiBfjQ,EAAY,EAAD,IAjBI,YAqBf3D,IAAY8C,EArBG,4CAuBTF,EAAe5C,EAAU8C,GAvBhB,2DAyBfgQ,IAAiB,GAzBF,mChBOrB3I,EgBuByDkJ,GhBtBzD9I,EgBsB2EgJ,GhBpBpE1U,EAAQ,GAAD,OAAIL,EAAJ,8BAA0C,CACtDyB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB8J,aACAI,qBgBjBiB,QA8BXR,EA9BW,OAgCjBJ,GAAkBI,GAClBuJ,GAAoBvJ,EAAkBI,YACtCqJ,GAAqBzJ,EAAkBQ,gBAlCtB,mDAoCjB5G,EAAY,EAAD,IApCM,kChBMa,IAClCwG,EACAI,IgBRqB,4CAAH,qDAkLlB,OACE,gCACE,qBAAK7F,UAAU,uBAAf,SACE,cAAC,GAAD,MAGF,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,mEAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,mBAAGA,UAAU,YAAb,gBAA0B0E,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAUyK,SACpC,mBAAGnP,UAAU,YAAb,iCAGF,sBAAKA,UAAU,mCAAf,UACE,mBAAGA,UAAU,YAAb,gBAA0B0E,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAU0K,YACpC,mBAAGpP,UAAU,YAAb,mCAGF,sBAAKA,UAAU,mCAAf,UACE,mBAAGA,UAAU,YAAb,0BAA6B0E,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAU2K,MAAvC,OACA,mBAAGrP,UAAU,YAAb,gCAIJ,oBAAIA,UAAU,qGAAd,kCAIA,sBAAKA,UAAU,8BAAf,UACE,wBACE6N,QAAQ,YACR7N,UAAU,iDAFZ,uBAME,sBAAKA,UAAU,UAAf,UACE,uBACEkB,GAAG,YACHzC,KAAK,OACLE,MAAOf,EACPyC,SA/JU,SAACP,GACvB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAER6P,IAAkB,GAClB7N,EAAahC,IA4JD4B,OAtKY,WACnB3C,GACH4Q,IAAkB,IAqKRxO,UAAWS,IACT,qFACA,CAAE,YAAa8N,OAGlBA,IACC,mBAAGvO,UAAU,qCAAb,gDAKN,wBACE6N,QAAQ,WACR7N,UAAU,iDAFZ,sBAME,sBAAKA,UAAU,UAAf,UACE,uBACEkB,GAAG,WACHzC,KAAK,OACLE,MAAOd,EACPwC,SA1KS,SAACP,GACtB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAER+P,IAAiB,GACjB9N,EAAYjC,IAuKA4B,OAjLW,WAClB1C,GACH6Q,IAAiB,IAgLP1O,UAAWS,IACT,qFACA,CAAE,YAAagO,OAGlBA,IACC,mBAAGzO,UAAU,qCAAb,kDAMR,oBAAIA,UAAU,qGAAd,kCAIA,sBAAKA,UAAU,8BAAf,UACE,wBACE6N,QAAQ,WACR7N,UAAU,iDAFZ,8BAME,sBAAKA,UAAU,UAAf,UACE,uBACEvB,KAAK,WACLyC,GAAG,WACHvC,MAAOrD,EACP+E,SA3LS,SAACP,GACtB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERe,GAAiB,GACjB0O,IAAiB,GACjB5O,EAAYb,IAuLA4B,OAlMW,YAClBhD,EAAaiD,KAAKlF,IAAaA,GAClCoE,GAAiB,IAiMPM,UAAWS,IACT,qFACA,CAAE,YAAahB,GAAoB0O,OAGtC1O,GACC,mBAAGO,UAAU,qCAAb,wGAKDmO,IACC,mBAAGnO,UAAU,qCAAb,0CAON,wBACE6N,QAAQ,cACR7N,UAAU,iDAFZ,0BAME,sBAAKA,UAAU,UAAf,UACE,uBACEvB,KAAK,WACLyC,GAAG,cACHvC,MAAOP,EACPiC,SA7MY,SAACP,GACzB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAER2P,IAAoB,GACpBJ,EAAevP,IA0MH4B,OApNc,YACrBhD,EAAaiD,KAAKpC,IAAgBA,GACrCkQ,IAAoB,IAmNVtO,UAAWS,IACT,qFACA,CAAE,YAAa4N,OAGlBA,IACC,mBAAGrO,UAAU,qCAAb,8GAQN,wBACE6N,QAAQ,QACR7N,UAAU,iDAFZ,mBAME,sBAAKA,UAAU,UAAf,UACE,uBACEkB,GAAG,QACHzC,KAAK,QACLE,MAAOtD,EACPgF,SA7RM,SAACP,GACnB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERiB,IAAc,GACdL,EAASZ,IA0RG4B,OApSQ,WACf/C,EAAUgD,KAAKnF,IAClBuE,IAAc,IAmSJI,UAAWS,IACT,qFACA,CAAE,YAAad,OAGlBA,IACC,mBAAGK,UAAU,qCAAb,kDAMR,oBAAIA,UAAU,qGAAd,sBAIA,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,yBACErB,MAAO,EACP0B,SAhOU,SAACP,GACrB,IAAMnB,GAASmB,EAAMQ,OAAO3B,MAEvBgQ,GAAiBjJ,SAAS/G,IAC7BiQ,GAAoB,GAAD,oBAAKD,IAAL,CAAuBhQ,MA6NlCqB,UAAU,qDAHZ,UAKE,wBAAQrB,MAAO,EAAGqC,UAAQ,EAA1B,gCACCyB,EAAS6D,KAAI,SAAAd,GAAO,OACnB,wBAEE7G,MAAO6G,EAAQtE,GAFjB,SAIGsE,EAAQA,SAHJA,EAAQtE,YASrB,qBAAKlB,UAAU,kCAAf,SACG2O,GAAiBnD,OAChBmD,GAAiBrI,KAAI,SAAApB,GACnB,IAAMd,EAAkB3B,EAAS4H,MAAK,SAAA7E,GAAO,OAAIA,EAAQtE,KAAOgE,KAEhE,OACE,uBAAsBlF,UAAU,4BAAhC,iBACGoE,QADH,IACGA,OADH,EACGA,EAAiBoB,QAClB,wBACE/G,KAAK,SACLuB,UAAU,kBACV+D,QAAS,kBAlPD,SAACmB,GAC3B,IAAMoK,EAAsBX,GAAiBpJ,QAAO,SAAArE,GAAE,OAAIA,IAAOgE,KAEjE0J,GAAoBU,GA+OaC,CAAoBrK,QAL5BA,MAYf,sBAAMlF,UAAU,uCAAhB,qFAON,oBAAIA,UAAU,qGAAd,4BAIA,sBAAKA,UAAU,+BAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,wBACE6N,QAAQ,iBACR7N,UAAU,iDAFZ,4BAME,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,4DAAf,SACE,yBACEkB,GAAG,iBACHvC,MAAO8H,GACPpG,SA3QW,SAACP,GAC5B,IAAMnB,GAASmB,EAAMQ,OAAO3B,MAE5BkO,GAAkBlO,IAyQFqB,UAAU,qDAJZ,UAME,wBAAQrB,MAAO,EAAGqC,UAAQ,EAA1B,gCACCmB,EAAUmE,KAAI,SAAAV,GAAQ,OACrB,wBAEEjH,MAAOiH,EAAS1E,GAFlB,SAIG0E,EAASA,UAHLA,EAAS1E,iBAW1B,wBACE2M,QAAQ,iBACR7N,UAAU,iDAFZ,0BAME,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,4DAAf,SACE,yBACEkB,GAAG,iBACHvC,MAAOoQ,GACP1O,SAjSW,SAACP,GAC5B,IAAMnB,GAASmB,EAAMQ,OAAO3B,MAE5BqQ,GAAkBrQ,IA+RFqB,UAAU,qDAJZ,UAME,wBAAQrB,MAAO,EAAGqC,UAAQ,EAA1B,gCACCmB,EACEoD,QAAO,SAAAK,GAAQ,OAAIA,EAAS1E,KAAOuF,MACnCH,KAAI,SAAAV,GAAQ,OACX,wBAEEjH,MAAOiH,EAAS1E,GAFlB,SAIG0E,EAASA,UAHLA,EAAS1E,iBAW5B,wBACEzC,KAAK,SACLuB,UAAU,4EACV+D,QAjTe,WACzB,IAAMyL,EAAUX,GAAkB/I,MAAK,SAAAF,GAAQ,OAC7CA,EAASI,mBAAqBS,IAC3Bb,EAASO,mBAAqB4I,MAG/BtI,IAAkBsI,KAAmBS,GACvCV,GAAqB,GAAD,oBACfD,IADe,CAElB,CACE7I,iBAAkBS,GAClBN,iBAAkB4I,QAmShB,oBASDF,GAAkBrD,OACjB,qBAAKxL,UAAU,gDAAf,SACE,wBAAOA,UAAU,yCAAjB,UACE,gCACE,+BACE,iDACA,iDACA,4BAIJ,gCACG6O,GAAkBvI,KAAI,SAAAmJ,GACrB,IAAMC,EAAavN,EAAUkI,MAAK,SAAAzE,GAAQ,OACxCA,EAAS1E,KAAOuO,EAAazJ,oBAEzB2J,EAAaxN,EAAUkI,MAAK,SAAAzE,GAAQ,OACxCA,EAAS1E,KAAOuO,EAAatJ,oBAG/B,OACE,+BAGE,oCAAKuJ,QAAL,IAAKA,OAAL,EAAKA,EAAY9J,WACjB,oCAAK+J,QAAL,IAAKA,OAAL,EAAKA,EAAY/J,WACjB,6BACE,wBACEnH,KAAK,SACLuB,UAAU,SACV+D,QAAS,kBApUN,SAAC0L,GAC5B,IAAMG,EAAuBf,GAAkBtJ,QAAO,SAAAK,GAAQ,OAAIA,IAAa6J,KAE/EX,GAAqBc,GAiUkBvC,CAAqBoC,UAT1C,UACUA,EAAazJ,iBADvB,YAC2CyJ,EAAatJ,6BAmBlE,qBAAKnG,UAAU,mCAAf,SACE,sBAAMA,UAAU,uCAAhB,sFAON,sBAAKA,UAAU,iCAAf,UACE,wBACEvB,KAAK,SACLuB,UAAU,mDACV+D,QA7ZW,WACfvF,IACFmC,EAAanC,EAAKZ,WAClBgD,EAAYpC,EAAKX,UACjB0B,EAASf,EAAKnD,QAGhBmE,EAAY,IACZ0O,EAAe,IAEfM,IAAkB,GAClBE,IAAiB,GACjB9O,IAAc,GACdF,GAAiB,GACjB4O,IAAoB,GACpBF,IAAiB,GAEbpJ,KACF8J,GAAqB9J,GAAea,gBACpC+I,GAAoB5J,GAAeS,cAuY/B,oBAQA,wBACEhH,KAAK,SACLuC,SACErB,IACGF,GACA0O,IACAE,IACAE,IACAE,GAEL1K,QAASkL,GACTjP,UAAU,mDAXZ,+BChkBG6P,GAAwB,WACnC,IAAM5Q,EAAcC,4BACdL,EAAWQ,cACXb,EAAOuE,YAAYjE,GAEzB,EAAkCQ,mBAAS,IAA3C,mBAAO1B,EAAP,KAAkB+C,EAAlB,KACA,EAAgCrB,mBAAS,IAAzC,mBAAOzB,EAAP,KAAiB+C,EAAjB,KACA,EAA0BtB,mBAAS,IAAnC,mBAAOjE,EAAP,KAAckE,EAAd,KACA,EAAgCD,mBAA8B,MAA9D,mBAAOoF,EAAP,KAAiBC,EAAjB,KACA,EAAwCrF,mBAA8B,MAAtE,mBAAOwQ,EAAP,KAAqBC,EAArB,KACA,EAA8BzQ,mBAAS,IAAvC,mBAAOvB,EAAP,KAAgBiS,EAAhB,KACA,EAA8B1Q,mBAAS,IAAvC,mBAAOtB,EAAP,KAAgBiS,EAAhB,KACA,EAAgC3Q,mBAAS,IAAzC,mBAAOhE,EAAP,KAAiBkE,EAAjB,KACA,GAAsCF,mBAAS,IAA/C,qBAAOlB,GAAP,MAAoB8P,GAApB,MAEA,GAA6C5O,oBAAS,GAAtD,qBAAOG,GAAP,MAAyBC,GAAzB,MACA,GAA4CJ,oBAAS,GAArD,qBAAO6O,GAAP,MAAwBC,GAAxB,MACA,GAAmD9O,oBAAS,GAA5D,qBAAO+O,GAAP,MAA4BC,GAA5B,MACA,GAAuChP,oBAAS,GAAhD,qBAAOK,GAAP,MAAsBC,GAAtB,MACA,GAA+CN,oBAAS,GAAxD,qBAAOiP,GAAP,MAA0BC,GAA1B,MACA,GAA6ClP,oBAAS,GAAtD,qBAAOmP,GAAP,MAAyBC,GAAzB,MAEAjL,qBAAU,WACR,sBAAC,8BAAAnJ,EAAA,yDACO6R,EAAUH,eAAelP,QAAQ,SACjCyO,EAAcS,eAAelP,QAAQ,gBAEvCqP,EAJL,0CAMWG,GAAYH,EAASZ,GANhC,uDASK2E,QAAQC,IAAR,MATL,yBAWKnE,eAAe4B,WAAW,SAC1B5B,eAAe4B,WAAW,eAZ/B,2EAAD,KAgBC,IAEHnK,qBAAU,WACR,sBAAC,8BAAAnJ,EAAA,+EAE6BoD,IAF7B,cAES0H,EAFT,gBjB1CIjL,EAAQ,GAAD,OAAIL,EAAJ,6BiB0CX,OAGSsW,EAHT,OAKGzL,EAAYS,GACZ2K,EAAgBK,GAChBJ,EAAWI,EAAQrS,SACnBkS,EAAWG,EAAQpS,SARtB,kDAUGiB,EAAY,EAAD,IAVd,yDAAD,KAaC,IAEHwE,qBAAU,WACJjF,IACFmC,EAAanC,EAAKZ,WAClBgD,EAAYpC,EAAKX,UACjB0B,EAASf,EAAKnD,UAEf,CAACmD,IAEJ,IAAMyQ,GAAY,uCAAG,gCAAA3U,EAAA,0DACX,OAAJkE,QAAI,IAAJA,OAAA,EAAAA,EAAMZ,aAAcA,IAAiB,OAAJY,QAAI,IAAJA,OAAA,EAAAA,EAAMX,YAAaA,EADrC,0CAGOF,EAAWC,EAAWC,GAH7B,OAGTqR,EAHS,OAKfrQ,EAASP,EAAYC,QAAQ2Q,IALd,gDAOfjQ,EAAY,EAAD,IAPI,YAWH,OAAZ6Q,QAAY,IAAZA,OAAA,EAAAA,EAAc/R,WAAYA,GAAW+R,EAAa9R,UAAYA,EAX/C,4CAaeF,EAAmBC,EAASC,GAb3C,QAaTqS,EAbS,OAefN,EAAgBM,GAfD,mDAiBfpR,EAAY,EAAD,IAjBI,YAqBX,OAAJT,QAAI,IAAJA,OAAA,EAAAA,EAAMnD,SAAUA,EArBD,4CAuBO4C,EAAY5C,GAvBnB,QAuBT6T,EAvBS,OAyBfrQ,EAASP,EAAYC,QAAQ2Q,IAzBd,mDA2BfjQ,EAAY,EAAD,IA3BI,YA+Bf3D,IAAY8C,GA/BG,4CAiCTF,EAAe5C,EAAU8C,IAjChB,2DAmCfgQ,IAAiB,GAnCF,iFAAH,qDAiIlB,OACE,gCACE,qBAAKpO,UAAU,uBAAf,SACE,cAAC,GAAD,MAGF,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,mEAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,mBAAGA,UAAU,YAAb,gBAA0B0E,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAUyK,SACpC,mBAAGnP,UAAU,YAAb,iCAGF,sBAAKA,UAAU,mCAAf,UACE,mBAAGA,UAAU,YAAb,gBAA0B0E,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAU0K,YACpC,mBAAGpP,UAAU,YAAb,mCAGF,sBAAKA,UAAU,mCAAf,UACE,mBAAGA,UAAU,YAAb,gBAA0B0E,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAU4L,UACpC,mBAAGtQ,UAAU,YAAb,oCAGF,sBAAKA,UAAU,mCAAf,UACE,mBAAGA,UAAU,YAAb,0BAA6B0E,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAU2K,MAAvC,OACA,mBAAGrP,UAAU,YAAb,gCAIJ,oBAAIA,UAAU,qGAAd,kCAIA,sBAAKA,UAAU,8BAAf,UACE,wBACE6N,QAAQ,YACR7N,UAAU,iDAFZ,uBAME,sBAAKA,UAAU,UAAf,UACE,uBACEkB,GAAG,YACHzC,KAAK,OACLE,MAAOf,EACPyC,SAnHU,SAACP,GACvB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAER6P,IAAkB,GAClB7N,EAAahC,IAgHD4B,OA1HY,WACnB3C,GACH4Q,IAAkB,IAyHRxO,UAAWS,IACT,qFACA,CAAE,YAAa8N,OAGlBA,IACC,mBAAGvO,UAAU,qCAAb,gDAKN,wBACE6N,QAAQ,WACR7N,UAAU,iDAFZ,sBAME,sBAAKA,UAAU,UAAf,UACE,uBACEkB,GAAG,WACHzC,KAAK,OACLE,MAAOd,EACPwC,SA9HS,SAACP,GACtB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAER+P,IAAiB,GACjB9N,EAAYjC,IA2HA4B,OArIW,WAClB1C,GACH6Q,IAAiB,IAoIP1O,UAAWS,IACT,qFACA,CAAE,YAAagO,OAGlBA,IACC,mBAAGzO,UAAU,qCAAb,+CAKN,wBACE6N,QAAQ,UACR7N,UAAU,iDAFZ,0BAME,qBAAKA,UAAU,UAAf,SACE,uBACEkB,GAAG,UACHzC,KAAK,OACLE,MAAOX,EACPqC,SAAU,SAACP,GACTmQ,EAAWnQ,EAAMQ,OAAO3B,QAE1BqB,UAAU,4FAKhB,wBACE6N,QAAQ,cACR7N,UAAU,iDAFZ,qBAME,qBAAKA,UAAU,UAAf,SACE,uBACEkB,GAAG,cACHzC,KAAK,OACLE,MAAOZ,EACPsC,SAAU,SAACP,GACTkQ,EAAWlQ,EAAMQ,OAAO3B,QAE1BqB,UAAU,+FAMlB,oBAAIA,UAAU,qGAAd,kCAIA,sBAAKA,UAAU,8BAAf,UACE,wBACE6N,QAAQ,WACR7N,UAAU,iDAFZ,8BAME,sBAAKA,UAAU,UAAf,UACE,uBACEvB,KAAK,WACLyC,GAAG,WACHvC,MAAOrD,EACP+E,SArLS,SAACP,GACtB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERe,IAAiB,GACjB0O,IAAiB,GACjB5O,EAAYb,IAiLA4B,OA5LW,YAClBhD,EAAaiD,KAAKlF,IAAaA,GAClCoE,IAAiB,IA2LPM,UAAWS,IACT,qFACA,CAAE,YAAahB,IAAoB0O,OAGtC1O,IACC,mBAAGO,UAAU,qCAAb,wGAKDmO,IACC,mBAAGnO,UAAU,qCAAb,0CAON,wBACE6N,QAAQ,cACR7N,UAAU,iDAFZ,0BAME,sBAAKA,UAAU,UAAf,UACE,uBACEvB,KAAK,WACLyC,GAAG,cACHvC,MAAOP,GACPiC,SAvMY,SAACP,GACzB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAER2P,IAAoB,GACpBJ,GAAevP,IAoMH4B,OA9Mc,YACrBhD,EAAaiD,KAAKpC,KAAgBA,IACrCkQ,IAAoB,IA6MVtO,UAAWS,IACT,qFACA,CAAE,YAAa4N,OAGlBA,IACC,mBAAGrO,UAAU,qCAAb,8GAQN,wBACE6N,QAAQ,QACR7N,UAAU,iDAFZ,mBAME,sBAAKA,UAAU,UAAf,UACE,uBACEkB,GAAG,QACHzC,KAAK,QACLE,MAAOtD,EACPgF,SAvRM,SAACP,GACnB,IAAQnB,EAAUmB,EAAMQ,OAAhB3B,MAERiB,IAAc,GACdL,EAASZ,IAoRG4B,OA9RQ,WACf/C,EAAUgD,KAAKnF,IAClBuE,IAAc,IA6RJI,UAAWS,IACT,qFACA,CAAE,YAAad,OAGlBA,IACC,mBAAGK,UAAU,qCAAb,kDAMR,sBAAKA,UAAU,iCAAf,UACE,wBACEvB,KAAK,SACLuB,UAAU,mDACV+D,QA7OW,WACfvF,IACFmC,EAAanC,EAAKZ,WAClBgD,EAAYpC,EAAKX,UACjB0B,EAASf,EAAKnD,QAGZyU,IACFG,EAAWH,EAAa9R,SACxBgS,EAAWF,EAAa/R,UAG1ByB,EAAY,IACZ0O,GAAe,IAEfM,IAAkB,GAClBE,IAAiB,GACjB9O,IAAc,GACdF,IAAiB,GACjB4O,IAAoB,GACpBF,IAAiB,IAsNX,oBAQA,wBACE3P,KAAK,SACLuC,SACErB,IACGF,IACA0O,IACAE,IACAE,IACAE,GAEL1K,QAASkL,GACTjP,UAAU,mDAXZ,8BCtaGuQ,I,MAA+B,WAC1C,IAAMtR,EAAcC,4BACpB,EAA0CI,mBAASiD,GAAciO,QAAjE,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgCpR,mBAAoB,IAApD,mBAAOoF,EAAP,KAAiBC,EAAjB,KAEAlB,qBAAU,WACR,sBAAC,4BAAAnJ,EAAA,+EAE6BuH,GAAY4O,GAFzC,OAESrL,EAFT,OAIGT,EAAYS,GAJf,gDAMGnG,EAAY,EAAD,IANd,wDAAD,KASC,CAACwR,IAEJ,IAAME,EAAiB,SACrB7Q,EACA8Q,GAEA9Q,EAAMuG,YAAYtG,iBAElB2Q,EAAiBE,IAGnB,OACE,gCACE,qBAAK5Q,UAAU,wBAAf,SACE,cAAC,GAAD,MAGF,qBAAKA,UAAU,0BAAf,SACE,qBAAIA,UAAU,sBAAd,UACE,oBACEA,UAAWS,IAAW,CAAE,YAAagQ,IAAkBlO,GAAciO,SADvE,SAGE,mBACE5J,KAAK,IACL7C,QAAS,SAACjE,GAAD,OAAW6Q,EAAe7Q,EAAOyC,GAAciO,SAF1D,+BAQF,oBACExQ,UAAWS,IAAW,CAAE,YAAagQ,IAAkBlO,GAAcsO,YADvE,SAGE,mBACEjK,KAAK,IACL7C,QAAS,SAACjE,GAAD,OAAW6Q,EAAe7Q,EAAOyC,GAAcsO,YAF1D,uCAUN,wBAAO7Q,UAAU,kCAAjB,UACE,gCACE,+BACE,2CACA,iDACA,iDACA,yCACA,6CACA,kDACA,4CACCyQ,IAAkBlO,GAAcsO,WAC/B,qCACE,0CACA,0CAGJ,4BAIJ,gCACGnM,EAAS4B,KAAI,SAAAC,GACZ,OACE,+BACE,6BAAKA,EAAQC,WACb,6BAAKD,EAAQE,eAAeb,WAC5B,6BAAKW,EAAQG,eAAed,WAC5B,6BAAKW,EAAQf,QAAQA,UACrB,6BAAKe,EAAQI,aACb,6BAAKJ,EAAQuK,uBACb,6BAAK,IAAIxU,KAAKA,KAAKyU,MAAMxK,EAAQyK,YAAYC,iBAC5CR,IAAkBlO,GAAcsO,WAC/B,qCACE,6BAAK,IAAIvU,KAAKA,KAAKyU,MAAMxK,EAAQ2K,UAAUD,iBAC3C,uCAAQ1K,EAAQoH,MAAhB,UAGJ,6BACE,cAAC,IAAD,CACE1N,GAAE,mBAAcsG,EAAQrF,GAAtB,YAA4BqF,EAAQG,eAAexF,IACrDlB,UAAU,8BAFZ,sBAfKuG,EAAQrF,GAAKqF,EAAQG,eAAeuG,2B,oBCvFrD9S,GAAO,uCAAG,WAAOC,EAAaC,GAApB,iBAAAC,EAAA,sEACW2C,EAAwB5C,GADnC,cACR8C,EADQ,gBAGS5C,MAAMH,EAAK+C,GAHpB,WAGR3C,EAHQ,QAKA2W,GALA,6BAMFtW,MANE,UAMWL,EAASC,OANpB,0BAM4BK,aAN5B,gDASPN,EAAS4W,QATF,4CAAH,wDAYAC,GAAY,uCAAG,WAC1BrP,EACAC,EACAqJ,GAH0B,eAAAhR,EAAA,sEAKPH,GAAQ,GAAD,OAAIJ,EAAJ,yBAAkCiI,EAAlC,YAA+CC,EAA/C,UALA,OAKpBiK,EALoB,OAO1BoF,KAAapF,EAAMZ,GAPO,2CAAH,0D,SCbZiG,GAAU,SAACvP,EAAmBwP,GACzC,OAAOrX,EAAQ,GAAD,OAAIN,EAAJ,cAA2B,CACvC0B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBqG,YACAwP,aCEOC,GAAgC,SAAC,GAKvC,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACA3P,EAEI,EAFJA,UACA4P,EACI,EADJA,kBAEM3S,EAAcC,4BACpB,EAAkDI,qBAAlD,mBAAOuS,EAAP,KAA0BC,EAA1B,KAEArO,qBAAU,WACR,GAAIiO,EAAM,CACR,IAAMK,EAAsB,kBAAMC,UAAc,CAC9CC,cAAe,oCACfC,UAAW,2BACV,SAACC,EAAOC,GACLD,EACFlT,EAAYkT,GAEZL,EAAqBM,OAIrBP,EACFA,EACGQ,WACAC,MAAK,WACJR,OAAqBS,GACrBR,OAGJA,OAGH,CAACL,IAuBJ,OACE,sBAAK1R,UAAWS,IAAW,QAAS,CAAE,YAAaiR,IAAnD,UACE,qBAAK1R,UAAU,qBACf,sBAAKA,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,mBAAGA,UAAU,mBAAb,6BACA,wBACEvB,KAAK,SACLuB,UAAU,SACVwS,aAAW,QACXzO,QAAS,kBAAM4N,GAAQ,SAI3B,yBAAS3R,UAAU,kBAAnB,SACE,qBAAKkB,GAAG,4BAEV,wBAAQlB,UAAU,8CAAlB,SACE,wBACEvB,KAAK,SACLuC,UAAW6Q,EACX9N,QA1CQ,WACZ8N,GACFA,EAAkBY,qBAAlB,uCACE,WAAON,EAAOO,GAAd,eAAApY,EAAA,0DACM6X,EADN,gBAEIlT,EAAYkT,GAFhB,8BAIUQ,EAAqBD,EAAQlB,MAJvC,kBAOYD,GAAQvP,EAAW2Q,GAP/B,OAQMf,IARN,kDAUM3S,EAAY,EAAD,IAVjB,0DADF,0DAyCMe,UAAU,6BAJZ,0BC3EG4S,GAAyB,WACpC,IAAM3T,EAAcC,4BACpB,EAA0CI,mBAASiD,GAAcsQ,QAAjE,mBAAOpC,EAAP,KAAsBC,EAAtB,KACA,EAAgCpR,mBAAoB,IAApD,mBAAOoF,EAAP,KAAiBC,EAAjB,KACA,EAAkCrF,oBAAS,GAA3C,mBAAOwT,EAAP,KAAkBC,EAAlB,KACA,EAA0CzT,mBAAS,GAAnD,mBAAO0T,EAAP,KAA0BC,EAA1B,KAEAxP,qBAAU,WACR,sBAAC,4BAAAnJ,EAAA,+EAE6BuH,GAAY4O,GAFzC,OAESrL,EAFT,OAIGT,EAAYS,GAJf,gDAMGnG,EAAY,EAAD,IANd,wDAAD,KASC,CAACwR,IAEJ,IAAME,EAAiB,SACrB7Q,EACA8Q,GAEA9Q,EAAMuG,YAAYtG,iBAElB2Q,EAAiBE,IAabsC,EAAe,uCAAG,4BAAA5Y,EAAA,6DACtByY,GAAa,GADS,kBAGMlR,GAAY4O,GAHlB,OAGdrL,EAHc,OAKpBT,EAAYS,GALQ,gDAOpBnG,EAAY,EAAD,IAPS,yDAAH,qDAWfkU,EAAc,uCAAG,WACrBrT,EACAkC,EACAC,EACAqJ,GAJqB,SAAAhR,EAAA,6DAMrBwF,EAAMuG,YAAYtG,iBANG,kBASbsR,GAAarP,EAAWC,EAAcqJ,GATzB,sDAWnBrM,EAAY,EAAD,IAXQ,wDAAH,4DAepB,OACE,gCACE,qBAAKe,UAAU,wBAAf,SACE,cAAC,GAAD,MAGF,qBAAKA,UAAU,0BAAf,SACE,qBAAIA,UAAU,sBAAd,UACE,oBACEA,UAAWS,IAAW,CAAE,YAAagQ,IAAkBlO,GAAciO,SADvE,SAGE,mBACE5J,KAAK,IACL7C,QAAS,SAACjE,GAAD,OAAW6Q,EAAe7Q,EAAOyC,GAAciO,SAF1D,+BAQF,oBACExQ,UAAWS,IAAW,CAAE,YAAagQ,IAAkBlO,GAAcsO,YADvE,SAGE,mBACEjK,KAAK,IACL7C,QAAS,SAACjE,GAAD,OAAW6Q,EAAe7Q,EAAOyC,GAAcsO,YAF1D,kCAQF,oBACE7Q,UAAWS,IAAW,CAAE,YAAagQ,IAAkBlO,GAAcsQ,SADvE,SAGE,mBACEjM,KAAK,IACL7C,QAAS,SAACjE,GAAD,OAAW6Q,EAAe7Q,EAAOyC,GAAcsQ,SAF1D,oCAUN,wBAAO7S,UAAU,kCAAjB,UACE,gCACE,+BACE,2CACA,iDACA,iDACA,yCACA,6CACCyQ,IAAkBlO,GAAcsQ,QAC/B,4CAEDpC,IAAkBlO,GAAcsO,WAC/B,0CAEF,uCACA,uBAECJ,IAAkBlO,GAAcsO,WAC/B,4BAKN,gCACGnM,EAAS4B,KAAI,SAAAC,GACZ,OACE,+BACE,6BAAKA,EAAQC,WACb,6BAAKD,EAAQE,eAAeb,WAC5B,6BAAKW,EAAQG,eAAed,WAC5B,6BAAKW,EAAQf,QAAQA,UACrB,6BAAKe,EAAQI,aACZ8J,IAAkBlO,GAAcsQ,QAC/B,6BAAK,IAAIvW,KAAKA,KAAKyU,MAAMxK,EAAQyK,YAAYC,iBAE9CR,IAAkBlO,GAAcsO,WAC/B,6BAAK,IAAIvU,KAAKA,KAAKyU,MAAMxK,EAAQ2K,UAAUD,iBAE7C,uCAAQ1K,EAAQoH,MAAhB,OACA,6BACG8C,IAAkBlO,GAAcsQ,OAC/B,mBACEjM,KAAK,IACL5G,UAAU,8BACV+D,QAAS,SAACjE,GAAD,OA3HX,SAChBA,EACAoB,GAEApB,EAAMuG,YAAYtG,iBAElBkT,EAAa/R,GACb6R,GAAa,GAoHyBK,CAAUtT,EAAOyG,EAAQrF,KAH/C,iBAQA,cAAC,IAAD,CACEjB,GAAE,mBAAcsG,EAAQrF,GAAtB,YAA4BqF,EAAQG,eAAexF,IACrDlB,UAAU,8BAFZ,oBAQHyQ,IAAkBlO,GAAcsO,WAC/B,6BACE,mBACEjK,KAAK,IACL5G,UAAU,8BACV+D,QAAS,SAACjE,GAAD,OAAWqT,EAClBrT,EACAyG,EAAQrF,GACRqF,EAAQG,eAAexF,GACvBqF,EAAQC,WAPZ,0BAjCGD,EAAQrF,GAAKqF,EAAQG,eAAeuG,sBAqDrD,cAAC,GAAD,CACEyE,KAAMoB,EACNnB,QAASoB,EACT/Q,UAAWgR,EACXpB,kBAAmBsB,QChMdG,GAAqC,SAAC,GAAmC,IAAjClB,EAAgC,EAAhCA,MAAOmB,EAAyB,EAAzBA,mBAC1D,OACE,gCACE,cAAC,GAAD,IAEA,0BAAStT,UAAU,OAAnB,UACE,oBAAIA,UAAU,oCAAd,SAAmDmS,EAAMpX,UAEzD,qBAAKiF,UAAU,UAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,cAAC,IAAD,CACEC,GAAG,IACH8D,QAASuP,EACTtT,UAAU,2CAHZ,iCAUJ,qBACE8G,IAAKoE,GACLlE,IAAI,aACJhH,UAAU,4CCVPuT,GAAgB,WAC3B,IAAM1U,EAAWQ,cACXb,EAAOuE,YAAYjE,GAazB,OAXA2E,qBAAU,WACR,sBAAC,8BAAAnJ,EAAA,sEAC2BgD,IAD3B,cACOgI,EADP,gBAE4BjI,IAF5B,OAEOmW,EAFP,OAIC3U,EAAS2D,GAA4B8C,IACrCzG,EAASqD,GAA8BsR,IACvC3U,EAASP,EAAYM,YANtB,0CAAD,KAQC,IAGD,cAAC,gBAAD,CAAeyU,kBAAmBA,GAAlC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC5BlV,EAMA,qCACE,cAAC,IAAD,CAAOiV,KAAK,WAAWC,SAAa,OAAJlV,QAAI,IAAJA,OAAA,EAAAA,EAAMqC,eAAgByB,GAAY0B,KAAO,cAAC,GAAD,IAAkB,cAAC,GAAD,MAC3F,cAAC,IAAD,CAAOyP,KAAK,qBAAqBC,QAAS,cAAC,GAAD,MAC1C,cAAC,IAAD,CAAOD,KAAK,eAAeC,SAAa,OAAJlV,QAAI,IAAJA,OAAA,EAAAA,EAAMqC,eAAgByB,GAAY0B,KAAO,cAAC,GAAD,IAAmB,cAAC,GAAD,MAChG,cAAC,IAAD,CAAOyP,KAAK,YAAYC,QAAS,cAAC,GAAD,SATnC,qCACE,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,SAUpC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUzT,GAAG,IAAI0T,SAAO,Y,kBClDnDC,GAAUC,aAAgB,CAC9BrV,K9BuByB,WAAmD,IAAlDO,EAAiD,uDAA5B,KAAM+U,EAAsB,uCAC3E,OAAQA,EAAOrV,MACb,KAAKjC,EAAYkC,QACf,OAAOoV,EAAOnV,MAAP,eAAoBmV,EAAOnV,OAAU,KAC9C,QACE,OAAOI,I8B3BX0D,SpBU6B,WAA+C,IAA9C1D,EAA6C,uDAA1B,GAAI+U,EAAsB,uCAC3E,OAAQA,EAAOrV,MACb,KAAKjC,GAAYkG,YACf,OAAO,aAAIoR,EAAOnV,OACpB,QACE,OAAOI,IoBdXoD,UxBS8B,WAAgD,IAA/CpD,EAA8C,uDAA1B,GAAI+U,EAAsB,uCAC7E,OAAQA,EAAOrV,MACb,KAAKjC,EAAY4F,aACf,OAAO,aAAI0R,EAAOnV,OACpB,QACE,OAAOI,MwBNEgV,GALDC,aACZJ,GACAK,aAAgBC,OCLlBC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAMM,WAAP,UACE,cAAC,GAAD,UAIN3Q,SAAS4Q,eAAe,W","file":"static/js/main.651a9de5.chunk.js","sourcesContent":["export const clientApi = 'https://wordsly-client.azurewebsites.net';\r\nexport const adminApi = 'https://wordsly-admin.azurewebsites.net';\r\nexport const translatorApi = 'https://wordsly-translator.azurewebsites.net';\r\nexport const quotaHub = `${clientApi}/hub/quota`;\r\nexport const stringsHub = `${translatorApi}/hub/strings`;\r\nexport const commentsHub = `${translatorApi}/hub/comments`;\r\n","import { Result } from '../types';\r\n\r\nexport const request = async <T>(url: string, options?: RequestInit): Promise<T> => {\r\n  const response = await fetch(url, options);\r\n\r\n  try {\r\n    const result: Result<T> = await response.json();\r\n\r\n    if (result.isSuccess) {\r\n      return result.data;\r\n    }\r\n\r\n    throw new Error(result.errorMessage);\r\n    // eslint-disable-next-line\r\n  } catch (e: any) {\r\n    if (e.message === 'The refresh token is not valid.') {\r\n      localStorage.clear();\r\n      // eslint-disable-next-line no-restricted-globals\r\n      location.reload();\r\n    }\r\n\r\n    throw e;\r\n  }\r\n};\r\n","import { Tokens, SignUpModel } from '../types';\r\nimport { clientApi } from './apis';\r\nimport { request } from './base';\r\n\r\nexport const signIn = async (email: string, password: string): Promise<Tokens> => {\r\n  return request(`${clientApi}/api/Auth/sign-in`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n      password,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const signUp = async (signUpModel: SignUpModel): Promise<Tokens> => {\r\n  return request(`${clientApi}/api/Auth/sign-up`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(signUpModel),\r\n  });\r\n};\r\n\r\nexport const refresh = async (tokens: Tokens): Promise<Tokens> => {\r\n  return request(`${clientApi}/api/Auth/refresh`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(tokens),\r\n  });\r\n};\r\n","import jwtDecode, { JwtPayload } from 'jwt-decode';\r\nimport { refresh } from './api/authorization';\r\nimport { Tokens } from './types';\r\n\r\nlet isRefreshing = false;\r\n\r\nfunction isJwtExpired(token: string) {\r\n  const { exp } = jwtDecode<JwtPayload>(token);\r\n  const currentTime = new Date().getTime() / 1000;\r\n\r\n  if (exp && currentTime > exp) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport const setTokens = (tokens: Tokens) => {\r\n  localStorage.setItem('authorizationToken', tokens.authorizationToken);\r\n  localStorage.setItem('refreshToken', tokens.refreshToken);\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nexport const getRefreshToken = (): string | null => {\r\n  return localStorage.getItem('refreshToken');\r\n};\r\n\r\nexport const getAuthorizationToken = async (): Promise<string | null> => {\r\n  const authorizationToken = localStorage.getItem('authorizationToken');\r\n  const refreshToken = getRefreshToken();\r\n\r\n  if (!authorizationToken || !refreshToken) {\r\n    return null;\r\n  }\r\n\r\n  if (isJwtExpired(authorizationToken) && !isRefreshing) {\r\n    isRefreshing = true;\r\n\r\n    const newTokens = await refresh({\r\n      authorizationToken,\r\n      refreshToken,\r\n    });\r\n\r\n    setTokens(newTokens);\r\n    isRefreshing = false;\r\n\r\n    return newTokens.authorizationToken;\r\n  }\r\n\r\n  return authorizationToken;\r\n};\r\n","import { AnyAction, Dispatch } from 'redux';\r\nimport { getUser } from '../api/user';\r\nimport { getRefreshToken } from '../tokenHandler';\r\nimport { User, State } from '../types';\r\n\r\nenum ActionTypes {\r\n  SetUser = 'user/set',\r\n}\r\n\r\nexport const userActions = {\r\n  setUser: (user: User | null): AnyAction => ({\r\n    type: ActionTypes.SetUser,\r\n    value: user,\r\n  }),\r\n\r\n  loadUser: () => async (dispatch: Dispatch<AnyAction>) => {\r\n    if (getRefreshToken()) {\r\n      const user = await getUser();\r\n\r\n      dispatch(userActions.setUser(user));\r\n    } else {\r\n      dispatch(userActions.setUser(null));\r\n    }\r\n  },\r\n};\r\n\r\nexport const userSelectors = {\r\n  getUser: (state: State): User | null => state.user,\r\n};\r\n\r\nexport const userReducer = (state: User | null = null, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SetUser:\r\n      return action.value ? { ...action.value } : null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { getAuthorizationToken } from '../tokenHandler';\r\nimport { request as baseRequest } from './base';\r\n\r\nexport const getAuthorizationOptions = async (options?: RequestInit)\r\n: Promise<RequestInit | undefined> => {\r\n  const token = await getAuthorizationToken();\r\n\r\n  if (!token) {\r\n    return options;\r\n  }\r\n\r\n  if (options) {\r\n    return {\r\n      ...options,\r\n      headers: {\r\n        ...options.headers,\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n};\r\n\r\nexport const request = async <T>(url: string, options?: RequestInit): Promise<T> => {\r\n  const newOptions = await getAuthorizationOptions(options);\r\n\r\n  return baseRequest(url, newOptions);\r\n};\r\n","import { Language } from '../types';\r\nimport { adminApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const getLanguages = async (): Promise<Language[]> => {\r\n  return request(`${adminApi}/api/Languages`);\r\n};\r\n","import { Subject } from '../types';\r\nimport { adminApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const getSubjects = async (): Promise<Subject[]> => {\r\n  return request(`${adminApi}/api/Subjects`);\r\n};\r\n","export const passwordTest = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\nexport const emailTest = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n","import {\r\n  LanguagePair,\r\n  PersonalInfo,\r\n  TranslatorInfo,\r\n  User,\r\n  UserProjects,\r\n} from '../types';\r\nimport { adminApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const getUser = (): Promise<User> => {\r\n  return request(`${adminApi}/api/Users`);\r\n};\r\n\r\nexport const getProjectsInfo = (): Promise<UserProjects> => {\r\n  return request(`${adminApi}/api/Users/projects-info`);\r\n};\r\n\r\nexport const getPersonalInfo = (): Promise<PersonalInfo> => {\r\n  return request(`${adminApi}/api/Users/personal-info`);\r\n};\r\n\r\nexport const updateName = (firstname: string, lastname: string): Promise<User> => {\r\n  return request(`${adminApi}/api/Users/name`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      firstname,\r\n      lastname,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const updatePersonalInfo = (website: string, company: string): Promise<PersonalInfo> => {\r\n  return request(`${adminApi}/api/Users/personal-info`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      website,\r\n      company,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const updateEmail = (email: string): Promise<User> => {\r\n  return request(`${adminApi}/api/Users/email`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const updatePassword = (oldPassword: string, newPassword: string): Promise<void> => {\r\n  return request(`${adminApi}/api/Users/password`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      oldPassword,\r\n      newPassword,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const getTranslatorInfo = (): Promise<TranslatorInfo> => {\r\n  return request(`${adminApi}/api/Users/translator-info`);\r\n};\r\n\r\nexport const updateTranslatorInfo = (\r\n  subjectIds: number[],\r\n  languagesPairs: LanguagePair[],\r\n): Promise<TranslatorInfo> => {\r\n  return request(`${adminApi}/api/Users/translator-info`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      subjectIds,\r\n      languagesPairs,\r\n    }),\r\n  });\r\n};\r\n","import { AnyAction } from 'redux';\r\nimport { Language, State } from '../types';\r\n\r\nenum ActionTypes {\r\n  SetLanguages = 'languages/set',\r\n}\r\n\r\nexport const languagesActions = {\r\n  setLanguages: (languages: Language[]): AnyAction => ({\r\n    type: ActionTypes.SetLanguages,\r\n    value: languages,\r\n  }),\r\n};\r\n\r\nexport const languagesSelectors = {\r\n  getLanguages: (state: State): Language[] => state.languages,\r\n};\r\n\r\nexport const languagesReducer = (state: Language[] = [], action: AnyAction) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SetLanguages:\r\n      return [...action.value];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { signIn } from '../../api/authorization';\r\nimport { emailTest, passwordTest } from '../../RegExps';\r\nimport { userActions } from '../../store/user';\r\nimport { setTokens } from '../../tokenHandler';\r\nimport './Authorization.scss';\r\nimport { getUser } from '../../api/user';\r\n\r\nexport const SignIn: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [hasPasswordError, setPasswordError] = useState(false);\r\n  const [hasEmailError, setEmailError] = useState(false);\r\n\r\n  const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setEmailError(false);\r\n    setEmail(value);\r\n  };\r\n\r\n  const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setPasswordError(false);\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (hasEmailError || hasPasswordError) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const tokens = await signIn(email, password);\r\n\r\n      setTokens(tokens);\r\n\r\n      const user = await getUser();\r\n\r\n      dispatch(userActions.setUser(user));\r\n      navigate('/profile');\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    if (!emailTest.test(email)) {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (!passwordTest.test(password)) {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authorization\">\r\n      <h1\r\n        className=\"title has-text-white has-text-weight-light is-size-1 mb-6\"\r\n      >\r\n        Sign in to\r\n        <Link to=\"/\" className=\"has-text-primary-dark\"> Wordsly</Link>\r\n      </h1>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"authorization__form mb-3\"\r\n      >\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={handleEmail}\r\n            onBlur={validateEmail}\r\n            className={classNames('input is-rounded has-text-weight-light is-medium', { 'is-danger': hasEmailError })}\r\n          />\r\n          {hasEmailError && (\r\n            <p className=\"authorization__error help is-danger\">Please, enter a valid email</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={handlePassword}\r\n            onBlur={validatePassword}\r\n            className={classNames('input is-rounded has-text-weight-light is-medium', { 'is-danger': hasPasswordError })}\r\n          />\r\n          {hasPasswordError && (\r\n            <p className=\"authorization__error help is-danger\">\r\n              Password must contain at least 8 characters, one digit,\r\n              one uppercase and lowercase letter\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"authorization__button button is-fullwidth is-rounded is-medium\"\r\n        >\r\n          Sign in\r\n        </button>\r\n      </form>\r\n\r\n      <p className=\"has-text-white has-text-weight-light is-size-5\">\r\n        Don&apos;t have an account yet?&nbsp;\r\n        <Link\r\n          to=\"/sign-up\"\r\n          className=\"has-text-primary-dark\"\r\n        >\r\n          Sign up\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { signUp } from '../../api/authorization';\r\nimport { emailTest, passwordTest } from '../../RegExps';\r\nimport { userActions } from '../../store/user';\r\nimport { setTokens } from '../../tokenHandler';\r\nimport './Authorization.scss';\r\nimport { getUser } from '../../api/user';\r\n\r\nexport const SignUp: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [accountType, setAccountType] = useState('0');\r\n  const [hasPasswordError, setPasswordError] = useState(false);\r\n  const [hasEmailError, setEmailError] = useState(false);\r\n\r\n  const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setEmailError(false);\r\n    setEmail(value);\r\n  };\r\n\r\n  const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setPasswordError(false);\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleFirstname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setFirstname(value);\r\n  };\r\n\r\n  const handleLastname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setLastname(value);\r\n  };\r\n\r\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setAccountType(value);\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (hasEmailError || hasPasswordError || accountType === '0') {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const tokens = await signUp({\r\n        email,\r\n        password,\r\n        firstname,\r\n        lastname,\r\n        accountType: +accountType,\r\n      });\r\n\r\n      setTokens(tokens);\r\n\r\n      const user = await getUser();\r\n\r\n      dispatch(userActions.setUser(user));\r\n      navigate('/profile');\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    if (!emailTest.test(email)) {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (!passwordTest.test(password)) {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authorization\">\r\n      <h1\r\n        className=\"title has-text-white has-text-weight-light is-size-1 mb-6\"\r\n      >\r\n        Sign up to\r\n        <Link to=\"/\" className=\"has-text-primary-dark\"> Wordsly</Link>\r\n      </h1>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"authorization__form mb-3\"\r\n      >\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Firstname\"\r\n            required\r\n            value={firstname}\r\n            onChange={handleFirstname}\r\n            className=\"input is-rounded has-text-weight-light is-medium\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Lastname\"\r\n            required\r\n            value={lastname}\r\n            onChange={handleLastname}\r\n            className=\"input is-rounded has-text-weight-light is-medium\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={handleEmail}\r\n            onBlur={validateEmail}\r\n            className={classNames('input is-rounded has-text-weight-light is-medium', { 'is-danger': hasEmailError })}\r\n          />\r\n          {hasEmailError && (\r\n            <p className=\"authorization__error help is-danger\">Please, enter a valid email</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={handlePassword}\r\n            onBlur={validatePassword}\r\n            className={classNames('input is-rounded has-text-weight-light is-medium', { 'is-danger': hasPasswordError })}\r\n          />\r\n          {hasPasswordError && (\r\n            <p className=\"authorization__error help is-danger\">\r\n              Password must contain at least 8 characters, one digit,\r\n              one uppercase and lowercase letter\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className={classNames('select is-rounded is-fullwidth is-medium', { authorization__placeholder: accountType === '0' })}>\r\n            <select\r\n              value={accountType}\r\n              onChange={handleSelect}\r\n              className=\"has-text-weight-light\"\r\n            >\r\n              <option value=\"0\" disabled>Choose your account type</option>\r\n              <option value=\"1\">Customer</option>\r\n              <option value=\"2\">Translator</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"authorization__button button is-fullwidth is-rounded is-medium\"\r\n        >\r\n          Sign up\r\n        </button>\r\n      </form>\r\n\r\n      <p className=\"has-text-white has-text-weight-light is-size-5\">\r\n        Already have an account?&nbsp;\r\n        <Link\r\n          to=\"/sign-in\"\r\n          className=\"has-text-primary-dark\"\r\n        >\r\n          Sign in\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  PaginationResult,\r\n  ProjectInfo,\r\n  StringComment,\r\n  StringModel,\r\n  Project,\r\n} from '../types';\r\nimport { ProjectStatus } from '../enums';\r\nimport { translatorApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const getProjectStrings = (\r\n  id: string,\r\n  lang: string,\r\n  page: number,\r\n) : Promise<PaginationResult<StringModel>> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}/${page}`);\r\n};\r\n\r\nexport const getProjectString = (\r\n  id: string,\r\n  lang: number,\r\n  stringId: number,\r\n) : Promise<StringModel> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}/strings/${stringId}`);\r\n};\r\n\r\nexport const getProjectInfo = (\r\n  id: string,\r\n  lang: string,\r\n) : Promise<ProjectInfo> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}`);\r\n};\r\n\r\nexport const getComments = (stringId: number, lang: number) : Promise<StringComment[]> => {\r\n  return request(`${translatorApi}/api/Projects/${stringId}/${lang}/comments`);\r\n};\r\n\r\nexport const sendComment = (stringId: number, lang: number, text: string) : Promise<void> => {\r\n  return request(`${translatorApi}/api/Projects/${stringId}/${lang}/comments`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      text,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const sendProjectString = (\r\n  id: string,\r\n  lang: number,\r\n  stringId: number,\r\n  text: string,\r\n) : Promise<void> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}/strings/${stringId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      text,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const approveProject = (id: number, lang: number) : Promise<void> => {\r\n  return request(`${translatorApi}/api/Projects/${id}/${lang}/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n};\r\n\r\nexport const getProjects = (projectStatus: ProjectStatus): Promise<Project[]> => {\r\n  return request(`${translatorApi}/api/Projects?status=${projectStatus}`);\r\n};\r\n\r\nexport const getAvailableProjects = (\r\n  subjectId: number,\r\n  sourceLangId: number,\r\n  targetLangId: number,\r\n): Promise<Project[]> => {\r\n  return request(`${translatorApi}/api/Projects/active?subjectId=${subjectId}&sourceLangId=${sourceLangId}&targetLangId=${targetLangId}`);\r\n};\r\n\r\nexport const joinProject = (projectId: number, targetLangId: number): Promise<void> => {\r\n  return request(`${translatorApi}/api/Projects/${projectId}/${targetLangId}/join`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n};\r\n","import { AnyAction } from 'redux';\r\nimport { State, Subject } from '../types';\r\n\r\nenum ActionTypes {\r\n  SetSubjects = 'subjects/set',\r\n}\r\n\r\nexport const subjectsActions = {\r\n  setSubjects: (subjects: Subject[]): AnyAction => ({\r\n    type: ActionTypes.SetSubjects,\r\n    value: subjects,\r\n  }),\r\n};\r\n\r\nexport const subjectsSelectors = {\r\n  getSubjects: (state: State): Subject[] => state.subjects,\r\n};\r\n\r\nexport const subjectsReducer = (state: Subject[] = [], action: AnyAction) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SetSubjects:\r\n      return [...action.value];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum AccountType {\r\n  User = 1,\r\n  Translator = 2,\r\n  Admin = 3,\r\n}\r\n\r\nexport enum ProjectStatus {\r\n  Unpaid,\r\n  Active,\r\n  Completed,\r\n}\r\n","import classNames from 'classnames';\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useMatch } from 'react-router-dom';\r\nimport { AccountType } from '../../enums';\r\nimport { userActions, userSelectors } from '../../store/user';\r\nimport { clearLocalStorage } from '../../tokenHandler';\r\nimport './Menu.scss';\r\n\r\nexport const Menu: React.FC = () => {\r\n  const match = useMatch('/');\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userSelectors.getUser);\r\n  const [isActive, setActive] = useState(false);\r\n  const node = useRef<HTMLDivElement>(null);\r\n\r\n  const clickOutside = useCallback((e: MouseEvent) => {\r\n    if (!node.current?.contains(e.target as Node)) {\r\n      setActive(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', clickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', clickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleLogOut = () => {\r\n    clearLocalStorage();\r\n    dispatch(userActions.setUser(null));\r\n\r\n    if (match) {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      location.reload();\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={node}\r\n      className={classNames('menu dropdown is-right', { 'is-active': isActive })}\r\n    >\r\n      <div className=\"dropdown-trigger\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"menu__button is-size-4\"\r\n          onClick={() => setActive(!isActive)}\r\n        >\r\n          {`${user?.firstname} ${user?.lastname}`}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"menu__box dropdown-menu\">\r\n        {user.accountType === AccountType.User && (\r\n          <div className=\"menu__content dropdown-content\">\r\n            <Link to=\"/profile\" className=\"menu__item dropdown-item\">\r\n              My profile\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/projects/my\" className=\"menu__item dropdown-item\">\r\n              My projects\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/quote\" className=\"menu__item dropdown-item\">\r\n              New project\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link\r\n              to=\"/\"\r\n              onClick={handleLogOut}\r\n              className=\"menu__item dropdown-item\"\r\n            >\r\n              Log out\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {user.accountType === AccountType.Translator && (\r\n          <div className=\"menu__content dropdown-content\">\r\n            <Link to=\"/profile\" className=\"menu__item dropdown-item\">\r\n              My profile\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/projects/my\" className=\"menu__item dropdown-item\">\r\n              My projects\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link to=\"/projects\" className=\"menu__item dropdown-item\">\r\n              Available projects\r\n            </Link>\r\n            <hr className=\"dropdown-divider\" />\r\n\r\n            <Link\r\n              to=\"/\"\r\n              className=\"menu__item dropdown-item\"\r\n              onClick={handleLogOut}\r\n            >\r\n              Log out\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRefreshToken } from '../../tokenHandler';\r\nimport { Menu } from '../Menu/Menu';\r\nimport './Header.scss';\r\n\r\nexport const Header: React.FC = () => {\r\n  const refreshToken = getRefreshToken();\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <Link\r\n        to=\"/\"\r\n        className=\"header__logo has-text-primary-dark has-text-weight-light is-size-2\"\r\n      >\r\n        Wordsly\r\n      </Link>\r\n\r\n      {refreshToken ? (\r\n        <Menu />\r\n      ) : (\r\n        <Link\r\n          to=\"/sign-in\"\r\n          className=\"header__sign-in is-size-4\"\r\n        >\r\n          Sign in\r\n        </Link>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { getAvailableProjects, joinProject } from '../../api/projects';\r\nimport { getTranslatorInfo } from '../../api/user';\r\nimport { languagesSelectors } from '../../store/language';\r\nimport { subjectsSelectors } from '../../store/subject';\r\nimport {\r\n  Language,\r\n  Project,\r\n  Subject,\r\n  TranslatorInfo,\r\n} from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport './AvailableProjects.scss';\r\n\r\nexport const AvailableProjects: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const handleError = useErrorHandler();\r\n\r\n  const subjects = useSelector(subjectsSelectors.getSubjects);\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n\r\n  const [selectedSubject, setSelectedSubject] = useState(0);\r\n  const [selectedSourceLang, setSourceLang] = useState(0);\r\n  const [selectedTargetLang, setTargetLang] = useState(0);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [filteredSubjects, setFilteredSubjects] = useState<Subject[]>([]);\r\n  const [filteredSourceLanguages, setFilteredSourceLanguages] = useState<Language[]>([]);\r\n  const [translatorInfo, setTranslatorInfo] = useState<TranslatorInfo | null>(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getAvailableProjects(\r\n          selectedSubject,\r\n          selectedSourceLang,\r\n          selectedTargetLang,\r\n        );\r\n\r\n        setProjects(newProjects);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [selectedSubject, selectedSourceLang, selectedTargetLang]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newTranslatorInfo = await getTranslatorInfo();\r\n\r\n        setTranslatorInfo(newTranslatorInfo);\r\n\r\n        const newSubjects = subjects\r\n          .filter(subject => newTranslatorInfo.subjectIds.includes(subject.id));\r\n\r\n        setFilteredSubjects(newSubjects);\r\n\r\n        const newSourceLang = languages\r\n          .filter(language => (\r\n            newTranslatorInfo.languagesPairs\r\n              .some(translatorLang => translatorLang.sourceLanguageId === language.id)\r\n          ));\r\n\r\n        setFilteredSourceLanguages(newSourceLang);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [subjects, languages]);\r\n\r\n  const filteredTargetLanguages = useMemo(() => {\r\n    if (!translatorInfo) {\r\n      return [];\r\n    }\r\n\r\n    if (selectedSourceLang) {\r\n      return languages\r\n        .filter(language => (\r\n          translatorInfo.languagesPairs\r\n            .some(translatorLang => translatorLang.outputLanguageId === language.id\r\n              && translatorLang.sourceLanguageId === selectedSourceLang)\r\n        ));\r\n    }\r\n\r\n    return languages\r\n      .filter(language => (\r\n        translatorInfo.languagesPairs\r\n          .some(translatorLang => translatorLang.outputLanguageId === language.id)\r\n      ));\r\n  }, [selectedSourceLang, translatorInfo]);\r\n\r\n  const handleSubject = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setSelectedSubject(value);\r\n  };\r\n\r\n  const handleSourceLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setSourceLang(value);\r\n  };\r\n\r\n  const handleTargetLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setTargetLang(value);\r\n  };\r\n\r\n  const handleChoose = async (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    projectId: number,\r\n    targetLangId: number,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    try {\r\n      await joinProject(projectId, targetLangId);\r\n\r\n      navigate(`/project/${projectId}/${targetLangId}`);\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"projects__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"projects__filters\">\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={selectedSubject}\r\n            onChange={handleSubject}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={0}>All subjects</option>\r\n            {filteredSubjects.map(subject => (\r\n              <option\r\n                key={subject.id}\r\n                value={subject.id}\r\n              >\r\n                {subject.subject}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={selectedSourceLang}\r\n            onChange={handleSourceLanguage}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={0}>All source languages</option>\r\n            {filteredSourceLanguages.map(language => (\r\n              <option\r\n                key={language.id}\r\n                value={language.id}\r\n              >\r\n                {language.language}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"select is-rounded is-medium\">\r\n          <select\r\n            value={selectedTargetLang}\r\n            onChange={handleTargetLanguage}\r\n            className=\"projects__select has-text-weight-light\"\r\n          >\r\n            <option value={0}>All target languages</option>\r\n            {filteredTargetLanguages.map(language => (\r\n              <option\r\n                key={language.id}\r\n                value={language.id}\r\n              >\r\n                {language.language}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>File name</th>\r\n            <th>Source language</th>\r\n            <th>Target language</th>\r\n            <th>Subject</th>\r\n            <th>Words count</th>\r\n            <th>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map(project => {\r\n            return (\r\n              <tr key={project.id + project.targetLanguage.id}>\r\n                <td>{project.fileName}</td>\r\n                <td>{project.sourceLanguage.language}</td>\r\n                <td>{project.targetLanguage.language}</td>\r\n                <td>{project.subject.subject}</td>\r\n                <td>{project.wordsCount}</td>\r\n                <td>\r\n                  <a\r\n                    href=\"/\"\r\n                    className=\"projects__choose\"\r\n                    onClick={(event) => handleChoose(event, project.id, project.targetLanguage.id)}\r\n                  >\r\n                    Choose a project\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/home-background.48123240.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header } from '../Header/Header';\r\nimport homeBackground from '../../images/home-background.png';\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <main>\r\n        <section className=\"home\">\r\n          <h2 className=\"home__title has-text-weight-light\">Translate Better and Faster</h2>\r\n\r\n          <div className=\"columns\">\r\n            <div className=\"home__section column is-half-desktop\">\r\n              <p className=\"home__text has-text-weight-light\">\r\n                Easily translate your documents and digital content\r\n                with quality and speed in over 50 languages.\r\n              </p>\r\n\r\n              <Link\r\n                to=\"/quote\"\r\n                className=\"home__button button is-rounded is-medium\"\r\n              >\r\n                Get an instant quote\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <img\r\n            src={homeBackground}\r\n            alt=\"background\"\r\n            className=\"home__background is-hidden-touch\"\r\n          />\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/not-found.ac85270e.png\";","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  HttpTransportType,\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n  LogLevel,\r\n} from '@microsoft/signalr';\r\nimport { useSelector } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport {\r\n  approveProject,\r\n  getComments,\r\n  getProjectInfo,\r\n  getProjectString,\r\n  getProjectStrings,\r\n  sendComment,\r\n  sendProjectString as sendProjectStringTranslation,\r\n} from '../../api/projects';\r\nimport { Header } from '../Header/Header';\r\nimport background from '../../images/not-found.png';\r\nimport { ProjectInfo, StringComment, StringModel } from '../../types';\r\nimport './Project.scss';\r\nimport { commentsHub, stringsHub } from '../../api/apis';\r\nimport { userSelectors } from '../../store/user';\r\nimport { AccountType } from '../../enums';\r\nimport { languagesSelectors } from '../../store/language';\r\n\r\nexport const Project : React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const navigate = useNavigate();\r\n  const user = useSelector(userSelectors.getUser);\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n  const isCustomer = user?.accountType === AccountType.User;\r\n  const { id, lang } = useParams();\r\n  const [page, setPage] = useState(1);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [strings, setStrings] = useState<StringModel[]>([]);\r\n  const [pagesCount, setPagesCount] = useState(0);\r\n  const [selectedStringId, setSelectedStringId] = useState(0);\r\n  const [translation, setTranslation] = useState('');\r\n  const [translationError, setTranslationError] = useState('');\r\n  const [projectInfo, setProjectInfo] = useState<ProjectInfo>();\r\n  const [comments, setComments] = useState<StringComment[]>([]);\r\n  const [comment, setComment] = useState('');\r\n  const [stringsConnection, setStringsConnection] = useState<HubConnection>();\r\n  const [commentsConnection, setCommentsConnection] = useState<HubConnection>();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (id && lang) {\r\n        const newProjectInfo = await getProjectInfo(id, lang);\r\n\r\n        setProjectInfo(newProjectInfo);\r\n      }\r\n    })();\r\n  }, [id, lang]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (id && lang && page) {\r\n        try {\r\n          const newStrings = await getProjectStrings(id, lang, page);\r\n\r\n          setStrings(newStrings.result);\r\n          setPagesCount(newStrings.pagesCount);\r\n        } catch {\r\n          setNotFound(true);\r\n        }\r\n      }\r\n    })();\r\n  }, [id, lang, page]);\r\n\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .configureLogging(LogLevel.Information)\r\n      .withUrl(stringsHub, {\r\n        skipNegotiation: true,\r\n        transport: HttpTransportType.WebSockets,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setStringsConnection(newConnection);\r\n\r\n    const newCommentsConnection = new HubConnectionBuilder()\r\n      .configureLogging(LogLevel.Information)\r\n      .withUrl(commentsHub, {\r\n        skipNegotiation: true,\r\n        transport: HttpTransportType.WebSockets,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setCommentsConnection(newCommentsConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (stringsConnection) {\r\n        await stringsConnection.start();\r\n        stringsConnection.on('loadString', async (stringId: number, langId: number) => {\r\n          if (!id) {\r\n            return;\r\n          }\r\n\r\n          try {\r\n            const str = await getProjectString(id, langId, stringId);\r\n\r\n            setStrings(oldStrings => oldStrings.map(s => {\r\n              if (s.id === str.id) {\r\n                return str;\r\n              }\r\n\r\n              return s;\r\n            }));\r\n          } catch (error) {\r\n            handleError(error);\r\n          }\r\n        });\r\n      }\r\n    })();\r\n  }, [stringsConnection]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (commentsConnection) {\r\n        await commentsConnection.start();\r\n        commentsConnection.on('loadComments', async (stringId: number, langId: number) => {\r\n          try {\r\n            const newComments = await getComments(stringId, langId);\r\n\r\n            setComments(newComments);\r\n          } catch (error) {\r\n            handleError(error);\r\n          }\r\n        });\r\n      }\r\n    })();\r\n  }, [commentsConnection]);\r\n\r\n  useEffect(() => {\r\n    if (commentsConnection?.state === HubConnectionState.Connected && selectedStringId && lang) {\r\n      commentsConnection.invoke('Join', selectedStringId, +lang);\r\n    }\r\n\r\n    return () => {\r\n      if (commentsConnection?.state === HubConnectionState.Connected && selectedStringId && lang) {\r\n        commentsConnection.invoke('Leave', selectedStringId, +lang);\r\n      }\r\n    };\r\n  }, [commentsConnection?.state, selectedStringId]);\r\n\r\n  useEffect(() => {\r\n    if (stringsConnection?.state === HubConnectionState.Connected && lang) {\r\n      strings.forEach((s) => {\r\n        stringsConnection.invoke('Join', s.id, +lang);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (stringsConnection?.state === HubConnectionState.Connected && lang) {\r\n        strings.forEach((s) => {\r\n          stringsConnection.invoke('Leave', s.id, +lang);\r\n        });\r\n      }\r\n    };\r\n  }, [stringsConnection?.state, strings.map(s => s.id)]);\r\n\r\n  useEffect(() => {\r\n    const str = strings.find(s => s.id === selectedStringId);\r\n\r\n    if (str) {\r\n      setTranslation(str.translatedString);\r\n    }\r\n\r\n    if (\r\n      !isCustomer\r\n      && stringsConnection?.state === HubConnectionState.Connected\r\n      && id\r\n      && lang\r\n      && selectedStringId\r\n    ) {\r\n      stringsConnection.invoke('StartEdit', selectedStringId, +lang);\r\n    }\r\n\r\n    return () => {\r\n      if (\r\n        !isCustomer\r\n        && stringsConnection?.state === HubConnectionState.Connected\r\n        && id\r\n        && lang\r\n        && selectedStringId\r\n      ) {\r\n        stringsConnection.invoke('LeaveEdit', selectedStringId, +lang);\r\n      }\r\n    };\r\n  }, [stringsConnection?.state, selectedStringId]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (selectedStringId && lang) {\r\n        try {\r\n          const newComments = await getComments(selectedStringId, +lang);\r\n\r\n          setComments(newComments);\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      }\r\n    })();\r\n  }, [selectedStringId, lang]);\r\n\r\n  const handleSendComment = async (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === 'Enter' && comment && lang) {\r\n      try {\r\n        await sendComment(selectedStringId, +lang, comment);\r\n        setComment('');\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectedString = (stringId: number) => {\r\n    if (stringId !== selectedStringId) {\r\n      setSelectedStringId(stringId);\r\n      setTranslation('');\r\n\r\n      if (translationError) {\r\n        setTranslationError('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePage = (newPage: number) => {\r\n    setPage(newPage);\r\n    handleSelectedString(0);\r\n  };\r\n\r\n  const handleTranslation = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setTranslation(event.target.value);\r\n\r\n    if (translationError) {\r\n      setTranslationError('');\r\n    }\r\n  };\r\n\r\n  const handleSendTranslation = async (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (event.key === 'Enter' && !event.shiftKey && id && lang && selectedStringId) {\r\n      event.nativeEvent.preventDefault();\r\n      try {\r\n        await sendProjectStringTranslation(\r\n          id,\r\n          +lang,\r\n          selectedStringId,\r\n          translation,\r\n        );\r\n\r\n        setSelectedStringId(0);\r\n        // eslint-disable-next-line\r\n      } catch (e: any) {\r\n        setTranslationError(e.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleApprove = async () => {\r\n    if (id && lang) {\r\n      try {\r\n        await approveProject(+id, +lang);\r\n        navigate('/projects/my');\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const language = useMemo(() => {\r\n    if (lang) {\r\n      return languages.find(l => l.id === +lang)?.language || '';\r\n    }\r\n\r\n    return '';\r\n  }, [lang, languages]);\r\n\r\n  if (notFound || !user) {\r\n    return (\r\n      <div>\r\n        <Header />\r\n\r\n        <section className=\"home\">\r\n          <h2 className=\"home__title has-text-weight-light\">The project was not found</h2>\r\n\r\n          <div className=\"columns\">\r\n            <div className=\"home__section column is-half-desktop\">\r\n              <Link\r\n                to=\"/\"\r\n                className=\"home__button button is-rounded is-medium\"\r\n              >\r\n                Go to home page\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <img\r\n            src={background}\r\n            alt=\"background\"\r\n            className=\"home__background is-hidden-touch\"\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div className=\"project__container\">\r\n        <div className=\"project__strings-column\">\r\n          {strings.map(str => (\r\n            // eslint-disable-next-line\r\n            <article\r\n              key={str.id}\r\n              className=\"message\"\r\n              onClick={() => handleSelectedString(str.id)}\r\n            >\r\n              <div\r\n                className={classNames(\r\n                  'project__strings message-body',\r\n                  {\r\n                    'project__selected-string': str.id === selectedStringId,\r\n                  },\r\n                )}\r\n              >\r\n                <p className=\"project__string has-text-white-ter has-text-weight-light\">\r\n                  {str.originalString}\r\n                </p>\r\n\r\n                {/* eslint-disable-next-line */}\r\n                {str.isEditing && !str.translatedString ? (\r\n                  <p className=\"project__string has-text-white-ter\">\r\n                    <span className=\"has-text-primary-dark\">\r\n                      Is translating...\r\n                    </span>\r\n                  </p>\r\n                ) : (!isCustomer && selectedStringId === str.id ? (\r\n                  <div className=\"project__string-control control\">\r\n                    <textarea\r\n                      className={classNames('project__string-entry textarea has-fixed-size', { 'is-danger': !!translationError })}\r\n                      placeholder=\"Please, enter translation and press ENTER\"\r\n                      value={translation}\r\n                      onChange={handleTranslation}\r\n                      onKeyPress={handleSendTranslation}\r\n                    />\r\n                    {translationError && (\r\n                      <p className=\"project__error help is-danger\">\r\n                        {translationError}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"project__string has-text-white-ter\">\r\n                    {str.translatedString || (\r\n                      <span className=\"has-text-primary-dark\">\r\n                        Currently not translated\r\n                      </span>\r\n                    )}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n            </article>\r\n          ))}\r\n          <div className=\"project__pagination\">\r\n            {page > 1 && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handlePage(page - 1)}\r\n                className=\"project__pagination-button button is-small\"\r\n              >\r\n                {'<'}\r\n              </button>\r\n            )}\r\n            <p className=\"project__pagination-page is-size-4 has-text-weight-light has-text-white-ter\">{page}</p>\r\n            {page < pagesCount && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handlePage(page + 1)}\r\n                className=\"project__pagination-button button is-small\"\r\n              >\r\n                {'>'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"project__info-column\">\r\n          <article className=\"message\">\r\n            <div className=\"message-header\">\r\n              <span>{`${projectInfo?.projectName} To ${language}`}</span>\r\n            </div>\r\n            {!!projectInfo?.preferences && (\r\n              <div className=\"message-body has-text-white-ter\">\r\n                {projectInfo?.preferences}\r\n              </div>\r\n            )}\r\n            {user.accountType !== AccountType.Translator && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"project__info-footer message-header\"\r\n                onClick={handleApprove}\r\n              >\r\n                Approve project\r\n              </button>\r\n            )}\r\n          </article>\r\n          {!!selectedStringId && (\r\n            <article className=\"message\">\r\n              <div className=\"message-header\">\r\n                {comments.length ? 'Comments' : 'No comments'}\r\n              </div>\r\n              <div className=\"message-body\">\r\n                {comments.map(c => (\r\n                  <article\r\n                    key={c.id}\r\n                    className={classNames(\r\n                      'message is-small',\r\n                      {\r\n                        'is-primary': c.role === AccountType.User,\r\n                        'is-danger': c.role === AccountType.Admin,\r\n                        'is-link': c.role === AccountType.Translator,\r\n                      },\r\n                    )}\r\n                  >\r\n                    <div className=\"message-body\">\r\n                      <span>{`${c.userName}: `}</span>\r\n                      {c.comment}\r\n                    </div>\r\n                  </article>\r\n                ))}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"comment\"\r\n                  className=\"input\"\r\n                  value={comment}\r\n                  onChange={(event) => setComment(event.target.value)}\r\n                  onKeyPress={handleSendComment}\r\n                />\r\n              </div>\r\n            </article>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { clientApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const initCookies = async () : Promise<string> => {\r\n  let quote = sessionStorage.getItem('quote');\r\n\r\n  if (quote) {\r\n    return quote;\r\n  }\r\n\r\n  quote = await request(`${clientApi}/api/Quota/id`);\r\n  sessionStorage.setItem('quote', quote || '');\r\n\r\n  return quote || '';\r\n};\r\n\r\nexport const sendFileForTranslating = (file: File, quoteId: string) : Promise<void> => {\r\n  const body = new FormData();\r\n\r\n  body.append('file', file);\r\n  body.append('quotaId', quoteId);\r\n\r\n  return request(`${clientApi}/api/Quota/source-file`, {\r\n    method: 'POST',\r\n    body,\r\n  });\r\n};\r\n\r\nexport const saveProject = (\r\n  quoteId: string,\r\n  preferences: string | undefined | null,\r\n) : Promise<void> => {\r\n  return request(`${clientApi}/api/Quota/create-project`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      quoteId,\r\n      preferences,\r\n    }),\r\n  });\r\n};\r\n","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport {\r\n  HttpTransportType,\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n  LogLevel,\r\n} from '@microsoft/signalr';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { Header } from '../Header/Header';\r\nimport './Quote.scss';\r\nimport { quotaHub } from '../../api/apis';\r\nimport { initCookies, saveProject, sendFileForTranslating } from '../../api/quota';\r\nimport { languagesSelectors } from '../../store/language';\r\nimport { Quota } from '../../types';\r\nimport { subjectsSelectors } from '../../store/subject';\r\nimport { getRefreshToken } from '../../tokenHandler';\r\n\r\nexport const Quote: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const handleError = useErrorHandler();\r\n\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n  const subjects = useSelector(subjectsSelectors.getSubjects);\r\n\r\n  const [quote, setQuote] = useState<Quota>();\r\n  const [connection, setConnection] = useState<HubConnection>();\r\n  const [quoteId, setQuoteId] = useState('');\r\n  const [subject, setSubject] = useState('0');\r\n  const [sourceLanguage, setSourceLanguage] = useState('0');\r\n  const [preferences, setPreferences] = useState('');\r\n\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .configureLogging(LogLevel.Information)\r\n      .withUrl(quotaHub, {\r\n        skipNegotiation: true,\r\n        transport: HttpTransportType.WebSockets,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n\r\n    (async () => {\r\n      const newQuoteId = await initCookies();\r\n\r\n      setQuoteId(newQuoteId);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (connection && quoteId) {\r\n        await connection.start();\r\n        connection.on('updateQuota', (quota: Quota) => {\r\n          setQuote(quota);\r\n          setSourceLanguage(quota.sourceLanguage?.languageCode);\r\n          setSubject(quota.subject?.id.toString());\r\n        });\r\n        await connection.invoke('Join', quoteId);\r\n      }\r\n    })();\r\n  }, [connection, quoteId]);\r\n\r\n  const handleFile = async (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { files } = event.target;\r\n\r\n    if (files) {\r\n      const file = files[0];\r\n\r\n      try {\r\n        await sendFileForTranslating(file, quoteId);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteLanguage = async (id: number) => {\r\n    if (quote?.targetLanguages?.length) {\r\n      await connection?.invoke(\r\n        'SendTargetLanguageCodes',\r\n        quoteId,\r\n        quote.targetLanguages\r\n          .filter(lang => lang.id !== id)\r\n          .map(lang => lang.languageCode),\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleOutputLanguage = async (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n\r\n    await connection?.invoke(\r\n      'SendTargetLanguageCodes',\r\n      quoteId,\r\n      quote?.targetLanguages?.length\r\n        ? [...quote.targetLanguages.map(l => l.languageCode), value]\r\n        : [value],\r\n    );\r\n  };\r\n\r\n  const handleSubject = async (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setSubject(value);\r\n\r\n    if (connection?.state === HubConnectionState.Connected) {\r\n      await connection.invoke(\r\n        'SendSubjectId',\r\n        quoteId,\r\n        +value,\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSourceLanguage = async (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setSourceLanguage(value);\r\n\r\n    if (connection?.state === HubConnectionState.Connected) {\r\n      await connection.invoke(\r\n        'SendSourceLanguageCode',\r\n        quoteId,\r\n        value,\r\n        false,\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (quote?.fileName\r\n        && quote.sourceLanguage\r\n        && quote.targetLanguages.length\r\n        && quote.subject\r\n        && quote.price) {\r\n      try {\r\n        if (getRefreshToken()) {\r\n          try {\r\n            await saveProject(quoteId, preferences);\r\n            sessionStorage.removeItem('quote');\r\n            navigate('/projects/my');\r\n          } catch (error) {\r\n            handleError(error);\r\n          }\r\n        } else {\r\n          sessionStorage.setItem('preferences', preferences);\r\n          navigate('/sign-in');\r\n        }\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"quote__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"quote__title\">\r\n        <span className=\"has-text-white has-text-weight-light is-size-4\">\r\n          Please give us a description of what you need by completing the following:\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"quote__container\">\r\n        <div className=\"quote__inputs\">\r\n          <span className=\"has-text-white has-text-weight-light is-size-4\">\r\n            File for translation:\r\n            <div className=\"quote__input file has-name is-fullwidth is-medium is-right\">\r\n              <label htmlFor=\"file\" className=\"file-label\">\r\n                <input\r\n                  id=\"file\"\r\n                  onChange={handleFile}\r\n                  className=\"file-input is-rounded\"\r\n                  type=\"file\"\r\n                  name=\"resume\"\r\n                  accept=\".rtf, .doc, .docx, .ppt, .pptx, .xls, .xlsx, .html, .xml, .txt, .srt, .sbv, .odt, .ods, .odp\"\r\n                />\r\n\r\n                <span className=\"file-cta\">\r\n                  <span className=\"file-label\">\r\n                    Choose a file…\r\n                  </span>\r\n                </span>\r\n\r\n                <span className=\"file-name has-text-white\">\r\n                  {quote?.fileName}\r\n                </span>\r\n              </label>\r\n            </div>\r\n          </span>\r\n\r\n          <label\r\n            htmlFor=\"subject\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Subject:\r\n            <div className=\"quote__input select is-rounded is-medium is-fullwidth\">\r\n              <select\r\n                id=\"subject\"\r\n                value={subject}\r\n                onChange={handleSubject}\r\n                className=\"has-text-weight-light\"\r\n              >\r\n                <option value={0} disabled>Choose  subject(s)</option>\r\n                {subjects.map(s => (\r\n                  <option\r\n                    key={s.id}\r\n                    value={s.id}\r\n                  >\r\n                    {s.subject}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"sourceLanguage\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Translate from:\r\n\r\n            <div className=\"control\">\r\n              <div className=\"quote__input select is-fullwidth is-rounded is-medium\">\r\n                <select\r\n                  id=\"sourceLanguage\"\r\n                  value={sourceLanguage}\r\n                  onChange={handleSourceLanguage}\r\n                  className=\"has-text-weight-light\"\r\n                >\r\n                  <option value={0} disabled>Choose language(s)</option>\r\n                  {languages.map(language => (\r\n                    <option\r\n                      key={language.id}\r\n                      value={language.languageCode}\r\n                    >\r\n                      {language.language}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"outputLanguage\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Translate to:\r\n            <div className=\"control\">\r\n              <div className=\"quote__input select is-rounded is-fullwidth is-medium\">\r\n                <select\r\n                  id=\"outputLanguage\"\r\n                  value={0}\r\n                  onChange={handleOutputLanguage}\r\n                  className=\"has-text-weight-light\"\r\n                >\r\n                  <option value={0} disabled>Choose language(s)</option>\r\n                  {languages\r\n                    .filter(language => language.languageCode !== sourceLanguage)\r\n                    .map(language => (\r\n                      <option\r\n                        key={language.id}\r\n                        value={language.languageCode}\r\n                      >\r\n                        {language.language}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </label>\r\n\r\n          <div className=\"control\">\r\n            <textarea\r\n              className=\"quote__preferences textarea has-fixed-size is-fullwidth is-medium\"\r\n              placeholder=\"Please, enter your preferences\"\r\n              value={preferences}\r\n              onChange={event => setPreferences(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"quote__info\">\r\n          <div className=\"quote__card card\">\r\n            <header className=\"card-header\">\r\n              <h1 className=\"quote__info-header card-header-title\">\r\n                Order Details\r\n              </h1>\r\n            </header>\r\n            <section className=\"card-content\">\r\n              <div className=\"content\">\r\n                <p>\r\n                  {`File name: ${quote?.fileName || ''}`}\r\n                </p>\r\n                <p>\r\n                  {`Subject field: ${quote?.subject?.subject || ''}`}\r\n                </p>\r\n                <p>\r\n                  {`Transalte from: ${quote?.sourceLanguage?.language || ''}`}\r\n                </p>\r\n                <p className=\"quote__info-langs\">\r\n                  {'Translate to: '}\r\n                  {!!quote?.targetLanguages?.length && (\r\n                    quote.targetLanguages.map(({ id }) => {\r\n                      const selectedLanguage = languages.find(language => language.id === id);\r\n\r\n                      return (\r\n                        <span key={id} className=\"tag is-light is-rounded\">\r\n                          {selectedLanguage?.language}\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"delete is-small\"\r\n                            onClick={() => handleDeleteLanguage(id)}\r\n                          >\r\n                          </button>\r\n                        </span>\r\n                      );\r\n                    })\r\n                  )}\r\n                </p>\r\n                <div className=\"quote__info-row\">\r\n                  <p className=\"quote__info-words\">\r\n                    {`Words count: ${quote?.wordsCount || (quote?.isCounting ? 'counting' : '')}`}\r\n                  </p>\r\n                  <p>\r\n                    {`Price ($): ${quote?.price ? quote.price / 100 : ''}`}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <footer className=\"card-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"quote__info-button card-header-title card-footer-item\"\r\n                onClick={handleSave}\r\n              >\r\n                Save\r\n              </button>\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport {\r\n  getProjectsInfo,\r\n  getTranslatorInfo,\r\n  updateEmail,\r\n  updateName,\r\n  updatePassword,\r\n  updateTranslatorInfo,\r\n} from '../../api/user';\r\nimport { emailTest, passwordTest } from '../../RegExps';\r\nimport { languagesSelectors } from '../../store/language';\r\nimport { subjectsSelectors } from '../../store/subject';\r\nimport { userActions, userSelectors } from '../../store/user';\r\nimport { LanguagePair, TranslatorInfo, UserProjects } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport '../UserProfile/UserProfile.scss';\r\n\r\nexport const TranslatorProfile: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userSelectors.getUser);\r\n  const subjects = useSelector(subjectsSelectors.getSubjects);\r\n  const languages = useSelector(languagesSelectors.getLanguages);\r\n\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [projects, setProjects] = useState<UserProjects | null>(null);\r\n  const [password, setPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n\r\n  const [hasPasswordError, setPasswordError] = useState(false);\r\n  const [isWrongPassword, setWrongPassword] = useState(false);\r\n  const [hasNewPasswordError, setNewPasswordError] = useState(false);\r\n  const [hasEmailError, setEmailError] = useState(false);\r\n  const [hasFirstnameError, setFirstnameError] = useState(false);\r\n  const [hasLastnameError, setLastnameError] = useState(false);\r\n\r\n  const [translatorInfo, setTranslatorInfo] = useState<TranslatorInfo | null>(null);\r\n  const [selectedSubjects, setSelectedSubjects] = useState<number[]>([]);\r\n  const [selectedLanguages, setSelectedLanguages] = useState<LanguagePair[]>([]);\r\n  const [sourceLanguage, setSourceLanguage] = useState(0);\r\n  const [outputLanguage, setOutputLanguage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getProjectsInfo();\r\n        const newTranslatorInfo = await getTranslatorInfo();\r\n\r\n        setProjects(newProjects);\r\n        setTranslatorInfo(newTranslatorInfo);\r\n        setSelectedSubjects(newTranslatorInfo.subjectIds);\r\n        setSelectedLanguages(newTranslatorInfo.languagesPairs);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFirstname(user.firstname);\r\n      setLastname(user.lastname);\r\n      setEmail(user.email);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleUpdate = async () => {\r\n    if (user?.firstname !== firstname || user?.lastname !== lastname) {\r\n      try {\r\n        const newUser = await updateName(firstname, lastname);\r\n\r\n        dispatch(userActions.setUser(newUser));\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (user?.email !== email) {\r\n      try {\r\n        const newUser = await updateEmail(email);\r\n\r\n        dispatch(userActions.setUser(newUser));\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (password && newPassword) {\r\n      try {\r\n        await updatePassword(password, newPassword);\r\n      } catch (e) {\r\n        setWrongPassword(true);\r\n      }\r\n    }\r\n\r\n    try {\r\n      const newTranslatorInfo = await updateTranslatorInfo(selectedSubjects, selectedLanguages);\r\n\r\n      setTranslatorInfo(newTranslatorInfo);\r\n      setSelectedSubjects(newTranslatorInfo.subjectIds);\r\n      setSelectedLanguages(newTranslatorInfo.languagesPairs);\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    if (!emailTest.test(email)) {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setEmailError(false);\r\n    setEmail(value);\r\n  };\r\n\r\n  const validateFirstname = () => {\r\n    if (!firstname) {\r\n      setFirstnameError(true);\r\n    }\r\n  };\r\n\r\n  const handleFirstname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setFirstnameError(false);\r\n    setFirstname(value);\r\n  };\r\n\r\n  const validateLastname = () => {\r\n    if (!lastname) {\r\n      setLastnameError(true);\r\n    }\r\n  };\r\n\r\n  const handleLastname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setLastnameError(false);\r\n    setLastname(value);\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (!passwordTest.test(password) && password) {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setPasswordError(false);\r\n    setWrongPassword(false);\r\n    setPassword(value);\r\n  };\r\n\r\n  const validateNewPassword = () => {\r\n    if (!passwordTest.test(newPassword) && newPassword) {\r\n      setNewPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const handleNewPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setNewPasswordError(false);\r\n    setNewPassword(value);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (user) {\r\n      setFirstname(user.firstname);\r\n      setLastname(user.lastname);\r\n      setEmail(user.email);\r\n    }\r\n\r\n    setPassword('');\r\n    setNewPassword('');\r\n\r\n    setFirstnameError(false);\r\n    setLastnameError(false);\r\n    setEmailError(false);\r\n    setPasswordError(false);\r\n    setNewPasswordError(false);\r\n    setWrongPassword(false);\r\n\r\n    if (translatorInfo) {\r\n      setSelectedLanguages(translatorInfo.languagesPairs);\r\n      setSelectedSubjects(translatorInfo.subjectIds);\r\n    }\r\n  };\r\n\r\n  const handleSubject = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    if (!selectedSubjects.includes(value)) {\r\n      setSelectedSubjects([...selectedSubjects, value]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSubject = (subjectId: number) => {\r\n    const newSelectedSubjects = selectedSubjects.filter(id => id !== subjectId);\r\n\r\n    setSelectedSubjects(newSelectedSubjects);\r\n  };\r\n\r\n  const handleSourceLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setSourceLanguage(value);\r\n  };\r\n\r\n  const handleOutputLanguage = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +event.target.value;\r\n\r\n    setOutputLanguage(value);\r\n  };\r\n\r\n  const handleAddLanguages = () => {\r\n    const isAdded = selectedLanguages.some(language => (\r\n      language.sourceLanguageId === sourceLanguage\r\n      && language.outputLanguageId === outputLanguage\r\n    ));\r\n\r\n    if (sourceLanguage && outputLanguage && !isAdded) {\r\n      setSelectedLanguages([\r\n        ...selectedLanguages,\r\n        {\r\n          sourceLanguageId: sourceLanguage,\r\n          outputLanguageId: outputLanguage,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLanguage = (languagePair: LanguagePair) => {\r\n    const newSelectedLanguages = selectedLanguages.filter(language => language !== languagePair);\r\n\r\n    setSelectedLanguages(newSelectedLanguages);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"user-profile__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"user-profile__container\">\r\n        <div className=\"user-profile__projects-info has-text-white has-text-weight-light\">\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.active}</p>\r\n            <p className=\"is-size-3\"> active projects</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.completed}</p>\r\n            <p className=\"is-size-3\">completed projects</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{`${projects?.money}$`}</p>\r\n            <p className=\"is-size-3\">total income</p>\r\n          </div>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Personal information\r\n        </h2>\r\n\r\n        <div className=\"user-profile__personal-info\">\r\n          <label\r\n            htmlFor=\"firstname\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Firstname:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"firstname\"\r\n                type=\"text\"\r\n                value={firstname}\r\n                onChange={handleFirstname}\r\n                onBlur={validateFirstname}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasFirstnameError },\r\n                )}\r\n              />\r\n              {hasFirstnameError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter your firstname</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"lastname\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Lastname:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"lastname\"\r\n                type=\"text\"\r\n                value={lastname}\r\n                onChange={handleLastname}\r\n                onBlur={validateLastname}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasLastnameError },\r\n                )}\r\n              />\r\n              {hasLastnameError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter a valid email</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Security and privacy\r\n        </h2>\r\n\r\n        <div className=\"user-profile__personal-info\">\r\n          <label\r\n            htmlFor=\"password\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Current password:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={handlePassword}\r\n                onBlur={validatePassword}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasPasswordError || isWrongPassword },\r\n                )}\r\n              />\r\n              {hasPasswordError && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Password must contain at least 8 characters, one digit,\r\n                  one uppercase and lowercase letter\r\n                </p>\r\n              )}\r\n              {isWrongPassword && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Ooops, wrong password.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"newPassword\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            New password:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"newPassword\"\r\n                value={newPassword}\r\n                onChange={handleNewPassword}\r\n                onBlur={validateNewPassword}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasNewPasswordError },\r\n                )}\r\n              />\r\n              {hasNewPasswordError && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Password must contain at least 8 characters, one digit,\r\n                  one uppercase and lowercase letter\r\n                </p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"email\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Email:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={handleEmail}\r\n                onBlur={validateEmail}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasEmailError },\r\n                )}\r\n              />\r\n              {hasEmailError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter a valid email</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Subjects\r\n        </h2>\r\n\r\n        <div className=\"user-profile__subjects\">\r\n          <div className=\"select is-rounded is-medium\">\r\n            <select\r\n              value={0}\r\n              onChange={handleSubject}\r\n              className=\"user-profile__subject-select has-text-weight-light\"\r\n            >\r\n              <option value={0} disabled>Choose  subject(s)</option>\r\n              {subjects.map(subject => (\r\n                <option\r\n                  key={subject.id}\r\n                  value={subject.id}\r\n                >\r\n                  {subject.subject}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"user-profile__selected-subjects\">\r\n            {selectedSubjects.length ? (\r\n              selectedSubjects.map(subjectId => {\r\n                const selectedSubject = subjects.find(subject => subject.id === subjectId);\r\n\r\n                return (\r\n                  <span key={subjectId} className=\"tag is-primary is-rounded\">\r\n                    {selectedSubject?.subject}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"delete is-small\"\r\n                      onClick={() => handleDeleteSubject(subjectId)}\r\n                    >\r\n                    </button>\r\n                  </span>\r\n                );\r\n              })\r\n            ) : (\r\n              <span className=\"has-text-white has-text-weight-light\">\r\n                Please, choose subject fields in order to have access to projects.\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Language pairs\r\n        </h2>\r\n\r\n        <div className=\"user-profile__language-pairs\">\r\n          <div className=\"user-profile__languages\">\r\n            <label\r\n              htmlFor=\"sourceLanguage\"\r\n              className=\"has-text-white has-text-weight-light is-size-4\"\r\n            >\r\n              Translate from:\r\n\r\n              <div className=\"control\">\r\n                <div className=\"user-profile__language-select select is-rounded is-medium\">\r\n                  <select\r\n                    id=\"sourceLanguage\"\r\n                    value={sourceLanguage}\r\n                    onChange={handleSourceLanguage}\r\n                    className=\"user-profile__subject-select has-text-weight-light\"\r\n                  >\r\n                    <option value={0} disabled>Choose language(s)</option>\r\n                    {languages.map(language => (\r\n                      <option\r\n                        key={language.id}\r\n                        value={language.id}\r\n                      >\r\n                        {language.language}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </label>\r\n\r\n            <label\r\n              htmlFor=\"outputLanguage\"\r\n              className=\"has-text-white has-text-weight-light is-size-4\"\r\n            >\r\n              Translate to:\r\n\r\n              <div className=\"control\">\r\n                <div className=\"user-profile__language-select select is-rounded is-medium\">\r\n                  <select\r\n                    id=\"outputLanguage\"\r\n                    value={outputLanguage}\r\n                    onChange={handleOutputLanguage}\r\n                    className=\"user-profile__subject-select has-text-weight-light\"\r\n                  >\r\n                    <option value={0} disabled>Choose language(s)</option>\r\n                    {languages\r\n                      .filter(language => language.id !== sourceLanguage)\r\n                      .map(language => (\r\n                        <option\r\n                          key={language.id}\r\n                          value={language.id}\r\n                        >\r\n                          {language.language}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </label>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"user-profile__add-button user-profile__update button is-rounded is-medium\"\r\n              onClick={handleAddLanguages}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n\r\n          {selectedLanguages.length ? (\r\n            <div className=\"user-profile__table-container table-container\">\r\n              <table className=\"user-profile__table table is-hoverable\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Source language</th>\r\n                    <th>Target language</th>\r\n                    <th>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {selectedLanguages.map(languagePair => {\r\n                    const sourceLang = languages.find(language => (\r\n                      language.id === languagePair.sourceLanguageId\r\n                    ));\r\n                    const outputLang = languages.find(language => (\r\n                      language.id === languagePair.outputLanguageId\r\n                    ));\r\n\r\n                    return (\r\n                      <tr\r\n                        key={`${languagePair.sourceLanguageId}-${languagePair.outputLanguageId}`}\r\n                      >\r\n                        <td>{sourceLang?.language}</td>\r\n                        <td>{outputLang?.language}</td>\r\n                        <td>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"delete\"\r\n                            onClick={() => handleDeleteLanguage(languagePair)}\r\n                          >\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"user-profile__selected-languages\">\r\n              <span className=\"has-text-white has-text-weight-light\">\r\n                Please, choose languages pairs in order to have access to projects.\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"user-profile__button-container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"user-profile__cancel button is-rounded is-medium\"\r\n            onClick={handleCancel}\r\n          >\r\n            Cancel\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            disabled={\r\n              hasEmailError\r\n              || hasPasswordError\r\n              || isWrongPassword\r\n              || hasNewPasswordError\r\n              || hasFirstnameError\r\n              || hasLastnameError\r\n            }\r\n            onClick={handleUpdate}\r\n            className=\"user-profile__update button is-rounded is-medium\"\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { saveProject } from '../../api/quota';\r\nimport {\r\n  getPersonalInfo,\r\n  getProjectsInfo,\r\n  updateEmail,\r\n  updateName,\r\n  updatePassword,\r\n  updatePersonalInfo,\r\n} from '../../api/user';\r\nimport { emailTest, passwordTest } from '../../RegExps';\r\nimport { userActions, userSelectors } from '../../store/user';\r\nimport { PersonalInfo, UserProjects } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport './UserProfile.scss';\r\n\r\nexport const UserProfile: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userSelectors.getUser);\r\n\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [projects, setProjects] = useState<UserProjects | null>(null);\r\n  const [personalInfo, setPersonalInfo] = useState<PersonalInfo | null>(null);\r\n  const [website, setWebsite] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n\r\n  const [hasPasswordError, setPasswordError] = useState(false);\r\n  const [isWrongPassword, setWrongPassword] = useState(false);\r\n  const [hasNewPasswordError, setNewPasswordError] = useState(false);\r\n  const [hasEmailError, setEmailError] = useState(false);\r\n  const [hasFirstnameError, setFirstnameError] = useState(false);\r\n  const [hasLastnameError, setLastnameError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const quoteId = sessionStorage.getItem('quote');\r\n      const preferences = sessionStorage.getItem('preferences');\r\n\r\n      if (quoteId) {\r\n        try {\r\n          await saveProject(quoteId, preferences);\r\n        } catch (e) {\r\n          // eslint-disable-next-line no-console\r\n          console.log(e);\r\n        } finally {\r\n          sessionStorage.removeItem('quote');\r\n          sessionStorage.removeItem('preferences');\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getProjectsInfo();\r\n        const newInfo = await getPersonalInfo();\r\n\r\n        setProjects(newProjects);\r\n        setPersonalInfo(newInfo);\r\n        setWebsite(newInfo.website);\r\n        setCompany(newInfo.company);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFirstname(user.firstname);\r\n      setLastname(user.lastname);\r\n      setEmail(user.email);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleUpdate = async () => {\r\n    if (user?.firstname !== firstname || user?.lastname !== lastname) {\r\n      try {\r\n        const newUser = await updateName(firstname, lastname);\r\n\r\n        dispatch(userActions.setUser(newUser));\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (personalInfo?.website !== website || personalInfo.company !== company) {\r\n      try {\r\n        const newPersonalInfo = await updatePersonalInfo(website, company);\r\n\r\n        setPersonalInfo(newPersonalInfo);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (user?.email !== email) {\r\n      try {\r\n        const newUser = await updateEmail(email);\r\n\r\n        dispatch(userActions.setUser(newUser));\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    }\r\n\r\n    if (password && newPassword) {\r\n      try {\r\n        await updatePassword(password, newPassword);\r\n      } catch (e) {\r\n        setWrongPassword(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    if (!emailTest.test(email)) {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setEmailError(false);\r\n    setEmail(value);\r\n  };\r\n\r\n  const validateFirstname = () => {\r\n    if (!firstname) {\r\n      setFirstnameError(true);\r\n    }\r\n  };\r\n\r\n  const handleFirstname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setFirstnameError(false);\r\n    setFirstname(value);\r\n  };\r\n\r\n  const validateLastname = () => {\r\n    if (!lastname) {\r\n      setLastnameError(true);\r\n    }\r\n  };\r\n\r\n  const handleLastname = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setLastnameError(false);\r\n    setLastname(value);\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (!passwordTest.test(password) && password) {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setPasswordError(false);\r\n    setWrongPassword(false);\r\n    setPassword(value);\r\n  };\r\n\r\n  const validateNewPassword = () => {\r\n    if (!passwordTest.test(newPassword) && newPassword) {\r\n      setNewPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const handleNewPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setNewPasswordError(false);\r\n    setNewPassword(value);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (user) {\r\n      setFirstname(user.firstname);\r\n      setLastname(user.lastname);\r\n      setEmail(user.email);\r\n    }\r\n\r\n    if (personalInfo) {\r\n      setCompany(personalInfo.company);\r\n      setWebsite(personalInfo.website);\r\n    }\r\n\r\n    setPassword('');\r\n    setNewPassword('');\r\n\r\n    setFirstnameError(false);\r\n    setLastnameError(false);\r\n    setEmailError(false);\r\n    setPasswordError(false);\r\n    setNewPasswordError(false);\r\n    setWrongPassword(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"user-profile__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"user-profile__container\">\r\n        <div className=\"user-profile__projects-info has-text-white has-text-weight-light\">\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.active}</p>\r\n            <p className=\"is-size-3\"> active projects</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.completed}</p>\r\n            <p className=\"is-size-3\">completed projects</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{projects?.waiting}</p>\r\n            <p className=\"is-size-3\">waiting for payment</p>\r\n          </div>\r\n\r\n          <div className=\"user-profile__projects-info-data\">\r\n            <p className=\"is-size-1\">{`${projects?.money}$`}</p>\r\n            <p className=\"is-size-3\">total amount</p>\r\n          </div>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Personal information\r\n        </h2>\r\n\r\n        <div className=\"user-profile__personal-info\">\r\n          <label\r\n            htmlFor=\"firstname\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Firstname:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"firstname\"\r\n                type=\"text\"\r\n                value={firstname}\r\n                onChange={handleFirstname}\r\n                onBlur={validateFirstname}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasFirstnameError },\r\n                )}\r\n              />\r\n              {hasFirstnameError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter your firstname</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"lastname\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Lastname:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"lastname\"\r\n                type=\"text\"\r\n                value={lastname}\r\n                onChange={handleLastname}\r\n                onBlur={validateLastname}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasLastnameError },\r\n                )}\r\n              />\r\n              {hasLastnameError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter a valid email</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"company\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Company name:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"company\"\r\n                type=\"text\"\r\n                value={company}\r\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                  setCompany(event.target.value);\r\n                }}\r\n                className=\"user-profile__personal-info-input input is-rounded has-text-weight-light is-medium\"\r\n              />\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"userWebsite\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Website:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"userWebsite\"\r\n                type=\"text\"\r\n                value={website}\r\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                  setWebsite(event.target.value);\r\n                }}\r\n                className=\"user-profile__personal-info-input input is-rounded has-text-weight-light is-medium\"\r\n              />\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <h2 className=\"user-profile__personal-info-title has-text-centered has-text-white has-text-weight-light is-size-3\">\r\n          Security and privacy\r\n        </h2>\r\n\r\n        <div className=\"user-profile__personal-info\">\r\n          <label\r\n            htmlFor=\"password\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Current password:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={handlePassword}\r\n                onBlur={validatePassword}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasPasswordError || isWrongPassword },\r\n                )}\r\n              />\r\n              {hasPasswordError && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Password must contain at least 8 characters, one digit,\r\n                  one uppercase and lowercase letter\r\n                </p>\r\n              )}\r\n              {isWrongPassword && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Ooops, wrong password.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"newPassword\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            New password:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"newPassword\"\r\n                value={newPassword}\r\n                onChange={handleNewPassword}\r\n                onBlur={validateNewPassword}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasNewPasswordError },\r\n                )}\r\n              />\r\n              {hasNewPasswordError && (\r\n                <p className=\"user-profile__error help is-danger\">\r\n                  Password must contain at least 8 characters, one digit,\r\n                  one uppercase and lowercase letter\r\n                </p>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <label\r\n            htmlFor=\"email\"\r\n            className=\"has-text-white has-text-weight-light is-size-4\"\r\n          >\r\n            Email:\r\n\r\n            <div className=\"control\">\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={handleEmail}\r\n                onBlur={validateEmail}\r\n                className={classNames(\r\n                  'user-profile__personal-info-input input is-rounded has-text-weight-light is-medium',\r\n                  { 'is-danger': hasEmailError },\r\n                )}\r\n              />\r\n              {hasEmailError && (\r\n                <p className=\"user-profile__error help is-danger\">Please, enter a valid email</p>\r\n              )}\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"user-profile__button-container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"user-profile__cancel button is-rounded is-medium\"\r\n            onClick={handleCancel}\r\n          >\r\n            Cancel\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            disabled={\r\n              hasEmailError\r\n              || hasPasswordError\r\n              || isWrongPassword\r\n              || hasNewPasswordError\r\n              || hasFirstnameError\r\n              || hasLastnameError\r\n            }\r\n            onClick={handleUpdate}\r\n            className=\"user-profile__update button is-rounded is-medium\"\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { getProjects } from '../../api/projects';\r\nimport { ProjectStatus } from '../../enums';\r\nimport { Project } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport './UserProjects.scss';\r\n\r\nexport const TranslatorProjects: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const [statusProject, setStatusProject] = useState(ProjectStatus.Active);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getProjects(statusProject);\r\n\r\n        setProjects(newProjects);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [statusProject]);\r\n\r\n  const handleTabClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    status: ProjectStatus,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    setStatusProject(status);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"projects-page__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"tabs is-boxed is-medium\">\r\n        <ul className=\"projects-page__list\">\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Active })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Active)}\r\n            >\r\n              Active projects\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Completed })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Completed)}\r\n            >\r\n              Completed projects\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>File name</th>\r\n            <th>Source language</th>\r\n            <th>Target language</th>\r\n            <th>Subject</th>\r\n            <th>Words count</th>\r\n            <th>Translated words</th>\r\n            <th>Start date</th>\r\n            {statusProject === ProjectStatus.Completed && (\r\n              <>\r\n                <th>End date</th>\r\n                <th>Price</th>\r\n              </>\r\n            )}\r\n            <th>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map(project => {\r\n            return (\r\n              <tr key={project.id + project.targetLanguage.languageCode}>\r\n                <td>{project.fileName}</td>\r\n                <td>{project.sourceLanguage.language}</td>\r\n                <td>{project.targetLanguage.language}</td>\r\n                <td>{project.subject.subject}</td>\r\n                <td>{project.wordsCount}</td>\r\n                <td>{project.transaltedWordsCount}</td>\r\n                <td>{new Date(Date.parse(project.startDate)).toDateString()}</td>\r\n                {statusProject === ProjectStatus.Completed && (\r\n                  <>\r\n                    <td>{new Date(Date.parse(project.endDate)).toDateString()}</td>\r\n                    <td>{`${project.price}$`}</td>\r\n                  </>\r\n                )}\r\n                <td>\r\n                  <Link\r\n                    to={`/project/${project.id}/${project.targetLanguage.id}`}\r\n                    className=\"projects-page__table-button\"\r\n                  >\r\n                    View\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import fileDownload from 'js-file-download';\r\nimport { translatorApi } from './apis';\r\nimport { getAuthorizationOptions } from './baseWithAuthorization';\r\n\r\nconst request = async (url: string, options?: RequestInit): Promise<Blob> => {\r\n  const newOptions = await getAuthorizationOptions(options);\r\n\r\n  const response = await fetch(url, newOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error((await response.json()).errorMessage);\r\n  }\r\n\r\n  return response.blob();\r\n};\r\n\r\nexport const downloadFile = async (\r\n  projectId: number,\r\n  targetLangId: number,\r\n  projectName: string,\r\n): Promise<void> => {\r\n  const file = await request(`${translatorApi}/api/Projects/${projectId}/${targetLangId}/file`);\r\n\r\n  fileDownload(file, projectName);\r\n};\r\n","import { clientApi } from './apis';\r\nimport { request } from './baseWithAuthorization';\r\n\r\nexport const payment = (projectId: number, nonce: string): Promise<void> => {\r\n  return request(`${clientApi}/api/Quota`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      projectId,\r\n      nonce,\r\n    }),\r\n  });\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as dropin from 'braintree-web-drop-in';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { payment } from '../../api/payment';\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  setShow: (show: boolean) => void;\r\n  projectId: number;\r\n  onPaymentComplete: () => void;\r\n};\r\n\r\nexport const PaymentModal: React.FC<Props> = ({\r\n  show,\r\n  setShow,\r\n  projectId,\r\n  onPaymentComplete,\r\n}) => {\r\n  const handleError = useErrorHandler();\r\n  const [braintreeInstance, setBraintreeInstance] = useState<dropin.Dropin>();\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      const initializeBraintree = () => dropin.create({\r\n        authorization: 'sandbox_38sfybrb_v8s2m2wz66fvx7zx',\r\n        container: '#braintree-drop-in-div',\r\n      }, (error, instance) => {\r\n        if (error) {\r\n          handleError(error);\r\n        } else {\r\n          setBraintreeInstance(instance);\r\n        }\r\n      });\r\n\r\n      if (braintreeInstance) {\r\n        braintreeInstance\r\n          .teardown()\r\n          .then(() => {\r\n            setBraintreeInstance(undefined);\r\n            initializeBraintree();\r\n          });\r\n      } else {\r\n        initializeBraintree();\r\n      }\r\n    }\r\n  }, [show]);\r\n\r\n  const handlePay = () => {\r\n    if (braintreeInstance) {\r\n      braintreeInstance.requestPaymentMethod(\r\n        async (error, payload) => {\r\n          if (error) {\r\n            handleError(error);\r\n          } else {\r\n            const paymentMethodNonce = payload.nonce;\r\n\r\n            try {\r\n              await payment(projectId, paymentMethodNonce);\r\n              onPaymentComplete();\r\n            } catch (e) {\r\n              handleError(e);\r\n            }\r\n          }\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classNames('modal', { 'is-active': show })}>\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">Project payment</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"delete\"\r\n            aria-label=\"close\"\r\n            onClick={() => setShow(false)}\r\n          >\r\n          </button>\r\n        </header>\r\n        <section className=\"modal-card-body\">\r\n          <div id=\"braintree-drop-in-div\"></div>\r\n        </section>\r\n        <footer className=\"modal-card-foot is-justify-content-flex-end\">\r\n          <button\r\n            type=\"button\"\r\n            disabled={!braintreeInstance}\r\n            onClick={handlePay}\r\n            className=\"button is-dark is-outlined\"\r\n          >\r\n            Pay\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { downloadFile } from '../../api/file';\r\nimport { getProjects } from '../../api/projects';\r\nimport { ProjectStatus } from '../../enums';\r\nimport { Project } from '../../types';\r\nimport { Header } from '../Header/Header';\r\nimport { PaymentModal } from '../PaymentModal/PaymentModal';\r\nimport './UserProjects.scss';\r\n\r\nexport const UserProjects: React.FC = () => {\r\n  const handleError = useErrorHandler();\r\n  const [statusProject, setStatusProject] = useState(ProjectStatus.Unpaid);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedProjectId, setProjectId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const newProjects = await getProjects(statusProject);\r\n\r\n        setProjects(newProjects);\r\n      } catch (error) {\r\n        handleError(error);\r\n      }\r\n    })();\r\n  }, [statusProject]);\r\n\r\n  const handleTabClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    status: ProjectStatus,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    setStatusProject(status);\r\n  };\r\n\r\n  const handlePay = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    id: number,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    setProjectId(id);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const completePayment = async () => {\r\n    setShowModal(false);\r\n    try {\r\n      const newProjects = await getProjects(statusProject);\r\n\r\n      setProjects(newProjects);\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    projectId: number,\r\n    targetLangId: number,\r\n    projectName: string,\r\n  ) => {\r\n    event.nativeEvent.preventDefault();\r\n\r\n    try {\r\n      await downloadFile(projectId, targetLangId, projectName);\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"projects-page__header\">\r\n        <Header />\r\n      </div>\r\n\r\n      <div className=\"tabs is-boxed is-medium\">\r\n        <ul className=\"projects-page__list\">\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Active })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Active)}\r\n            >\r\n              Active projects\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Completed })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Completed)}\r\n            >\r\n              Completed projects\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            className={classNames({ 'is-active': statusProject === ProjectStatus.Unpaid })}\r\n          >\r\n            <a\r\n              href=\"/\"\r\n              onClick={(event) => handleTabClick(event, ProjectStatus.Unpaid)}\r\n            >\r\n              Unpaid projects\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>File name</th>\r\n            <th>Source language</th>\r\n            <th>Target language</th>\r\n            <th>Subject</th>\r\n            <th>Words count</th>\r\n            {statusProject !== ProjectStatus.Unpaid && (\r\n              <th>Start date</th>\r\n            )}\r\n            {statusProject === ProjectStatus.Completed && (\r\n              <th>End date</th>\r\n            )}\r\n            <th>Price</th>\r\n            <th>\r\n            </th>\r\n            {statusProject === ProjectStatus.Completed && (\r\n              <th>\r\n              </th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map(project => {\r\n            return (\r\n              <tr key={project.id + project.targetLanguage.languageCode}>\r\n                <td>{project.fileName}</td>\r\n                <td>{project.sourceLanguage.language}</td>\r\n                <td>{project.targetLanguage.language}</td>\r\n                <td>{project.subject.subject}</td>\r\n                <td>{project.wordsCount}</td>\r\n                {statusProject !== ProjectStatus.Unpaid && (\r\n                  <td>{new Date(Date.parse(project.startDate)).toDateString()}</td>\r\n                )}\r\n                {statusProject === ProjectStatus.Completed && (\r\n                  <td>{new Date(Date.parse(project.endDate)).toDateString()}</td>\r\n                )}\r\n                <td>{`${project.price}$`}</td>\r\n                <td>\r\n                  {statusProject === ProjectStatus.Unpaid ? (\r\n                    <a\r\n                      href=\"/\"\r\n                      className=\"projects-page__table-button\"\r\n                      onClick={(event) => handlePay(event, project.id)}\r\n                    >\r\n                      Pay\r\n                    </a>\r\n                  ) : (\r\n                    <Link\r\n                      to={`/project/${project.id}/${project.targetLanguage.id}`}\r\n                      className=\"projects-page__table-button\"\r\n                    >\r\n                      View\r\n                    </Link>\r\n                  )}\r\n                </td>\r\n                {statusProject === ProjectStatus.Completed && (\r\n                  <td>\r\n                    <a\r\n                      href=\"/\"\r\n                      className=\"projects-page__table-button\"\r\n                      onClick={(event) => handleDownload(\r\n                        event,\r\n                        project.id,\r\n                        project.targetLanguage.id,\r\n                        project.fileName,\r\n                      )}\r\n                    >\r\n                      Download\r\n                    </a>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <PaymentModal\r\n        show={showModal}\r\n        setShow={setShowModal}\r\n        projectId={selectedProjectId}\r\n        onPaymentComplete={completePayment}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header } from '../Header/Header';\r\nimport background from '../../images/not-found.png';\r\n\r\ntype Props = {\r\n  error: Error,\r\n  resetErrorBoundary: () => void,\r\n};\r\n\r\nexport const FallbackComponent: React.FC<Props> = ({ error, resetErrorBoundary }) => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <section className=\"home\">\r\n        <h2 className=\"home__title has-text-weight-light\">{error.message}</h2>\r\n\r\n        <div className=\"columns\">\r\n          <div className=\"home__section column is-half-desktop\">\r\n            <Link\r\n              to=\"/\"\r\n              onClick={resetErrorBoundary}\r\n              className=\"home__button button is-rounded is-medium\"\r\n            >\r\n              Go to home page\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <img\r\n          src={background}\r\n          alt=\"background\"\r\n          className=\"home__background is-hidden-touch\"\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\nimport { getLanguages } from './api/language';\r\nimport { getSubjects } from './api/subject';\r\nimport './App.scss';\r\nimport { SignIn } from './components/Authorization/SignIn';\r\nimport { SignUp } from './components/Authorization/SignUp';\r\nimport { AvailableProjects } from './components/AvailableProjects/AvailableProjects';\r\nimport { HomePage } from './components/HomePage/HomePage';\r\nimport { Project } from './components/Project/Project';\r\nimport { Quote } from './components/Qoute/Quote';\r\nimport { TranslatorProfile } from './components/TranslatorProfile/TranslatorProfile';\r\nimport { UserProfile } from './components/UserProfile/UserProfile';\r\nimport { TranslatorProjects } from './components/UserProjects/TranslatorProjects';\r\nimport { UserProjects } from './components/UserProjects/UserProjects';\r\nimport { AccountType } from './enums';\r\nimport { languagesActions } from './store/language';\r\nimport { subjectsActions } from './store/subject';\r\nimport { userActions, userSelectors } from './store/user';\r\nimport { FallbackComponent } from './components/FallbackComponent/FallbackComponent';\r\n\r\nexport const App: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userSelectors.getUser);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const newSubjects = await getSubjects();\r\n      const newLanguages = await getLanguages();\r\n\r\n      dispatch(subjectsActions.setSubjects(newSubjects));\r\n      dispatch(languagesActions.setLanguages(newLanguages));\r\n      dispatch(userActions.loadUser());\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <ErrorBoundary FallbackComponent={FallbackComponent}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<HomePage />} />\r\n        <Route path=\"/quote\" element={<Quote />} />\r\n        {!user ? (\r\n          <>\r\n            <Route path=\"/sign-in\" element={<SignIn />} />\r\n            <Route path=\"/sign-up\" element={<SignUp />} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route path=\"/profile\" element={user?.accountType === AccountType.User ? <UserProfile /> : <TranslatorProfile />} />\r\n            <Route path=\"/project/:id/:lang\" element={<Project />} />\r\n            <Route path=\"/projects/my\" element={user?.accountType === AccountType.User ? <UserProjects /> : <TranslatorProjects />} />\r\n            <Route path=\"/projects\" element={<AvailableProjects />} />\r\n          </>\r\n        )}\r\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n      </Routes>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { languagesReducer } from './language';\r\nimport { subjectsReducer } from './subject';\r\nimport { userReducer } from './user';\r\n\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  subjects: subjectsReducer,\r\n  languages: languagesReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bulma/main.scss';\r\nimport './index.scss';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}